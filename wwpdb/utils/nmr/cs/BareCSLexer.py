# Generated from BareCSLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,9,225,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,1,0,3,0,39,8,0,1,0,
        1,0,1,1,3,1,44,8,1,1,1,1,1,3,1,48,8,1,1,2,1,2,1,2,1,2,1,2,1,2,3,
        2,56,8,2,1,3,1,3,1,4,4,4,61,8,4,11,4,12,4,62,1,5,4,5,66,8,5,11,5,
        12,5,67,1,5,5,5,71,8,5,10,5,12,5,74,9,5,1,5,5,5,77,8,5,10,5,12,5,
        80,9,5,1,5,5,5,83,8,5,10,5,12,5,86,9,5,1,5,1,5,1,6,4,6,91,8,6,11,
        6,12,6,92,1,6,5,6,96,8,6,10,6,12,6,99,9,6,1,6,5,6,102,8,6,10,6,12,
        6,105,9,6,1,6,5,6,108,8,6,10,6,12,6,111,9,6,1,6,1,6,1,7,1,7,1,8,
        1,8,1,9,1,9,3,9,121,8,9,1,10,1,10,3,10,125,8,10,1,11,1,11,3,11,129,
        8,11,1,12,1,12,5,12,133,8,12,10,12,12,12,136,9,12,1,13,4,13,139,
        8,13,11,13,12,13,140,1,13,1,13,1,14,4,14,146,8,14,11,14,12,14,147,
        1,15,1,15,1,16,1,16,1,16,4,16,155,8,16,11,16,12,16,156,1,16,1,16,
        4,16,161,8,16,11,16,12,16,162,1,16,1,16,4,16,167,8,16,11,16,12,16,
        168,1,16,1,16,1,16,1,16,1,16,1,16,3,16,177,8,16,1,16,5,16,180,8,
        16,10,16,12,16,183,9,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,4,17,
        192,8,17,11,17,12,17,193,1,17,1,17,4,17,198,8,17,11,17,12,17,199,
        1,17,1,17,4,17,204,8,17,11,17,12,17,205,1,17,1,17,1,17,1,17,1,17,
        1,17,3,17,214,8,17,1,17,5,17,217,8,17,10,17,12,17,220,9,17,1,17,
        1,17,1,17,1,17,0,0,18,1,1,3,2,5,0,7,0,9,0,11,3,13,4,15,5,17,0,19,
        0,21,0,23,0,25,0,27,6,29,7,31,0,33,8,35,9,1,0,8,2,0,43,43,45,45,
        1,0,48,57,2,0,10,10,13,13,2,0,65,90,97,122,6,0,40,40,42,43,45,46,
        63,63,95,95,123,123,8,0,34,35,37,37,39,39,41,41,44,44,47,47,59,59,
        124,125,3,0,9,9,32,32,44,44,7,0,33,33,35,35,38,38,42,42,47,47,61,
        61,92,92,250,0,1,1,0,0,0,0,3,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
        15,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,1,
        38,1,0,0,0,3,43,1,0,0,0,5,55,1,0,0,0,7,57,1,0,0,0,9,60,1,0,0,0,11,
        65,1,0,0,0,13,90,1,0,0,0,15,114,1,0,0,0,17,116,1,0,0,0,19,120,1,
        0,0,0,21,124,1,0,0,0,23,128,1,0,0,0,25,130,1,0,0,0,27,138,1,0,0,
        0,29,145,1,0,0,0,31,149,1,0,0,0,33,176,1,0,0,0,35,213,1,0,0,0,37,
        39,7,0,0,0,38,37,1,0,0,0,38,39,1,0,0,0,39,40,1,0,0,0,40,41,3,9,4,
        0,41,2,1,0,0,0,42,44,7,0,0,0,43,42,1,0,0,0,43,44,1,0,0,0,44,47,1,
        0,0,0,45,48,3,9,4,0,46,48,3,5,2,0,47,45,1,0,0,0,47,46,1,0,0,0,48,
        4,1,0,0,0,49,50,3,9,4,0,50,51,5,46,0,0,51,52,3,9,4,0,52,56,1,0,0,
        0,53,54,5,46,0,0,54,56,3,9,4,0,55,49,1,0,0,0,55,53,1,0,0,0,56,6,
        1,0,0,0,57,58,7,1,0,0,58,8,1,0,0,0,59,61,3,7,3,0,60,59,1,0,0,0,61,
        62,1,0,0,0,62,60,1,0,0,0,62,63,1,0,0,0,63,10,1,0,0,0,64,66,5,35,
        0,0,65,64,1,0,0,0,66,67,1,0,0,0,67,65,1,0,0,0,67,68,1,0,0,0,68,72,
        1,0,0,0,69,71,8,2,0,0,70,69,1,0,0,0,71,74,1,0,0,0,72,70,1,0,0,0,
        72,73,1,0,0,0,73,78,1,0,0,0,74,72,1,0,0,0,75,77,5,35,0,0,76,75,1,
        0,0,0,77,80,1,0,0,0,78,76,1,0,0,0,78,79,1,0,0,0,79,84,1,0,0,0,80,
        78,1,0,0,0,81,83,8,2,0,0,82,81,1,0,0,0,83,86,1,0,0,0,84,82,1,0,0,
        0,84,85,1,0,0,0,85,87,1,0,0,0,86,84,1,0,0,0,87,88,6,5,0,0,88,12,
        1,0,0,0,89,91,5,33,0,0,90,89,1,0,0,0,91,92,1,0,0,0,92,90,1,0,0,0,
        92,93,1,0,0,0,93,97,1,0,0,0,94,96,8,2,0,0,95,94,1,0,0,0,96,99,1,
        0,0,0,97,95,1,0,0,0,97,98,1,0,0,0,98,103,1,0,0,0,99,97,1,0,0,0,100,
        102,5,33,0,0,101,100,1,0,0,0,102,105,1,0,0,0,103,101,1,0,0,0,103,
        104,1,0,0,0,104,109,1,0,0,0,105,103,1,0,0,0,106,108,8,2,0,0,107,
        106,1,0,0,0,108,111,1,0,0,0,109,107,1,0,0,0,109,110,1,0,0,0,110,
        112,1,0,0,0,111,109,1,0,0,0,112,113,6,6,0,0,113,14,1,0,0,0,114,115,
        3,25,12,0,115,16,1,0,0,0,116,117,7,3,0,0,117,18,1,0,0,0,118,121,
        3,17,8,0,119,121,3,7,3,0,120,118,1,0,0,0,120,119,1,0,0,0,121,20,
        1,0,0,0,122,125,3,19,9,0,123,125,7,4,0,0,124,122,1,0,0,0,124,123,
        1,0,0,0,125,22,1,0,0,0,126,129,3,21,10,0,127,129,7,5,0,0,128,126,
        1,0,0,0,128,127,1,0,0,0,129,24,1,0,0,0,130,134,3,21,10,0,131,133,
        3,23,11,0,132,131,1,0,0,0,133,136,1,0,0,0,134,132,1,0,0,0,134,135,
        1,0,0,0,135,26,1,0,0,0,136,134,1,0,0,0,137,139,7,6,0,0,138,137,1,
        0,0,0,139,140,1,0,0,0,140,138,1,0,0,0,140,141,1,0,0,0,141,142,1,
        0,0,0,142,143,6,13,1,0,143,28,1,0,0,0,144,146,7,2,0,0,145,144,1,
        0,0,0,146,147,1,0,0,0,147,145,1,0,0,0,147,148,1,0,0,0,148,30,1,0,
        0,0,149,150,7,7,0,0,150,32,1,0,0,0,151,177,3,31,15,0,152,154,3,31,
        15,0,153,155,5,47,0,0,154,153,1,0,0,0,155,156,1,0,0,0,156,154,1,
        0,0,0,156,157,1,0,0,0,157,177,1,0,0,0,158,160,3,31,15,0,159,161,
        5,42,0,0,160,159,1,0,0,0,161,162,1,0,0,0,162,160,1,0,0,0,162,163,
        1,0,0,0,163,177,1,0,0,0,164,166,3,31,15,0,165,167,5,61,0,0,166,165,
        1,0,0,0,167,168,1,0,0,0,168,166,1,0,0,0,168,169,1,0,0,0,169,177,
        1,0,0,0,170,171,5,82,0,0,171,172,5,69,0,0,172,173,5,77,0,0,173,174,
        5,65,0,0,174,175,5,82,0,0,175,177,5,75,0,0,176,151,1,0,0,0,176,152,
        1,0,0,0,176,158,1,0,0,0,176,164,1,0,0,0,176,170,1,0,0,0,177,181,
        1,0,0,0,178,180,5,32,0,0,179,178,1,0,0,0,180,183,1,0,0,0,181,179,
        1,0,0,0,181,182,1,0,0,0,182,184,1,0,0,0,183,181,1,0,0,0,184,185,
        3,29,14,0,185,186,1,0,0,0,186,187,6,16,0,0,187,34,1,0,0,0,188,214,
        3,31,15,0,189,191,3,31,15,0,190,192,5,47,0,0,191,190,1,0,0,0,192,
        193,1,0,0,0,193,191,1,0,0,0,193,194,1,0,0,0,194,214,1,0,0,0,195,
        197,3,31,15,0,196,198,5,42,0,0,197,196,1,0,0,0,198,199,1,0,0,0,199,
        197,1,0,0,0,199,200,1,0,0,0,200,214,1,0,0,0,201,203,3,31,15,0,202,
        204,5,61,0,0,203,202,1,0,0,0,204,205,1,0,0,0,205,203,1,0,0,0,205,
        206,1,0,0,0,206,214,1,0,0,0,207,208,5,82,0,0,208,209,5,69,0,0,209,
        210,5,77,0,0,210,211,5,65,0,0,211,212,5,82,0,0,212,214,5,75,0,0,
        213,188,1,0,0,0,213,189,1,0,0,0,213,195,1,0,0,0,213,201,1,0,0,0,
        213,207,1,0,0,0,214,218,1,0,0,0,215,217,8,2,0,0,216,215,1,0,0,0,
        217,220,1,0,0,0,218,216,1,0,0,0,218,219,1,0,0,0,219,221,1,0,0,0,
        220,218,1,0,0,0,221,222,3,29,14,0,222,223,1,0,0,0,223,224,6,17,0,
        0,224,36,1,0,0,0,30,0,38,43,47,55,62,67,72,78,84,92,97,103,109,120,
        124,128,134,140,147,156,162,168,176,181,193,199,205,213,218,2,0,
        1,0,6,0,0
    ]

class BareCSLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Integer = 1
    Float = 2
    SHARP_COMMENT = 3
    EXCLM_COMMENT = 4
    Simple_name = 5
    SPACE = 6
    RETURN = 7
    SECTION_COMMENT = 8
    LINE_COMMENT = 9

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "Integer", "Float", "SHARP_COMMENT", "EXCLM_COMMENT", "Simple_name", 
            "SPACE", "RETURN", "SECTION_COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "Integer", "Float", "DEC_DOT_DEC", "DEC_DIGIT", "DECIMAL", 
                  "SHARP_COMMENT", "EXCLM_COMMENT", "Simple_name", "ALPHA", 
                  "ALPHA_NUM", "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", 
                  "SPACE", "RETURN", "COMMENT_START_CHAR", "SECTION_COMMENT", 
                  "LINE_COMMENT" ]

    grammarFileName = "BareCSLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


