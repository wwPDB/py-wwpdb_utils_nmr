# Generated from BareCSLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,243,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,1,0,3,0,45,8,0,1,0,1,0,1,1,3,1,50,8,1,1,1,1,1,3,1,54,
        8,1,1,2,1,2,1,2,1,2,1,2,1,2,3,2,62,8,2,1,3,1,3,1,4,4,4,67,8,4,11,
        4,12,4,68,1,5,4,5,72,8,5,11,5,12,5,73,1,5,5,5,77,8,5,10,5,12,5,80,
        9,5,1,5,5,5,83,8,5,10,5,12,5,86,9,5,1,5,5,5,89,8,5,10,5,12,5,92,
        9,5,1,5,1,5,1,6,4,6,97,8,6,11,6,12,6,98,1,6,5,6,102,8,6,10,6,12,
        6,105,9,6,1,6,5,6,108,8,6,10,6,12,6,111,9,6,1,6,5,6,114,8,6,10,6,
        12,6,117,9,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,3,9,127,8,9,1,10,1,
        10,3,10,131,8,10,1,11,1,11,3,11,135,8,11,1,12,1,12,5,12,139,8,12,
        10,12,12,12,142,9,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,
        1,15,1,15,1,15,1,16,4,16,157,8,16,11,16,12,16,158,1,16,1,16,1,17,
        4,17,164,8,17,11,17,12,17,165,1,18,1,18,1,19,1,19,1,19,4,19,173,
        8,19,11,19,12,19,174,1,19,1,19,4,19,179,8,19,11,19,12,19,180,1,19,
        1,19,4,19,185,8,19,11,19,12,19,186,1,19,1,19,1,19,1,19,1,19,1,19,
        3,19,195,8,19,1,19,5,19,198,8,19,10,19,12,19,201,9,19,1,19,1,19,
        1,19,1,19,1,20,1,20,1,20,4,20,210,8,20,11,20,12,20,211,1,20,1,20,
        4,20,216,8,20,11,20,12,20,217,1,20,1,20,4,20,222,8,20,11,20,12,20,
        223,1,20,1,20,1,20,1,20,1,20,1,20,3,20,232,8,20,1,20,5,20,235,8,
        20,10,20,12,20,238,9,20,1,20,1,20,1,20,1,20,0,0,21,1,1,3,2,5,0,7,
        0,9,0,11,3,13,4,15,5,17,0,19,0,21,0,23,0,25,0,27,6,29,7,31,8,33,
        9,35,10,37,0,39,11,41,12,1,0,8,2,0,43,43,45,45,1,0,48,57,2,0,10,
        10,13,13,2,0,65,90,97,122,6,0,40,40,42,43,45,46,63,63,95,95,123,
        123,7,0,34,35,37,37,39,39,41,41,47,47,59,59,124,125,3,0,9,9,32,32,
        44,44,6,0,33,33,35,35,38,38,47,47,61,61,92,92,268,0,1,1,0,0,0,0,
        3,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,27,1,0,0,0,0,
        29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,39,1,0,0,0,0,
        41,1,0,0,0,1,44,1,0,0,0,3,49,1,0,0,0,5,61,1,0,0,0,7,63,1,0,0,0,9,
        66,1,0,0,0,11,71,1,0,0,0,13,96,1,0,0,0,15,120,1,0,0,0,17,122,1,0,
        0,0,19,126,1,0,0,0,21,130,1,0,0,0,23,134,1,0,0,0,25,136,1,0,0,0,
        27,143,1,0,0,0,29,147,1,0,0,0,31,151,1,0,0,0,33,156,1,0,0,0,35,163,
        1,0,0,0,37,167,1,0,0,0,39,194,1,0,0,0,41,231,1,0,0,0,43,45,7,0,0,
        0,44,43,1,0,0,0,44,45,1,0,0,0,45,46,1,0,0,0,46,47,3,9,4,0,47,2,1,
        0,0,0,48,50,7,0,0,0,49,48,1,0,0,0,49,50,1,0,0,0,50,53,1,0,0,0,51,
        54,3,9,4,0,52,54,3,5,2,0,53,51,1,0,0,0,53,52,1,0,0,0,54,4,1,0,0,
        0,55,56,3,9,4,0,56,57,5,46,0,0,57,58,3,9,4,0,58,62,1,0,0,0,59,60,
        5,46,0,0,60,62,3,9,4,0,61,55,1,0,0,0,61,59,1,0,0,0,62,6,1,0,0,0,
        63,64,7,1,0,0,64,8,1,0,0,0,65,67,3,7,3,0,66,65,1,0,0,0,67,68,1,0,
        0,0,68,66,1,0,0,0,68,69,1,0,0,0,69,10,1,0,0,0,70,72,5,35,0,0,71,
        70,1,0,0,0,72,73,1,0,0,0,73,71,1,0,0,0,73,74,1,0,0,0,74,78,1,0,0,
        0,75,77,8,2,0,0,76,75,1,0,0,0,77,80,1,0,0,0,78,76,1,0,0,0,78,79,
        1,0,0,0,79,84,1,0,0,0,80,78,1,0,0,0,81,83,5,35,0,0,82,81,1,0,0,0,
        83,86,1,0,0,0,84,82,1,0,0,0,84,85,1,0,0,0,85,90,1,0,0,0,86,84,1,
        0,0,0,87,89,8,2,0,0,88,87,1,0,0,0,89,92,1,0,0,0,90,88,1,0,0,0,90,
        91,1,0,0,0,91,93,1,0,0,0,92,90,1,0,0,0,93,94,6,5,0,0,94,12,1,0,0,
        0,95,97,5,33,0,0,96,95,1,0,0,0,97,98,1,0,0,0,98,96,1,0,0,0,98,99,
        1,0,0,0,99,103,1,0,0,0,100,102,8,2,0,0,101,100,1,0,0,0,102,105,1,
        0,0,0,103,101,1,0,0,0,103,104,1,0,0,0,104,109,1,0,0,0,105,103,1,
        0,0,0,106,108,5,33,0,0,107,106,1,0,0,0,108,111,1,0,0,0,109,107,1,
        0,0,0,109,110,1,0,0,0,110,115,1,0,0,0,111,109,1,0,0,0,112,114,8,
        2,0,0,113,112,1,0,0,0,114,117,1,0,0,0,115,113,1,0,0,0,115,116,1,
        0,0,0,116,118,1,0,0,0,117,115,1,0,0,0,118,119,6,6,0,0,119,14,1,0,
        0,0,120,121,3,25,12,0,121,16,1,0,0,0,122,123,7,3,0,0,123,18,1,0,
        0,0,124,127,3,17,8,0,125,127,3,7,3,0,126,124,1,0,0,0,126,125,1,0,
        0,0,127,20,1,0,0,0,128,131,3,19,9,0,129,131,7,4,0,0,130,128,1,0,
        0,0,130,129,1,0,0,0,131,22,1,0,0,0,132,135,3,21,10,0,133,135,7,5,
        0,0,134,132,1,0,0,0,134,133,1,0,0,0,135,24,1,0,0,0,136,140,3,21,
        10,0,137,139,3,23,11,0,138,137,1,0,0,0,139,142,1,0,0,0,140,138,1,
        0,0,0,140,141,1,0,0,0,141,26,1,0,0,0,142,140,1,0,0,0,143,144,5,34,
        0,0,144,145,3,25,12,0,145,146,5,34,0,0,146,28,1,0,0,0,147,148,5,
        34,0,0,148,149,3,1,0,0,149,150,5,34,0,0,150,30,1,0,0,0,151,152,5,
        34,0,0,152,153,3,3,1,0,153,154,5,34,0,0,154,32,1,0,0,0,155,157,7,
        6,0,0,156,155,1,0,0,0,157,158,1,0,0,0,158,156,1,0,0,0,158,159,1,
        0,0,0,159,160,1,0,0,0,160,161,6,16,1,0,161,34,1,0,0,0,162,164,7,
        2,0,0,163,162,1,0,0,0,164,165,1,0,0,0,165,163,1,0,0,0,165,166,1,
        0,0,0,166,36,1,0,0,0,167,168,7,7,0,0,168,38,1,0,0,0,169,195,3,37,
        18,0,170,172,3,37,18,0,171,173,5,47,0,0,172,171,1,0,0,0,173,174,
        1,0,0,0,174,172,1,0,0,0,174,175,1,0,0,0,175,195,1,0,0,0,176,178,
        3,37,18,0,177,179,5,42,0,0,178,177,1,0,0,0,179,180,1,0,0,0,180,178,
        1,0,0,0,180,181,1,0,0,0,181,195,1,0,0,0,182,184,3,37,18,0,183,185,
        5,61,0,0,184,183,1,0,0,0,185,186,1,0,0,0,186,184,1,0,0,0,186,187,
        1,0,0,0,187,195,1,0,0,0,188,189,5,82,0,0,189,190,5,69,0,0,190,191,
        5,77,0,0,191,192,5,65,0,0,192,193,5,82,0,0,193,195,5,75,0,0,194,
        169,1,0,0,0,194,170,1,0,0,0,194,176,1,0,0,0,194,182,1,0,0,0,194,
        188,1,0,0,0,195,199,1,0,0,0,196,198,5,32,0,0,197,196,1,0,0,0,198,
        201,1,0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,200,202,1,0,0,0,201,
        199,1,0,0,0,202,203,3,35,17,0,203,204,1,0,0,0,204,205,6,19,0,0,205,
        40,1,0,0,0,206,232,3,37,18,0,207,209,3,37,18,0,208,210,5,47,0,0,
        209,208,1,0,0,0,210,211,1,0,0,0,211,209,1,0,0,0,211,212,1,0,0,0,
        212,232,1,0,0,0,213,215,3,37,18,0,214,216,5,42,0,0,215,214,1,0,0,
        0,216,217,1,0,0,0,217,215,1,0,0,0,217,218,1,0,0,0,218,232,1,0,0,
        0,219,221,3,37,18,0,220,222,5,61,0,0,221,220,1,0,0,0,222,223,1,0,
        0,0,223,221,1,0,0,0,223,224,1,0,0,0,224,232,1,0,0,0,225,226,5,82,
        0,0,226,227,5,69,0,0,227,228,5,77,0,0,228,229,5,65,0,0,229,230,5,
        82,0,0,230,232,5,75,0,0,231,206,1,0,0,0,231,207,1,0,0,0,231,213,
        1,0,0,0,231,219,1,0,0,0,231,225,1,0,0,0,232,236,1,0,0,0,233,235,
        8,2,0,0,234,233,1,0,0,0,235,238,1,0,0,0,236,234,1,0,0,0,236,237,
        1,0,0,0,237,239,1,0,0,0,238,236,1,0,0,0,239,240,3,35,17,0,240,241,
        1,0,0,0,241,242,6,20,0,0,242,42,1,0,0,0,30,0,44,49,53,61,68,73,78,
        84,90,98,103,109,115,126,130,134,140,158,165,174,180,186,194,199,
        211,217,223,231,236,2,0,1,0,6,0,0
    ]

class BareCSLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Integer = 1
    Float = 2
    SHARP_COMMENT = 3
    EXCLM_COMMENT = 4
    Simple_name = 5
    Double_quote_string = 6
    Double_quote_integer = 7
    Double_quote_float = 8
    SPACE = 9
    RETURN = 10
    SECTION_COMMENT = 11
    LINE_COMMENT = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "Integer", "Float", "SHARP_COMMENT", "EXCLM_COMMENT", "Simple_name", 
            "Double_quote_string", "Double_quote_integer", "Double_quote_float", 
            "SPACE", "RETURN", "SECTION_COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "Integer", "Float", "DEC_DOT_DEC", "DEC_DIGIT", "DECIMAL", 
                  "SHARP_COMMENT", "EXCLM_COMMENT", "Simple_name", "ALPHA", 
                  "ALPHA_NUM", "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", 
                  "Double_quote_string", "Double_quote_integer", "Double_quote_float", 
                  "SPACE", "RETURN", "COMMENT_START_CHAR", "SECTION_COMMENT", 
                  "LINE_COMMENT" ]

    grammarFileName = "BareCSLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


