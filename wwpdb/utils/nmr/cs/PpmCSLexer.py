# Generated from PpmCSLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,11,252,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,1,0,3,0,45,8,0,1,0,1,0,1,1,3,1,50,8,1,1,1,1,1,3,1,54,
        8,1,1,2,1,2,1,2,1,2,1,2,1,2,3,2,62,8,2,1,3,1,3,1,4,4,4,67,8,4,11,
        4,12,4,68,1,5,1,5,1,6,4,6,74,8,6,11,6,12,6,75,1,6,5,6,79,8,6,10,
        6,12,6,82,9,6,1,6,5,6,85,8,6,10,6,12,6,88,9,6,1,6,5,6,91,8,6,10,
        6,12,6,94,9,6,1,6,1,6,1,7,4,7,99,8,7,11,7,12,7,100,1,7,5,7,104,8,
        7,10,7,12,7,107,9,7,1,7,5,7,110,8,7,10,7,12,7,113,9,7,1,7,5,7,116,
        8,7,10,7,12,7,119,9,7,1,7,1,7,1,8,1,8,3,8,125,8,8,1,8,1,8,1,8,1,
        9,1,9,3,9,132,8,9,1,9,1,9,1,9,3,9,137,8,9,1,9,1,9,1,9,1,10,1,10,
        1,11,1,11,1,12,1,12,3,12,148,8,12,1,13,1,13,3,13,152,8,13,1,14,1,
        14,3,14,156,8,14,1,15,1,15,5,15,160,8,15,10,15,12,15,163,9,15,1,
        16,4,16,166,8,16,11,16,12,16,167,1,16,1,16,1,17,4,17,173,8,17,11,
        17,12,17,174,1,18,1,18,1,19,1,19,1,19,4,19,182,8,19,11,19,12,19,
        183,1,19,1,19,4,19,188,8,19,11,19,12,19,189,1,19,1,19,4,19,194,8,
        19,11,19,12,19,195,1,19,1,19,1,19,1,19,1,19,1,19,3,19,204,8,19,1,
        19,5,19,207,8,19,10,19,12,19,210,9,19,1,19,1,19,1,19,1,19,1,20,1,
        20,1,20,4,20,219,8,20,11,20,12,20,220,1,20,1,20,4,20,225,8,20,11,
        20,12,20,226,1,20,1,20,4,20,231,8,20,11,20,12,20,232,1,20,1,20,1,
        20,1,20,1,20,1,20,3,20,241,8,20,1,20,5,20,244,8,20,10,20,12,20,247,
        9,20,1,20,1,20,1,20,1,20,0,0,21,1,1,3,2,5,0,7,0,9,0,11,0,13,3,15,
        4,17,5,19,6,21,7,23,0,25,0,27,0,29,0,31,0,33,8,35,9,37,0,39,10,41,
        11,1,0,9,2,0,43,43,45,45,1,0,48,57,4,0,44,44,47,47,58,58,124,124,
        2,0,10,10,13,13,2,0,65,90,97,122,6,0,40,40,42,43,45,46,63,63,95,
        95,123,123,8,0,34,35,37,37,39,39,41,41,44,44,47,47,59,59,124,125,
        2,0,9,9,32,32,6,0,33,33,35,35,38,38,47,47,61,61,92,92,279,0,1,1,
        0,0,0,0,3,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,39,1,0,0,0,0,41,1,
        0,0,0,1,44,1,0,0,0,3,49,1,0,0,0,5,61,1,0,0,0,7,63,1,0,0,0,9,66,1,
        0,0,0,11,70,1,0,0,0,13,73,1,0,0,0,15,98,1,0,0,0,17,124,1,0,0,0,19,
        131,1,0,0,0,21,141,1,0,0,0,23,143,1,0,0,0,25,147,1,0,0,0,27,151,
        1,0,0,0,29,155,1,0,0,0,31,157,1,0,0,0,33,165,1,0,0,0,35,172,1,0,
        0,0,37,176,1,0,0,0,39,203,1,0,0,0,41,240,1,0,0,0,43,45,7,0,0,0,44,
        43,1,0,0,0,44,45,1,0,0,0,45,46,1,0,0,0,46,47,3,9,4,0,47,2,1,0,0,
        0,48,50,7,0,0,0,49,48,1,0,0,0,49,50,1,0,0,0,50,53,1,0,0,0,51,54,
        3,9,4,0,52,54,3,5,2,0,53,51,1,0,0,0,53,52,1,0,0,0,54,4,1,0,0,0,55,
        56,3,9,4,0,56,57,5,46,0,0,57,58,3,9,4,0,58,62,1,0,0,0,59,60,5,46,
        0,0,60,62,3,9,4,0,61,55,1,0,0,0,61,59,1,0,0,0,62,6,1,0,0,0,63,64,
        7,1,0,0,64,8,1,0,0,0,65,67,3,7,3,0,66,65,1,0,0,0,67,68,1,0,0,0,68,
        66,1,0,0,0,68,69,1,0,0,0,69,10,1,0,0,0,70,71,7,2,0,0,71,12,1,0,0,
        0,72,74,5,35,0,0,73,72,1,0,0,0,74,75,1,0,0,0,75,73,1,0,0,0,75,76,
        1,0,0,0,76,80,1,0,0,0,77,79,8,3,0,0,78,77,1,0,0,0,79,82,1,0,0,0,
        80,78,1,0,0,0,80,81,1,0,0,0,81,86,1,0,0,0,82,80,1,0,0,0,83,85,5,
        35,0,0,84,83,1,0,0,0,85,88,1,0,0,0,86,84,1,0,0,0,86,87,1,0,0,0,87,
        92,1,0,0,0,88,86,1,0,0,0,89,91,8,3,0,0,90,89,1,0,0,0,91,94,1,0,0,
        0,92,90,1,0,0,0,92,93,1,0,0,0,93,95,1,0,0,0,94,92,1,0,0,0,95,96,
        6,6,0,0,96,14,1,0,0,0,97,99,5,33,0,0,98,97,1,0,0,0,99,100,1,0,0,
        0,100,98,1,0,0,0,100,101,1,0,0,0,101,105,1,0,0,0,102,104,8,3,0,0,
        103,102,1,0,0,0,104,107,1,0,0,0,105,103,1,0,0,0,105,106,1,0,0,0,
        106,111,1,0,0,0,107,105,1,0,0,0,108,110,5,33,0,0,109,108,1,0,0,0,
        110,113,1,0,0,0,111,109,1,0,0,0,111,112,1,0,0,0,112,117,1,0,0,0,
        113,111,1,0,0,0,114,116,8,3,0,0,115,114,1,0,0,0,116,119,1,0,0,0,
        117,115,1,0,0,0,117,118,1,0,0,0,118,120,1,0,0,0,119,117,1,0,0,0,
        120,121,6,7,0,0,121,16,1,0,0,0,122,125,3,1,0,0,123,125,3,31,15,0,
        124,122,1,0,0,0,124,123,1,0,0,0,125,126,1,0,0,0,126,127,3,11,5,0,
        127,128,3,31,15,0,128,18,1,0,0,0,129,132,3,1,0,0,130,132,3,31,15,
        0,131,129,1,0,0,0,131,130,1,0,0,0,132,133,1,0,0,0,133,136,3,11,5,
        0,134,137,3,1,0,0,135,137,3,31,15,0,136,134,1,0,0,0,136,135,1,0,
        0,0,137,138,1,0,0,0,138,139,3,11,5,0,139,140,3,31,15,0,140,20,1,
        0,0,0,141,142,3,31,15,0,142,22,1,0,0,0,143,144,7,4,0,0,144,24,1,
        0,0,0,145,148,3,23,11,0,146,148,3,7,3,0,147,145,1,0,0,0,147,146,
        1,0,0,0,148,26,1,0,0,0,149,152,3,25,12,0,150,152,7,5,0,0,151,149,
        1,0,0,0,151,150,1,0,0,0,152,28,1,0,0,0,153,156,3,27,13,0,154,156,
        7,6,0,0,155,153,1,0,0,0,155,154,1,0,0,0,156,30,1,0,0,0,157,161,3,
        27,13,0,158,160,3,29,14,0,159,158,1,0,0,0,160,163,1,0,0,0,161,159,
        1,0,0,0,161,162,1,0,0,0,162,32,1,0,0,0,163,161,1,0,0,0,164,166,7,
        7,0,0,165,164,1,0,0,0,166,167,1,0,0,0,167,165,1,0,0,0,167,168,1,
        0,0,0,168,169,1,0,0,0,169,170,6,16,1,0,170,34,1,0,0,0,171,173,7,
        3,0,0,172,171,1,0,0,0,173,174,1,0,0,0,174,172,1,0,0,0,174,175,1,
        0,0,0,175,36,1,0,0,0,176,177,7,8,0,0,177,38,1,0,0,0,178,204,3,37,
        18,0,179,181,3,37,18,0,180,182,5,47,0,0,181,180,1,0,0,0,182,183,
        1,0,0,0,183,181,1,0,0,0,183,184,1,0,0,0,184,204,1,0,0,0,185,187,
        3,37,18,0,186,188,5,42,0,0,187,186,1,0,0,0,188,189,1,0,0,0,189,187,
        1,0,0,0,189,190,1,0,0,0,190,204,1,0,0,0,191,193,3,37,18,0,192,194,
        5,61,0,0,193,192,1,0,0,0,194,195,1,0,0,0,195,193,1,0,0,0,195,196,
        1,0,0,0,196,204,1,0,0,0,197,198,5,82,0,0,198,199,5,69,0,0,199,200,
        5,77,0,0,200,201,5,65,0,0,201,202,5,82,0,0,202,204,5,75,0,0,203,
        178,1,0,0,0,203,179,1,0,0,0,203,185,1,0,0,0,203,191,1,0,0,0,203,
        197,1,0,0,0,204,208,1,0,0,0,205,207,5,32,0,0,206,205,1,0,0,0,207,
        210,1,0,0,0,208,206,1,0,0,0,208,209,1,0,0,0,209,211,1,0,0,0,210,
        208,1,0,0,0,211,212,3,35,17,0,212,213,1,0,0,0,213,214,6,19,0,0,214,
        40,1,0,0,0,215,241,3,37,18,0,216,218,3,37,18,0,217,219,5,47,0,0,
        218,217,1,0,0,0,219,220,1,0,0,0,220,218,1,0,0,0,220,221,1,0,0,0,
        221,241,1,0,0,0,222,224,3,37,18,0,223,225,5,42,0,0,224,223,1,0,0,
        0,225,226,1,0,0,0,226,224,1,0,0,0,226,227,1,0,0,0,227,241,1,0,0,
        0,228,230,3,37,18,0,229,231,5,61,0,0,230,229,1,0,0,0,231,232,1,0,
        0,0,232,230,1,0,0,0,232,233,1,0,0,0,233,241,1,0,0,0,234,235,5,82,
        0,0,235,236,5,69,0,0,236,237,5,77,0,0,237,238,5,65,0,0,238,239,5,
        82,0,0,239,241,5,75,0,0,240,215,1,0,0,0,240,216,1,0,0,0,240,222,
        1,0,0,0,240,228,1,0,0,0,240,234,1,0,0,0,241,245,1,0,0,0,242,244,
        8,3,0,0,243,242,1,0,0,0,244,247,1,0,0,0,245,243,1,0,0,0,245,246,
        1,0,0,0,246,248,1,0,0,0,247,245,1,0,0,0,248,249,3,35,17,0,249,250,
        1,0,0,0,250,251,6,20,0,0,251,42,1,0,0,0,33,0,44,49,53,61,68,75,80,
        86,92,100,105,111,117,124,131,136,147,151,155,161,167,174,183,189,
        195,203,208,220,226,232,240,245,2,0,1,0,6,0,0
    ]

class PpmCSLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Integer = 1
    Float = 2
    SHARP_COMMENT = 3
    EXCLM_COMMENT = 4
    Atom_selection_2d_ex = 5
    Atom_selection_3d_ex = 6
    Simple_name = 7
    SPACE = 8
    RETURN = 9
    SECTION_COMMENT = 10
    LINE_COMMENT = 11

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "Integer", "Float", "SHARP_COMMENT", "EXCLM_COMMENT", "Atom_selection_2d_ex", 
            "Atom_selection_3d_ex", "Simple_name", "SPACE", "RETURN", "SECTION_COMMENT", 
            "LINE_COMMENT" ]

    ruleNames = [ "Integer", "Float", "DEC_DOT_DEC", "DEC_DIGIT", "DECIMAL", 
                  "SEPARATOR", "SHARP_COMMENT", "EXCLM_COMMENT", "Atom_selection_2d_ex", 
                  "Atom_selection_3d_ex", "Simple_name", "ALPHA", "ALPHA_NUM", 
                  "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", "SPACE", "RETURN", 
                  "COMMENT_START_CHAR", "SECTION_COMMENT", "LINE_COMMENT" ]

    grammarFileName = "PpmCSLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


