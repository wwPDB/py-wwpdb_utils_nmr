# Generated from BiosymMRLexer.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,311,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,1,0,3,0,49,8,0,1,0,1,0,1,1,3,1,
        54,8,1,1,1,1,1,3,1,58,8,1,1,2,3,2,61,8,2,1,2,1,2,3,2,65,8,2,1,2,
        1,2,3,2,69,8,2,1,2,3,2,72,8,2,1,3,1,3,1,3,1,3,1,3,1,3,3,3,80,8,3,
        1,4,1,4,1,5,4,5,85,8,5,11,5,12,5,86,1,6,4,6,90,8,6,11,6,12,6,91,
        1,6,5,6,95,8,6,10,6,12,6,98,9,6,1,6,4,6,101,8,6,11,6,12,6,102,1,
        6,5,6,106,8,6,10,6,12,6,109,9,6,1,6,1,6,1,7,4,7,114,8,7,11,7,12,
        7,115,1,7,5,7,119,8,7,10,7,12,7,122,9,7,1,7,4,7,125,8,7,11,7,12,
        7,126,1,7,5,7,130,8,7,10,7,12,7,133,9,7,1,7,1,7,1,8,4,8,138,8,8,
        11,8,12,8,139,1,8,5,8,143,8,8,10,8,12,8,146,9,8,1,8,4,8,149,8,8,
        11,8,12,8,150,1,8,5,8,154,8,8,10,8,12,8,157,9,8,1,8,1,8,1,9,1,9,
        1,10,1,10,1,10,1,10,1,10,1,10,3,10,169,8,10,1,10,1,10,1,10,1,11,
        1,11,1,12,1,12,3,12,178,8,12,1,13,1,13,3,13,182,8,13,1,14,1,14,3,
        14,186,8,14,1,15,1,15,3,15,190,8,15,1,16,1,16,3,16,194,8,16,1,17,
        1,17,5,17,198,8,17,10,17,12,17,201,9,17,1,18,1,18,1,18,1,19,4,19,
        207,8,19,11,19,12,19,208,1,19,1,19,1,20,1,20,1,20,5,20,216,8,20,
        10,20,12,20,219,9,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,4,21,228,
        8,21,11,21,12,21,229,1,21,1,21,4,21,234,8,21,11,21,12,21,235,1,21,
        1,21,4,21,240,8,21,11,21,12,21,241,1,21,1,21,4,21,246,8,21,11,21,
        12,21,247,1,21,1,21,1,21,1,21,1,21,1,21,3,21,256,8,21,1,21,5,21,
        259,8,21,10,21,12,21,262,9,21,1,21,4,21,265,8,21,11,21,12,21,266,
        1,21,1,21,1,22,1,22,1,22,4,22,274,8,22,11,22,12,22,275,1,22,1,22,
        4,22,280,8,22,11,22,12,22,281,1,22,1,22,4,22,286,8,22,11,22,12,22,
        287,1,22,1,22,4,22,292,8,22,11,22,12,22,293,1,22,1,22,1,22,1,22,
        1,22,1,22,3,22,302,8,22,1,22,5,22,305,8,22,10,22,12,22,308,9,22,
        1,22,1,22,1,217,0,23,1,1,3,2,5,3,7,0,9,0,11,0,13,4,15,5,17,6,19,
        7,21,8,23,0,25,0,27,0,29,0,31,0,33,0,35,0,37,9,39,10,41,11,43,12,
        45,13,1,0,13,2,0,43,43,45,45,2,0,69,69,101,101,1,0,48,57,2,0,10,
        10,13,13,2,0,82,83,114,115,2,0,65,90,97,122,4,0,34,35,39,39,42,43,
        45,46,3,0,9,10,13,13,32,32,5,0,33,33,35,35,38,38,59,59,92,92,2,0,
        82,82,114,114,2,0,77,77,109,109,2,0,65,65,97,97,2,0,75,75,107,107,
        352,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
        0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
        0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,1,48,1,0,0,0,3,53,1,0,0,
        0,5,60,1,0,0,0,7,79,1,0,0,0,9,81,1,0,0,0,11,84,1,0,0,0,13,89,1,0,
        0,0,15,113,1,0,0,0,17,137,1,0,0,0,19,160,1,0,0,0,21,162,1,0,0,0,
        23,173,1,0,0,0,25,177,1,0,0,0,27,181,1,0,0,0,29,185,1,0,0,0,31,189,
        1,0,0,0,33,193,1,0,0,0,35,195,1,0,0,0,37,202,1,0,0,0,39,206,1,0,
        0,0,41,212,1,0,0,0,43,255,1,0,0,0,45,301,1,0,0,0,47,49,7,0,0,0,48,
        47,1,0,0,0,48,49,1,0,0,0,49,50,1,0,0,0,50,51,3,11,5,0,51,2,1,0,0,
        0,52,54,7,0,0,0,53,52,1,0,0,0,53,54,1,0,0,0,54,57,1,0,0,0,55,58,
        3,11,5,0,56,58,3,7,3,0,57,55,1,0,0,0,57,56,1,0,0,0,58,4,1,0,0,0,
        59,61,7,0,0,0,60,59,1,0,0,0,60,61,1,0,0,0,61,64,1,0,0,0,62,65,3,
        11,5,0,63,65,3,7,3,0,64,62,1,0,0,0,64,63,1,0,0,0,65,71,1,0,0,0,66,
        68,7,1,0,0,67,69,7,0,0,0,68,67,1,0,0,0,68,69,1,0,0,0,69,70,1,0,0,
        0,70,72,3,11,5,0,71,66,1,0,0,0,71,72,1,0,0,0,72,6,1,0,0,0,73,74,
        3,11,5,0,74,75,5,46,0,0,75,76,3,11,5,0,76,80,1,0,0,0,77,78,5,46,
        0,0,78,80,3,11,5,0,79,73,1,0,0,0,79,77,1,0,0,0,80,8,1,0,0,0,81,82,
        7,2,0,0,82,10,1,0,0,0,83,85,3,9,4,0,84,83,1,0,0,0,85,86,1,0,0,0,
        86,84,1,0,0,0,86,87,1,0,0,0,87,12,1,0,0,0,88,90,5,35,0,0,89,88,1,
        0,0,0,90,91,1,0,0,0,91,89,1,0,0,0,91,92,1,0,0,0,92,96,1,0,0,0,93,
        95,8,3,0,0,94,93,1,0,0,0,95,98,1,0,0,0,96,94,1,0,0,0,96,97,1,0,0,
        0,97,100,1,0,0,0,98,96,1,0,0,0,99,101,5,35,0,0,100,99,1,0,0,0,101,
        102,1,0,0,0,102,100,1,0,0,0,102,103,1,0,0,0,103,107,1,0,0,0,104,
        106,8,3,0,0,105,104,1,0,0,0,106,109,1,0,0,0,107,105,1,0,0,0,107,
        108,1,0,0,0,108,110,1,0,0,0,109,107,1,0,0,0,110,111,6,6,0,0,111,
        14,1,0,0,0,112,114,5,33,0,0,113,112,1,0,0,0,114,115,1,0,0,0,115,
        113,1,0,0,0,115,116,1,0,0,0,116,120,1,0,0,0,117,119,8,3,0,0,118,
        117,1,0,0,0,119,122,1,0,0,0,120,118,1,0,0,0,120,121,1,0,0,0,121,
        124,1,0,0,0,122,120,1,0,0,0,123,125,5,33,0,0,124,123,1,0,0,0,125,
        126,1,0,0,0,126,124,1,0,0,0,126,127,1,0,0,0,127,131,1,0,0,0,128,
        130,8,3,0,0,129,128,1,0,0,0,130,133,1,0,0,0,131,129,1,0,0,0,131,
        132,1,0,0,0,132,134,1,0,0,0,133,131,1,0,0,0,134,135,6,7,0,0,135,
        16,1,0,0,0,136,138,5,59,0,0,137,136,1,0,0,0,138,139,1,0,0,0,139,
        137,1,0,0,0,139,140,1,0,0,0,140,144,1,0,0,0,141,143,8,3,0,0,142,
        141,1,0,0,0,143,146,1,0,0,0,144,142,1,0,0,0,144,145,1,0,0,0,145,
        148,1,0,0,0,146,144,1,0,0,0,147,149,5,59,0,0,148,147,1,0,0,0,149,
        150,1,0,0,0,150,148,1,0,0,0,150,151,1,0,0,0,151,155,1,0,0,0,152,
        154,8,3,0,0,153,152,1,0,0,0,154,157,1,0,0,0,155,153,1,0,0,0,155,
        156,1,0,0,0,156,158,1,0,0,0,157,155,1,0,0,0,158,159,6,8,0,0,159,
        18,1,0,0,0,160,161,7,4,0,0,161,20,1,0,0,0,162,163,3,11,5,0,163,164,
        5,58,0,0,164,165,3,35,17,0,165,166,5,95,0,0,166,168,3,11,5,0,167,
        169,3,23,11,0,168,167,1,0,0,0,168,169,1,0,0,0,169,170,1,0,0,0,170,
        171,5,58,0,0,171,172,3,35,17,0,172,22,1,0,0,0,173,174,7,5,0,0,174,
        24,1,0,0,0,175,178,3,23,11,0,176,178,3,9,4,0,177,175,1,0,0,0,177,
        176,1,0,0,0,178,26,1,0,0,0,179,182,3,25,12,0,180,182,5,95,0,0,181,
        179,1,0,0,0,181,180,1,0,0,0,182,28,1,0,0,0,183,186,3,27,13,0,184,
        186,7,6,0,0,185,183,1,0,0,0,185,184,1,0,0,0,186,30,1,0,0,0,187,190,
        3,25,12,0,188,190,5,39,0,0,189,187,1,0,0,0,189,188,1,0,0,0,190,32,
        1,0,0,0,191,194,3,25,12,0,192,194,7,0,0,0,193,191,1,0,0,0,193,192,
        1,0,0,0,194,34,1,0,0,0,195,199,3,27,13,0,196,198,3,29,14,0,197,196,
        1,0,0,0,198,201,1,0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,200,36,1,
        0,0,0,201,199,1,0,0,0,202,203,3,11,5,0,203,204,5,46,0,0,204,38,1,
        0,0,0,205,207,7,7,0,0,206,205,1,0,0,0,207,208,1,0,0,0,208,206,1,
        0,0,0,208,209,1,0,0,0,209,210,1,0,0,0,210,211,6,19,1,0,211,40,1,
        0,0,0,212,217,5,123,0,0,213,216,3,41,20,0,214,216,9,0,0,0,215,213,
        1,0,0,0,215,214,1,0,0,0,216,219,1,0,0,0,217,218,1,0,0,0,217,215,
        1,0,0,0,218,220,1,0,0,0,219,217,1,0,0,0,220,221,5,125,0,0,221,222,
        1,0,0,0,222,223,6,20,0,0,223,42,1,0,0,0,224,256,7,8,0,0,225,227,
        5,47,0,0,226,228,5,47,0,0,227,226,1,0,0,0,228,229,1,0,0,0,229,227,
        1,0,0,0,229,230,1,0,0,0,230,256,1,0,0,0,231,233,5,42,0,0,232,234,
        5,42,0,0,233,232,1,0,0,0,234,235,1,0,0,0,235,233,1,0,0,0,235,236,
        1,0,0,0,236,256,1,0,0,0,237,239,5,45,0,0,238,240,5,45,0,0,239,238,
        1,0,0,0,240,241,1,0,0,0,241,239,1,0,0,0,241,242,1,0,0,0,242,256,
        1,0,0,0,243,245,5,43,0,0,244,246,5,43,0,0,245,244,1,0,0,0,246,247,
        1,0,0,0,247,245,1,0,0,0,247,248,1,0,0,0,248,256,1,0,0,0,249,250,
        7,9,0,0,250,251,7,1,0,0,251,252,7,10,0,0,252,253,7,11,0,0,253,254,
        7,9,0,0,254,256,7,12,0,0,255,224,1,0,0,0,255,225,1,0,0,0,255,231,
        1,0,0,0,255,237,1,0,0,0,255,243,1,0,0,0,255,249,1,0,0,0,256,260,
        1,0,0,0,257,259,5,32,0,0,258,257,1,0,0,0,259,262,1,0,0,0,260,258,
        1,0,0,0,260,261,1,0,0,0,261,264,1,0,0,0,262,260,1,0,0,0,263,265,
        7,3,0,0,264,263,1,0,0,0,265,266,1,0,0,0,266,264,1,0,0,0,266,267,
        1,0,0,0,267,268,1,0,0,0,268,269,6,21,0,0,269,44,1,0,0,0,270,302,
        7,8,0,0,271,273,5,47,0,0,272,274,5,47,0,0,273,272,1,0,0,0,274,275,
        1,0,0,0,275,273,1,0,0,0,275,276,1,0,0,0,276,302,1,0,0,0,277,279,
        5,42,0,0,278,280,5,42,0,0,279,278,1,0,0,0,280,281,1,0,0,0,281,279,
        1,0,0,0,281,282,1,0,0,0,282,302,1,0,0,0,283,285,5,45,0,0,284,286,
        5,45,0,0,285,284,1,0,0,0,286,287,1,0,0,0,287,285,1,0,0,0,287,288,
        1,0,0,0,288,302,1,0,0,0,289,291,5,43,0,0,290,292,5,43,0,0,291,290,
        1,0,0,0,292,293,1,0,0,0,293,291,1,0,0,0,293,294,1,0,0,0,294,302,
        1,0,0,0,295,296,7,9,0,0,296,297,7,1,0,0,297,298,7,10,0,0,298,299,
        7,11,0,0,299,300,7,9,0,0,300,302,7,12,0,0,301,270,1,0,0,0,301,271,
        1,0,0,0,301,277,1,0,0,0,301,283,1,0,0,0,301,289,1,0,0,0,301,295,
        1,0,0,0,302,306,1,0,0,0,303,305,8,3,0,0,304,303,1,0,0,0,305,308,
        1,0,0,0,306,304,1,0,0,0,306,307,1,0,0,0,307,309,1,0,0,0,308,306,
        1,0,0,0,309,310,6,22,0,0,310,46,1,0,0,0,45,0,48,53,57,60,64,68,71,
        79,86,91,96,102,107,115,120,126,131,139,144,150,155,168,177,181,
        185,189,193,199,208,215,217,229,235,241,247,255,260,266,275,281,
        287,293,301,306,2,0,1,0,6,0,0
    ]

class BiosymMRLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Integer = 1
    Float = 2
    Real = 3
    SHARP_COMMENT = 4
    EXCLM_COMMENT = 5
    SMCLN_COMMENT = 6
    Chiral_code = 7
    Atom_selection = 8
    Ordinal = 9
    SPACE = 10
    COMMENT = 11
    SECTION_COMMENT = 12
    LINE_COMMENT = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "Integer", "Float", "Real", "SHARP_COMMENT", "EXCLM_COMMENT", 
            "SMCLN_COMMENT", "Chiral_code", "Atom_selection", "Ordinal", 
            "SPACE", "COMMENT", "SECTION_COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "Integer", "Float", "Real", "DEC_DOT_DEC", "DEC_DIGIT", 
                  "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", "SMCLN_COMMENT", 
                  "Chiral_code", "Atom_selection", "ALPHA", "ALPHA_NUM", 
                  "START_CHAR", "NAME_CHAR", "ATM_NAME_CHAR", "ATM_TYPE_CHAR", 
                  "SIMPLE_NAME", "Ordinal", "SPACE", "COMMENT", "SECTION_COMMENT", 
                  "LINE_COMMENT" ]

    grammarFileName = "BiosymMRLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


