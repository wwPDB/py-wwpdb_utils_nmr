# Generated from BiosymMRLexer.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,9,222,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,3,0,41,
        8,0,1,0,1,0,1,1,3,1,46,8,1,1,1,1,1,3,1,50,8,1,1,2,3,2,53,8,2,1,2,
        1,2,3,2,57,8,2,1,2,1,2,3,2,61,8,2,1,2,3,2,64,8,2,1,3,1,3,1,3,3,3,
        69,8,3,1,3,1,3,3,3,73,8,3,1,4,1,4,1,5,4,5,78,8,5,11,5,12,5,79,1,
        6,1,6,1,7,1,7,1,7,5,7,87,8,7,10,7,12,7,90,9,7,1,7,1,7,1,7,3,7,95,
        8,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,3,9,104,8,9,1,10,1,10,3,10,108,8,
        10,1,11,1,11,3,11,112,8,11,1,12,1,12,3,12,116,8,12,1,13,1,13,3,13,
        120,8,13,1,14,1,14,5,14,124,8,14,10,14,12,14,127,9,14,1,15,4,15,
        130,8,15,11,15,12,15,131,1,15,1,15,1,16,1,16,1,16,5,16,139,8,16,
        10,16,12,16,142,9,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,4,17,151,
        8,17,11,17,12,17,152,1,17,1,17,4,17,157,8,17,11,17,12,17,158,1,17,
        1,17,4,17,163,8,17,11,17,12,17,164,1,17,1,17,1,17,1,17,1,17,1,17,
        3,17,173,8,17,1,17,5,17,176,8,17,10,17,12,17,179,9,17,1,17,4,17,
        182,8,17,11,17,12,17,183,1,17,1,17,1,18,1,18,1,18,4,18,191,8,18,
        11,18,12,18,192,1,18,1,18,4,18,197,8,18,11,18,12,18,198,1,18,1,18,
        4,18,203,8,18,11,18,12,18,204,1,18,1,18,1,18,1,18,1,18,1,18,3,18,
        213,8,18,1,18,5,18,216,8,18,10,18,12,18,219,9,18,1,18,1,18,1,140,
        0,19,1,1,3,2,5,3,7,0,9,0,11,0,13,4,15,5,17,0,19,0,21,0,23,0,25,0,
        27,0,29,0,31,6,33,7,35,8,37,9,1,0,13,2,0,43,43,45,45,2,0,69,69,101,
        101,1,0,48,57,2,0,82,83,114,115,2,0,65,90,97,122,4,0,34,35,39,39,
        42,43,45,46,3,0,9,10,13,13,32,32,5,0,33,33,35,35,38,38,47,47,59,
        59,2,0,82,82,114,114,2,0,77,77,109,109,2,0,65,65,97,97,2,0,75,75,
        107,107,2,0,10,10,13,13,249,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,
        0,13,1,0,0,0,0,15,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
        0,37,1,0,0,0,1,40,1,0,0,0,3,45,1,0,0,0,5,52,1,0,0,0,7,72,1,0,0,0,
        9,74,1,0,0,0,11,77,1,0,0,0,13,81,1,0,0,0,15,83,1,0,0,0,17,99,1,0,
        0,0,19,103,1,0,0,0,21,107,1,0,0,0,23,111,1,0,0,0,25,115,1,0,0,0,
        27,119,1,0,0,0,29,121,1,0,0,0,31,129,1,0,0,0,33,135,1,0,0,0,35,172,
        1,0,0,0,37,212,1,0,0,0,39,41,7,0,0,0,40,39,1,0,0,0,40,41,1,0,0,0,
        41,42,1,0,0,0,42,43,3,11,5,0,43,2,1,0,0,0,44,46,7,0,0,0,45,44,1,
        0,0,0,45,46,1,0,0,0,46,49,1,0,0,0,47,50,3,11,5,0,48,50,3,7,3,0,49,
        47,1,0,0,0,49,48,1,0,0,0,50,4,1,0,0,0,51,53,7,0,0,0,52,51,1,0,0,
        0,52,53,1,0,0,0,53,56,1,0,0,0,54,57,3,11,5,0,55,57,3,7,3,0,56,54,
        1,0,0,0,56,55,1,0,0,0,57,63,1,0,0,0,58,60,7,1,0,0,59,61,7,0,0,0,
        60,59,1,0,0,0,60,61,1,0,0,0,61,62,1,0,0,0,62,64,3,11,5,0,63,58,1,
        0,0,0,63,64,1,0,0,0,64,6,1,0,0,0,65,66,3,11,5,0,66,68,5,46,0,0,67,
        69,3,11,5,0,68,67,1,0,0,0,68,69,1,0,0,0,69,73,1,0,0,0,70,71,5,46,
        0,0,71,73,3,11,5,0,72,65,1,0,0,0,72,70,1,0,0,0,73,8,1,0,0,0,74,75,
        7,2,0,0,75,10,1,0,0,0,76,78,3,9,4,0,77,76,1,0,0,0,78,79,1,0,0,0,
        79,77,1,0,0,0,79,80,1,0,0,0,80,12,1,0,0,0,81,82,7,3,0,0,82,14,1,
        0,0,0,83,84,3,11,5,0,84,88,5,58,0,0,85,87,3,19,9,0,86,85,1,0,0,0,
        87,90,1,0,0,0,88,86,1,0,0,0,88,89,1,0,0,0,89,91,1,0,0,0,90,88,1,
        0,0,0,91,92,5,95,0,0,92,94,3,11,5,0,93,95,3,17,8,0,94,93,1,0,0,0,
        94,95,1,0,0,0,95,96,1,0,0,0,96,97,5,58,0,0,97,98,3,29,14,0,98,16,
        1,0,0,0,99,100,7,4,0,0,100,18,1,0,0,0,101,104,3,17,8,0,102,104,3,
        9,4,0,103,101,1,0,0,0,103,102,1,0,0,0,104,20,1,0,0,0,105,108,3,19,
        9,0,106,108,5,95,0,0,107,105,1,0,0,0,107,106,1,0,0,0,108,22,1,0,
        0,0,109,112,3,21,10,0,110,112,7,5,0,0,111,109,1,0,0,0,111,110,1,
        0,0,0,112,24,1,0,0,0,113,116,3,19,9,0,114,116,5,39,0,0,115,113,1,
        0,0,0,115,114,1,0,0,0,116,26,1,0,0,0,117,120,3,19,9,0,118,120,7,
        0,0,0,119,117,1,0,0,0,119,118,1,0,0,0,120,28,1,0,0,0,121,125,3,21,
        10,0,122,124,3,23,11,0,123,122,1,0,0,0,124,127,1,0,0,0,125,123,1,
        0,0,0,125,126,1,0,0,0,126,30,1,0,0,0,127,125,1,0,0,0,128,130,7,6,
        0,0,129,128,1,0,0,0,130,131,1,0,0,0,131,129,1,0,0,0,131,132,1,0,
        0,0,132,133,1,0,0,0,133,134,6,15,0,0,134,32,1,0,0,0,135,140,5,123,
        0,0,136,139,3,33,16,0,137,139,9,0,0,0,138,136,1,0,0,0,138,137,1,
        0,0,0,139,142,1,0,0,0,140,141,1,0,0,0,140,138,1,0,0,0,141,143,1,
        0,0,0,142,140,1,0,0,0,143,144,5,125,0,0,144,145,1,0,0,0,145,146,
        6,16,1,0,146,34,1,0,0,0,147,173,7,7,0,0,148,150,5,42,0,0,149,151,
        5,42,0,0,150,149,1,0,0,0,151,152,1,0,0,0,152,150,1,0,0,0,152,153,
        1,0,0,0,153,173,1,0,0,0,154,156,5,45,0,0,155,157,5,45,0,0,156,155,
        1,0,0,0,157,158,1,0,0,0,158,156,1,0,0,0,158,159,1,0,0,0,159,173,
        1,0,0,0,160,162,5,43,0,0,161,163,5,43,0,0,162,161,1,0,0,0,163,164,
        1,0,0,0,164,162,1,0,0,0,164,165,1,0,0,0,165,173,1,0,0,0,166,167,
        7,8,0,0,167,168,7,1,0,0,168,169,7,9,0,0,169,170,7,10,0,0,170,171,
        7,8,0,0,171,173,7,11,0,0,172,147,1,0,0,0,172,148,1,0,0,0,172,154,
        1,0,0,0,172,160,1,0,0,0,172,166,1,0,0,0,173,177,1,0,0,0,174,176,
        5,32,0,0,175,174,1,0,0,0,176,179,1,0,0,0,177,175,1,0,0,0,177,178,
        1,0,0,0,178,181,1,0,0,0,179,177,1,0,0,0,180,182,7,12,0,0,181,180,
        1,0,0,0,182,183,1,0,0,0,183,181,1,0,0,0,183,184,1,0,0,0,184,185,
        1,0,0,0,185,186,6,17,1,0,186,36,1,0,0,0,187,213,7,7,0,0,188,190,
        5,42,0,0,189,191,5,42,0,0,190,189,1,0,0,0,191,192,1,0,0,0,192,190,
        1,0,0,0,192,193,1,0,0,0,193,213,1,0,0,0,194,196,5,45,0,0,195,197,
        5,45,0,0,196,195,1,0,0,0,197,198,1,0,0,0,198,196,1,0,0,0,198,199,
        1,0,0,0,199,213,1,0,0,0,200,202,5,43,0,0,201,203,5,43,0,0,202,201,
        1,0,0,0,203,204,1,0,0,0,204,202,1,0,0,0,204,205,1,0,0,0,205,213,
        1,0,0,0,206,207,7,8,0,0,207,208,7,1,0,0,208,209,7,9,0,0,209,210,
        7,10,0,0,210,211,7,8,0,0,211,213,7,11,0,0,212,187,1,0,0,0,212,188,
        1,0,0,0,212,194,1,0,0,0,212,200,1,0,0,0,212,206,1,0,0,0,213,217,
        1,0,0,0,214,216,8,12,0,0,215,214,1,0,0,0,216,219,1,0,0,0,217,215,
        1,0,0,0,217,218,1,0,0,0,218,220,1,0,0,0,219,217,1,0,0,0,220,221,
        6,18,1,0,221,38,1,0,0,0,33,0,40,45,49,52,56,60,63,68,72,79,88,94,
        103,107,111,115,119,125,131,138,140,152,158,164,172,177,183,192,
        198,204,212,217,2,6,0,0,0,1,0
    ]

class BiosymMRLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Integer = 1
    Float = 2
    Real = 3
    Chiral_code = 4
    Atom_selection = 5
    SPACE = 6
    COMMENT = 7
    SECTION_COMMENT = 8
    LINE_COMMENT = 9

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "Integer", "Float", "Real", "Chiral_code", "Atom_selection", 
            "SPACE", "COMMENT", "SECTION_COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "Integer", "Float", "Real", "DEC_DOT_DEC", "DEC_DIGIT", 
                  "DECIMAL", "Chiral_code", "Atom_selection", "ALPHA", "ALPHA_NUM", 
                  "START_CHAR", "NAME_CHAR", "ATM_NAME_CHAR", "ATM_TYPE_CHAR", 
                  "SIMPLE_NAME", "SPACE", "COMMENT", "SECTION_COMMENT", 
                  "LINE_COMMENT" ]

    grammarFileName = "BiosymMRLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


