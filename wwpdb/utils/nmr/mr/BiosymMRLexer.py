# Generated from BiosymMRLexer.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,332,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,1,0,3,0,49,8,0,1,0,1,0,1,1,3,1,
        54,8,1,1,1,1,1,3,1,58,8,1,1,2,3,2,61,8,2,1,2,1,2,3,2,65,8,2,1,2,
        1,2,3,2,69,8,2,1,2,3,2,72,8,2,1,3,1,3,1,3,1,3,1,3,1,3,3,3,80,8,3,
        1,4,1,4,1,5,4,5,85,8,5,11,5,12,5,86,1,6,4,6,90,8,6,11,6,12,6,91,
        1,6,5,6,95,8,6,10,6,12,6,98,9,6,1,6,5,6,101,8,6,10,6,12,6,104,9,
        6,1,6,5,6,107,8,6,10,6,12,6,110,9,6,1,6,1,6,1,7,4,7,115,8,7,11,7,
        12,7,116,1,7,5,7,120,8,7,10,7,12,7,123,9,7,1,7,5,7,126,8,7,10,7,
        12,7,129,9,7,1,7,5,7,132,8,7,10,7,12,7,135,9,7,1,7,1,7,1,8,4,8,140,
        8,8,11,8,12,8,141,1,8,5,8,145,8,8,10,8,12,8,148,9,8,1,8,5,8,151,
        8,8,10,8,12,8,154,9,8,1,8,5,8,157,8,8,10,8,12,8,160,9,8,1,8,1,8,
        1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,3,10,172,8,10,1,10,3,10,175,
        8,10,1,10,3,10,178,8,10,1,10,1,10,1,10,1,11,1,11,1,12,1,12,3,12,
        187,8,12,1,13,1,13,3,13,191,8,13,1,14,1,14,3,14,195,8,14,1,15,1,
        15,3,15,199,8,15,1,16,1,16,3,16,203,8,16,1,17,1,17,5,17,207,8,17,
        10,17,12,17,210,9,17,1,18,1,18,1,18,1,19,4,19,216,8,19,11,19,12,
        19,217,1,19,1,19,1,20,1,20,1,20,5,20,225,8,20,10,20,12,20,228,9,
        20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,4,21,237,8,21,11,21,12,21,
        238,1,21,1,21,4,21,243,8,21,11,21,12,21,244,1,21,1,21,4,21,249,8,
        21,11,21,12,21,250,1,21,1,21,4,21,255,8,21,11,21,12,21,256,1,21,
        1,21,4,21,261,8,21,11,21,12,21,262,1,21,1,21,1,21,1,21,1,21,1,21,
        3,21,271,8,21,1,21,5,21,274,8,21,10,21,12,21,277,9,21,1,21,4,21,
        280,8,21,11,21,12,21,281,1,21,1,21,1,22,1,22,1,22,4,22,289,8,22,
        11,22,12,22,290,1,22,1,22,4,22,295,8,22,11,22,12,22,296,1,22,1,22,
        4,22,301,8,22,11,22,12,22,302,1,22,1,22,4,22,307,8,22,11,22,12,22,
        308,1,22,1,22,4,22,313,8,22,11,22,12,22,314,1,22,1,22,1,22,1,22,
        1,22,1,22,3,22,323,8,22,1,22,5,22,326,8,22,10,22,12,22,329,9,22,
        1,22,1,22,1,226,0,23,1,1,3,2,5,3,7,0,9,0,11,0,13,4,15,5,17,6,19,
        7,21,8,23,0,25,0,27,0,29,0,31,0,33,0,35,0,37,9,39,10,41,11,43,12,
        45,13,1,0,13,2,0,43,43,45,45,2,0,69,69,101,101,1,0,48,57,2,0,10,
        10,13,13,2,0,82,83,114,115,2,0,65,90,97,122,4,0,34,35,39,39,42,43,
        45,46,3,0,9,10,13,13,32,32,5,0,33,33,35,35,38,38,59,59,92,92,2,0,
        82,82,114,114,2,0,77,77,109,109,2,0,65,65,97,97,2,0,75,75,107,107,
        379,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
        0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
        0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,1,48,1,0,0,0,3,53,1,0,0,
        0,5,60,1,0,0,0,7,79,1,0,0,0,9,81,1,0,0,0,11,84,1,0,0,0,13,89,1,0,
        0,0,15,114,1,0,0,0,17,139,1,0,0,0,19,163,1,0,0,0,21,165,1,0,0,0,
        23,182,1,0,0,0,25,186,1,0,0,0,27,190,1,0,0,0,29,194,1,0,0,0,31,198,
        1,0,0,0,33,202,1,0,0,0,35,204,1,0,0,0,37,211,1,0,0,0,39,215,1,0,
        0,0,41,221,1,0,0,0,43,270,1,0,0,0,45,322,1,0,0,0,47,49,7,0,0,0,48,
        47,1,0,0,0,48,49,1,0,0,0,49,50,1,0,0,0,50,51,3,11,5,0,51,2,1,0,0,
        0,52,54,7,0,0,0,53,52,1,0,0,0,53,54,1,0,0,0,54,57,1,0,0,0,55,58,
        3,11,5,0,56,58,3,7,3,0,57,55,1,0,0,0,57,56,1,0,0,0,58,4,1,0,0,0,
        59,61,7,0,0,0,60,59,1,0,0,0,60,61,1,0,0,0,61,64,1,0,0,0,62,65,3,
        11,5,0,63,65,3,7,3,0,64,62,1,0,0,0,64,63,1,0,0,0,65,71,1,0,0,0,66,
        68,7,1,0,0,67,69,7,0,0,0,68,67,1,0,0,0,68,69,1,0,0,0,69,70,1,0,0,
        0,70,72,3,11,5,0,71,66,1,0,0,0,71,72,1,0,0,0,72,6,1,0,0,0,73,74,
        3,11,5,0,74,75,5,46,0,0,75,76,3,11,5,0,76,80,1,0,0,0,77,78,5,46,
        0,0,78,80,3,11,5,0,79,73,1,0,0,0,79,77,1,0,0,0,80,8,1,0,0,0,81,82,
        7,2,0,0,82,10,1,0,0,0,83,85,3,9,4,0,84,83,1,0,0,0,85,86,1,0,0,0,
        86,84,1,0,0,0,86,87,1,0,0,0,87,12,1,0,0,0,88,90,5,35,0,0,89,88,1,
        0,0,0,90,91,1,0,0,0,91,89,1,0,0,0,91,92,1,0,0,0,92,96,1,0,0,0,93,
        95,8,3,0,0,94,93,1,0,0,0,95,98,1,0,0,0,96,94,1,0,0,0,96,97,1,0,0,
        0,97,102,1,0,0,0,98,96,1,0,0,0,99,101,5,35,0,0,100,99,1,0,0,0,101,
        104,1,0,0,0,102,100,1,0,0,0,102,103,1,0,0,0,103,108,1,0,0,0,104,
        102,1,0,0,0,105,107,8,3,0,0,106,105,1,0,0,0,107,110,1,0,0,0,108,
        106,1,0,0,0,108,109,1,0,0,0,109,111,1,0,0,0,110,108,1,0,0,0,111,
        112,6,6,0,0,112,14,1,0,0,0,113,115,5,33,0,0,114,113,1,0,0,0,115,
        116,1,0,0,0,116,114,1,0,0,0,116,117,1,0,0,0,117,121,1,0,0,0,118,
        120,8,3,0,0,119,118,1,0,0,0,120,123,1,0,0,0,121,119,1,0,0,0,121,
        122,1,0,0,0,122,127,1,0,0,0,123,121,1,0,0,0,124,126,5,33,0,0,125,
        124,1,0,0,0,126,129,1,0,0,0,127,125,1,0,0,0,127,128,1,0,0,0,128,
        133,1,0,0,0,129,127,1,0,0,0,130,132,8,3,0,0,131,130,1,0,0,0,132,
        135,1,0,0,0,133,131,1,0,0,0,133,134,1,0,0,0,134,136,1,0,0,0,135,
        133,1,0,0,0,136,137,6,7,0,0,137,16,1,0,0,0,138,140,5,59,0,0,139,
        138,1,0,0,0,140,141,1,0,0,0,141,139,1,0,0,0,141,142,1,0,0,0,142,
        146,1,0,0,0,143,145,8,3,0,0,144,143,1,0,0,0,145,148,1,0,0,0,146,
        144,1,0,0,0,146,147,1,0,0,0,147,152,1,0,0,0,148,146,1,0,0,0,149,
        151,5,59,0,0,150,149,1,0,0,0,151,154,1,0,0,0,152,150,1,0,0,0,152,
        153,1,0,0,0,153,158,1,0,0,0,154,152,1,0,0,0,155,157,8,3,0,0,156,
        155,1,0,0,0,157,160,1,0,0,0,158,156,1,0,0,0,158,159,1,0,0,0,159,
        161,1,0,0,0,160,158,1,0,0,0,161,162,6,8,0,0,162,18,1,0,0,0,163,164,
        7,4,0,0,164,20,1,0,0,0,165,166,3,11,5,0,166,167,5,58,0,0,167,168,
        3,35,17,0,168,177,5,95,0,0,169,171,3,11,5,0,170,172,3,23,11,0,171,
        170,1,0,0,0,171,172,1,0,0,0,172,178,1,0,0,0,173,175,3,23,11,0,174,
        173,1,0,0,0,174,175,1,0,0,0,175,176,1,0,0,0,176,178,3,11,5,0,177,
        169,1,0,0,0,177,174,1,0,0,0,178,179,1,0,0,0,179,180,5,58,0,0,180,
        181,3,35,17,0,181,22,1,0,0,0,182,183,7,5,0,0,183,24,1,0,0,0,184,
        187,3,23,11,0,185,187,3,9,4,0,186,184,1,0,0,0,186,185,1,0,0,0,187,
        26,1,0,0,0,188,191,3,25,12,0,189,191,5,95,0,0,190,188,1,0,0,0,190,
        189,1,0,0,0,191,28,1,0,0,0,192,195,3,27,13,0,193,195,7,6,0,0,194,
        192,1,0,0,0,194,193,1,0,0,0,195,30,1,0,0,0,196,199,3,25,12,0,197,
        199,5,39,0,0,198,196,1,0,0,0,198,197,1,0,0,0,199,32,1,0,0,0,200,
        203,3,25,12,0,201,203,7,0,0,0,202,200,1,0,0,0,202,201,1,0,0,0,203,
        34,1,0,0,0,204,208,3,27,13,0,205,207,3,29,14,0,206,205,1,0,0,0,207,
        210,1,0,0,0,208,206,1,0,0,0,208,209,1,0,0,0,209,36,1,0,0,0,210,208,
        1,0,0,0,211,212,3,11,5,0,212,213,5,46,0,0,213,38,1,0,0,0,214,216,
        7,7,0,0,215,214,1,0,0,0,216,217,1,0,0,0,217,215,1,0,0,0,217,218,
        1,0,0,0,218,219,1,0,0,0,219,220,6,19,1,0,220,40,1,0,0,0,221,226,
        5,123,0,0,222,225,3,41,20,0,223,225,9,0,0,0,224,222,1,0,0,0,224,
        223,1,0,0,0,225,228,1,0,0,0,226,227,1,0,0,0,226,224,1,0,0,0,227,
        229,1,0,0,0,228,226,1,0,0,0,229,230,5,125,0,0,230,231,1,0,0,0,231,
        232,6,20,0,0,232,42,1,0,0,0,233,271,7,8,0,0,234,236,5,47,0,0,235,
        237,5,47,0,0,236,235,1,0,0,0,237,238,1,0,0,0,238,236,1,0,0,0,238,
        239,1,0,0,0,239,271,1,0,0,0,240,242,5,42,0,0,241,243,5,42,0,0,242,
        241,1,0,0,0,243,244,1,0,0,0,244,242,1,0,0,0,244,245,1,0,0,0,245,
        271,1,0,0,0,246,248,5,45,0,0,247,249,5,45,0,0,248,247,1,0,0,0,249,
        250,1,0,0,0,250,248,1,0,0,0,250,251,1,0,0,0,251,271,1,0,0,0,252,
        254,5,43,0,0,253,255,5,43,0,0,254,253,1,0,0,0,255,256,1,0,0,0,256,
        254,1,0,0,0,256,257,1,0,0,0,257,271,1,0,0,0,258,260,5,61,0,0,259,
        261,5,61,0,0,260,259,1,0,0,0,261,262,1,0,0,0,262,260,1,0,0,0,262,
        263,1,0,0,0,263,271,1,0,0,0,264,265,7,9,0,0,265,266,7,1,0,0,266,
        267,7,10,0,0,267,268,7,11,0,0,268,269,7,9,0,0,269,271,7,12,0,0,270,
        233,1,0,0,0,270,234,1,0,0,0,270,240,1,0,0,0,270,246,1,0,0,0,270,
        252,1,0,0,0,270,258,1,0,0,0,270,264,1,0,0,0,271,275,1,0,0,0,272,
        274,5,32,0,0,273,272,1,0,0,0,274,277,1,0,0,0,275,273,1,0,0,0,275,
        276,1,0,0,0,276,279,1,0,0,0,277,275,1,0,0,0,278,280,7,3,0,0,279,
        278,1,0,0,0,280,281,1,0,0,0,281,279,1,0,0,0,281,282,1,0,0,0,282,
        283,1,0,0,0,283,284,6,21,0,0,284,44,1,0,0,0,285,323,7,8,0,0,286,
        288,5,47,0,0,287,289,5,47,0,0,288,287,1,0,0,0,289,290,1,0,0,0,290,
        288,1,0,0,0,290,291,1,0,0,0,291,323,1,0,0,0,292,294,5,42,0,0,293,
        295,5,42,0,0,294,293,1,0,0,0,295,296,1,0,0,0,296,294,1,0,0,0,296,
        297,1,0,0,0,297,323,1,0,0,0,298,300,5,45,0,0,299,301,5,45,0,0,300,
        299,1,0,0,0,301,302,1,0,0,0,302,300,1,0,0,0,302,303,1,0,0,0,303,
        323,1,0,0,0,304,306,5,43,0,0,305,307,5,43,0,0,306,305,1,0,0,0,307,
        308,1,0,0,0,308,306,1,0,0,0,308,309,1,0,0,0,309,323,1,0,0,0,310,
        312,5,61,0,0,311,313,5,61,0,0,312,311,1,0,0,0,313,314,1,0,0,0,314,
        312,1,0,0,0,314,315,1,0,0,0,315,323,1,0,0,0,316,317,7,9,0,0,317,
        318,7,1,0,0,318,319,7,10,0,0,319,320,7,11,0,0,320,321,7,9,0,0,321,
        323,7,12,0,0,322,285,1,0,0,0,322,286,1,0,0,0,322,292,1,0,0,0,322,
        298,1,0,0,0,322,304,1,0,0,0,322,310,1,0,0,0,322,316,1,0,0,0,323,
        327,1,0,0,0,324,326,8,3,0,0,325,324,1,0,0,0,326,329,1,0,0,0,327,
        325,1,0,0,0,327,328,1,0,0,0,328,330,1,0,0,0,329,327,1,0,0,0,330,
        331,6,22,0,0,331,46,1,0,0,0,49,0,48,53,57,60,64,68,71,79,86,91,96,
        102,108,116,121,127,133,141,146,152,158,171,174,177,186,190,194,
        198,202,208,217,224,226,238,244,250,256,262,270,275,281,290,296,
        302,308,314,322,327,2,0,1,0,6,0,0
    ]

class BiosymMRLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Integer = 1
    Float = 2
    Real = 3
    SHARP_COMMENT = 4
    EXCLM_COMMENT = 5
    SMCLN_COMMENT = 6
    Chiral_code = 7
    Atom_selection = 8
    Ordinal = 9
    SPACE = 10
    ENCLOSE_COMMENT = 11
    SECTION_COMMENT = 12
    LINE_COMMENT = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "Integer", "Float", "Real", "SHARP_COMMENT", "EXCLM_COMMENT", 
            "SMCLN_COMMENT", "Chiral_code", "Atom_selection", "Ordinal", 
            "SPACE", "ENCLOSE_COMMENT", "SECTION_COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "Integer", "Float", "Real", "DEC_DOT_DEC", "DEC_DIGIT", 
                  "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", "SMCLN_COMMENT", 
                  "Chiral_code", "Atom_selection", "ALPHA", "ALPHA_NUM", 
                  "START_CHAR", "NAME_CHAR", "ATM_NAME_CHAR", "ATM_TYPE_CHAR", 
                  "SIMPLE_NAME", "Ordinal", "SPACE", "ENCLOSE_COMMENT", 
                  "SECTION_COMMENT", "LINE_COMMENT" ]

    grammarFileName = "BiosymMRLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


