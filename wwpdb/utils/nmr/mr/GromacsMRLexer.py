# Generated from GromacsMRLexer.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,17,399,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,3,7,161,8,7,1,7,1,7,
        1,8,3,8,166,8,8,1,8,1,8,3,8,170,8,8,1,9,1,9,1,9,3,9,175,8,9,1,9,
        1,9,3,9,179,8,9,1,10,1,10,1,11,4,11,184,8,11,11,11,12,11,185,1,12,
        4,12,189,8,12,11,12,12,12,190,1,12,5,12,194,8,12,10,12,12,12,197,
        9,12,1,12,5,12,200,8,12,10,12,12,12,203,9,12,1,12,5,12,206,8,12,
        10,12,12,12,209,9,12,1,12,1,12,1,13,4,13,214,8,13,11,13,12,13,215,
        1,13,5,13,219,8,13,10,13,12,13,222,9,13,1,13,5,13,225,8,13,10,13,
        12,13,228,9,13,1,13,5,13,231,8,13,10,13,12,13,234,9,13,1,13,1,13,
        1,14,4,14,239,8,14,11,14,12,14,240,1,14,5,14,244,8,14,10,14,12,14,
        247,9,14,1,14,5,14,250,8,14,10,14,12,14,253,9,14,1,14,5,14,256,8,
        14,10,14,12,14,259,9,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,
        3,17,269,8,17,1,18,1,18,3,18,273,8,18,1,19,1,19,3,19,277,8,19,1,
        20,1,20,3,20,281,8,20,1,21,1,21,3,21,285,8,21,1,22,1,22,5,22,289,
        8,22,10,22,12,22,292,9,22,1,23,4,23,295,8,23,11,23,12,23,296,1,23,
        1,23,1,24,1,24,1,24,5,24,304,8,24,10,24,12,24,307,9,24,1,24,1,24,
        1,24,1,24,1,25,1,25,1,25,4,25,316,8,25,11,25,12,25,317,1,25,1,25,
        4,25,322,8,25,11,25,12,25,323,1,25,1,25,4,25,328,8,25,11,25,12,25,
        329,1,25,1,25,4,25,334,8,25,11,25,12,25,335,1,25,1,25,1,25,1,25,
        1,25,1,25,3,25,344,8,25,1,25,5,25,347,8,25,10,25,12,25,350,9,25,
        1,25,4,25,353,8,25,11,25,12,25,354,1,25,1,25,1,26,1,26,1,26,4,26,
        362,8,26,11,26,12,26,363,1,26,1,26,4,26,368,8,26,11,26,12,26,369,
        1,26,1,26,4,26,374,8,26,11,26,12,26,375,1,26,1,26,4,26,380,8,26,
        11,26,12,26,381,1,26,1,26,1,26,1,26,1,26,1,26,3,26,390,8,26,1,26,
        5,26,393,8,26,10,26,12,26,396,9,26,1,26,1,26,1,305,0,27,1,1,3,2,
        5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,0,21,0,23,0,25,10,27,11,29,12,
        31,13,33,0,35,0,37,0,39,0,41,0,43,0,45,0,47,14,49,15,51,16,53,17,
        1,0,7,2,0,43,43,45,45,1,0,48,57,2,0,10,10,13,13,2,0,65,90,97,122,
        4,0,34,35,39,39,42,43,45,46,3,0,9,10,13,13,32,32,5,0,33,33,35,35,
        38,38,59,59,92,92,436,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,47,1,
        0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,1,55,1,0,0,0,3,57,1,
        0,0,0,5,59,1,0,0,0,7,79,1,0,0,0,9,99,1,0,0,0,11,122,1,0,0,0,13,139,
        1,0,0,0,15,160,1,0,0,0,17,165,1,0,0,0,19,178,1,0,0,0,21,180,1,0,
        0,0,23,183,1,0,0,0,25,188,1,0,0,0,27,213,1,0,0,0,29,238,1,0,0,0,
        31,262,1,0,0,0,33,264,1,0,0,0,35,268,1,0,0,0,37,272,1,0,0,0,39,276,
        1,0,0,0,41,280,1,0,0,0,43,284,1,0,0,0,45,286,1,0,0,0,47,294,1,0,
        0,0,49,300,1,0,0,0,51,343,1,0,0,0,53,389,1,0,0,0,55,56,5,91,0,0,
        56,2,1,0,0,0,57,58,5,93,0,0,58,4,1,0,0,0,59,60,5,100,0,0,60,61,5,
        105,0,0,61,62,5,115,0,0,62,63,5,116,0,0,63,64,5,97,0,0,64,65,5,110,
        0,0,65,66,5,99,0,0,66,67,5,101,0,0,67,68,5,95,0,0,68,69,5,114,0,
        0,69,70,5,101,0,0,70,71,5,115,0,0,71,72,5,116,0,0,72,73,5,114,0,
        0,73,74,5,97,0,0,74,75,5,105,0,0,75,76,5,110,0,0,76,77,5,116,0,0,
        77,78,5,115,0,0,78,6,1,0,0,0,79,80,5,100,0,0,80,81,5,105,0,0,81,
        82,5,104,0,0,82,83,5,101,0,0,83,84,5,100,0,0,84,85,5,114,0,0,85,
        86,5,97,0,0,86,87,5,108,0,0,87,88,5,95,0,0,88,89,5,114,0,0,89,90,
        5,101,0,0,90,91,5,115,0,0,91,92,5,116,0,0,92,93,5,114,0,0,93,94,
        5,97,0,0,94,95,5,105,0,0,95,96,5,110,0,0,96,97,5,116,0,0,97,98,5,
        115,0,0,98,8,1,0,0,0,99,100,5,111,0,0,100,101,5,114,0,0,101,102,
        5,105,0,0,102,103,5,101,0,0,103,104,5,110,0,0,104,105,5,116,0,0,
        105,106,5,97,0,0,106,107,5,116,0,0,107,108,5,105,0,0,108,109,5,111,
        0,0,109,110,5,110,0,0,110,111,5,95,0,0,111,112,5,114,0,0,112,113,
        5,101,0,0,113,114,5,115,0,0,114,115,5,116,0,0,115,116,5,114,0,0,
        116,117,5,97,0,0,117,118,5,105,0,0,118,119,5,110,0,0,119,120,5,116,
        0,0,120,121,5,115,0,0,121,10,1,0,0,0,122,123,5,97,0,0,123,124,5,
        110,0,0,124,125,5,103,0,0,125,126,5,108,0,0,126,127,5,101,0,0,127,
        128,5,95,0,0,128,129,5,114,0,0,129,130,5,101,0,0,130,131,5,115,0,
        0,131,132,5,116,0,0,132,133,5,114,0,0,133,134,5,97,0,0,134,135,5,
        105,0,0,135,136,5,110,0,0,136,137,5,116,0,0,137,138,5,115,0,0,138,
        12,1,0,0,0,139,140,5,112,0,0,140,141,5,111,0,0,141,142,5,115,0,0,
        142,143,5,105,0,0,143,144,5,116,0,0,144,145,5,105,0,0,145,146,5,
        111,0,0,146,147,5,110,0,0,147,148,5,95,0,0,148,149,5,114,0,0,149,
        150,5,101,0,0,150,151,5,115,0,0,151,152,5,116,0,0,152,153,5,114,
        0,0,153,154,5,97,0,0,154,155,5,105,0,0,155,156,5,110,0,0,156,157,
        5,116,0,0,157,158,5,115,0,0,158,14,1,0,0,0,159,161,7,0,0,0,160,159,
        1,0,0,0,160,161,1,0,0,0,161,162,1,0,0,0,162,163,3,23,11,0,163,16,
        1,0,0,0,164,166,7,0,0,0,165,164,1,0,0,0,165,166,1,0,0,0,166,169,
        1,0,0,0,167,170,3,23,11,0,168,170,3,19,9,0,169,167,1,0,0,0,169,168,
        1,0,0,0,170,18,1,0,0,0,171,172,3,23,11,0,172,174,5,46,0,0,173,175,
        3,23,11,0,174,173,1,0,0,0,174,175,1,0,0,0,175,179,1,0,0,0,176,177,
        5,46,0,0,177,179,3,23,11,0,178,171,1,0,0,0,178,176,1,0,0,0,179,20,
        1,0,0,0,180,181,7,1,0,0,181,22,1,0,0,0,182,184,3,21,10,0,183,182,
        1,0,0,0,184,185,1,0,0,0,185,183,1,0,0,0,185,186,1,0,0,0,186,24,1,
        0,0,0,187,189,5,35,0,0,188,187,1,0,0,0,189,190,1,0,0,0,190,188,1,
        0,0,0,190,191,1,0,0,0,191,195,1,0,0,0,192,194,8,2,0,0,193,192,1,
        0,0,0,194,197,1,0,0,0,195,193,1,0,0,0,195,196,1,0,0,0,196,201,1,
        0,0,0,197,195,1,0,0,0,198,200,5,35,0,0,199,198,1,0,0,0,200,203,1,
        0,0,0,201,199,1,0,0,0,201,202,1,0,0,0,202,207,1,0,0,0,203,201,1,
        0,0,0,204,206,8,2,0,0,205,204,1,0,0,0,206,209,1,0,0,0,207,205,1,
        0,0,0,207,208,1,0,0,0,208,210,1,0,0,0,209,207,1,0,0,0,210,211,6,
        12,0,0,211,26,1,0,0,0,212,214,5,33,0,0,213,212,1,0,0,0,214,215,1,
        0,0,0,215,213,1,0,0,0,215,216,1,0,0,0,216,220,1,0,0,0,217,219,8,
        2,0,0,218,217,1,0,0,0,219,222,1,0,0,0,220,218,1,0,0,0,220,221,1,
        0,0,0,221,226,1,0,0,0,222,220,1,0,0,0,223,225,5,33,0,0,224,223,1,
        0,0,0,225,228,1,0,0,0,226,224,1,0,0,0,226,227,1,0,0,0,227,232,1,
        0,0,0,228,226,1,0,0,0,229,231,8,2,0,0,230,229,1,0,0,0,231,234,1,
        0,0,0,232,230,1,0,0,0,232,233,1,0,0,0,233,235,1,0,0,0,234,232,1,
        0,0,0,235,236,6,13,0,0,236,28,1,0,0,0,237,239,5,59,0,0,238,237,1,
        0,0,0,239,240,1,0,0,0,240,238,1,0,0,0,240,241,1,0,0,0,241,245,1,
        0,0,0,242,244,8,2,0,0,243,242,1,0,0,0,244,247,1,0,0,0,245,243,1,
        0,0,0,245,246,1,0,0,0,246,251,1,0,0,0,247,245,1,0,0,0,248,250,5,
        59,0,0,249,248,1,0,0,0,250,253,1,0,0,0,251,249,1,0,0,0,251,252,1,
        0,0,0,252,257,1,0,0,0,253,251,1,0,0,0,254,256,8,2,0,0,255,254,1,
        0,0,0,256,259,1,0,0,0,257,255,1,0,0,0,257,258,1,0,0,0,258,260,1,
        0,0,0,259,257,1,0,0,0,260,261,6,14,0,0,261,30,1,0,0,0,262,263,3,
        45,22,0,263,32,1,0,0,0,264,265,7,3,0,0,265,34,1,0,0,0,266,269,3,
        33,16,0,267,269,3,21,10,0,268,266,1,0,0,0,268,267,1,0,0,0,269,36,
        1,0,0,0,270,273,3,35,17,0,271,273,5,95,0,0,272,270,1,0,0,0,272,271,
        1,0,0,0,273,38,1,0,0,0,274,277,3,37,18,0,275,277,7,4,0,0,276,274,
        1,0,0,0,276,275,1,0,0,0,277,40,1,0,0,0,278,281,3,35,17,0,279,281,
        5,39,0,0,280,278,1,0,0,0,280,279,1,0,0,0,281,42,1,0,0,0,282,285,
        3,35,17,0,283,285,7,0,0,0,284,282,1,0,0,0,284,283,1,0,0,0,285,44,
        1,0,0,0,286,290,3,37,18,0,287,289,3,39,19,0,288,287,1,0,0,0,289,
        292,1,0,0,0,290,288,1,0,0,0,290,291,1,0,0,0,291,46,1,0,0,0,292,290,
        1,0,0,0,293,295,7,5,0,0,294,293,1,0,0,0,295,296,1,0,0,0,296,294,
        1,0,0,0,296,297,1,0,0,0,297,298,1,0,0,0,298,299,6,23,1,0,299,48,
        1,0,0,0,300,305,5,123,0,0,301,304,3,49,24,0,302,304,9,0,0,0,303,
        301,1,0,0,0,303,302,1,0,0,0,304,307,1,0,0,0,305,306,1,0,0,0,305,
        303,1,0,0,0,306,308,1,0,0,0,307,305,1,0,0,0,308,309,5,125,0,0,309,
        310,1,0,0,0,310,311,6,24,0,0,311,50,1,0,0,0,312,344,7,6,0,0,313,
        315,5,47,0,0,314,316,5,47,0,0,315,314,1,0,0,0,316,317,1,0,0,0,317,
        315,1,0,0,0,317,318,1,0,0,0,318,344,1,0,0,0,319,321,5,42,0,0,320,
        322,5,42,0,0,321,320,1,0,0,0,322,323,1,0,0,0,323,321,1,0,0,0,323,
        324,1,0,0,0,324,344,1,0,0,0,325,327,5,45,0,0,326,328,5,45,0,0,327,
        326,1,0,0,0,328,329,1,0,0,0,329,327,1,0,0,0,329,330,1,0,0,0,330,
        344,1,0,0,0,331,333,5,43,0,0,332,334,5,43,0,0,333,332,1,0,0,0,334,
        335,1,0,0,0,335,333,1,0,0,0,335,336,1,0,0,0,336,344,1,0,0,0,337,
        338,5,82,0,0,338,339,5,69,0,0,339,340,5,77,0,0,340,341,5,65,0,0,
        341,342,5,82,0,0,342,344,5,75,0,0,343,312,1,0,0,0,343,313,1,0,0,
        0,343,319,1,0,0,0,343,325,1,0,0,0,343,331,1,0,0,0,343,337,1,0,0,
        0,344,348,1,0,0,0,345,347,5,32,0,0,346,345,1,0,0,0,347,350,1,0,0,
        0,348,346,1,0,0,0,348,349,1,0,0,0,349,352,1,0,0,0,350,348,1,0,0,
        0,351,353,7,2,0,0,352,351,1,0,0,0,353,354,1,0,0,0,354,352,1,0,0,
        0,354,355,1,0,0,0,355,356,1,0,0,0,356,357,6,25,0,0,357,52,1,0,0,
        0,358,390,7,6,0,0,359,361,5,47,0,0,360,362,5,47,0,0,361,360,1,0,
        0,0,362,363,1,0,0,0,363,361,1,0,0,0,363,364,1,0,0,0,364,390,1,0,
        0,0,365,367,5,42,0,0,366,368,5,42,0,0,367,366,1,0,0,0,368,369,1,
        0,0,0,369,367,1,0,0,0,369,370,1,0,0,0,370,390,1,0,0,0,371,373,5,
        45,0,0,372,374,5,45,0,0,373,372,1,0,0,0,374,375,1,0,0,0,375,373,
        1,0,0,0,375,376,1,0,0,0,376,390,1,0,0,0,377,379,5,43,0,0,378,380,
        5,43,0,0,379,378,1,0,0,0,380,381,1,0,0,0,381,379,1,0,0,0,381,382,
        1,0,0,0,382,390,1,0,0,0,383,384,5,82,0,0,384,385,5,69,0,0,385,386,
        5,77,0,0,386,387,5,65,0,0,387,388,5,82,0,0,388,390,5,75,0,0,389,
        358,1,0,0,0,389,359,1,0,0,0,389,365,1,0,0,0,389,371,1,0,0,0,389,
        377,1,0,0,0,389,383,1,0,0,0,390,394,1,0,0,0,391,393,8,2,0,0,392,
        391,1,0,0,0,393,396,1,0,0,0,394,392,1,0,0,0,394,395,1,0,0,0,395,
        397,1,0,0,0,396,394,1,0,0,0,397,398,6,26,0,0,398,54,1,0,0,0,41,0,
        160,165,169,174,178,185,190,195,201,207,215,220,226,232,240,245,
        251,257,268,272,276,280,284,290,296,303,305,317,323,329,335,343,
        348,354,363,369,375,381,389,394,2,0,1,0,6,0,0
    ]

class GromacsMRLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    L_brkt = 1
    R_brkt = 2
    Distance_restraints = 3
    Dihedral_restraints = 4
    Orientation_restraints = 5
    Angle_restraints = 6
    Position_restraints = 7
    Integer = 8
    Float = 9
    SHARP_COMMENT = 10
    EXCLM_COMMENT = 11
    SMCLN_COMMENT = 12
    Simple_name = 13
    SPACE = 14
    COMMENT = 15
    SECTION_COMMENT = 16
    LINE_COMMENT = 17

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "'distance_restraints'", "'dihedral_restraints'", 
            "'orientation_restraints'", "'angle_restraints'", "'position_restraints'" ]

    symbolicNames = [ "<INVALID>",
            "L_brkt", "R_brkt", "Distance_restraints", "Dihedral_restraints", 
            "Orientation_restraints", "Angle_restraints", "Position_restraints", 
            "Integer", "Float", "SHARP_COMMENT", "EXCLM_COMMENT", "SMCLN_COMMENT", 
            "Simple_name", "SPACE", "COMMENT", "SECTION_COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "L_brkt", "R_brkt", "Distance_restraints", "Dihedral_restraints", 
                  "Orientation_restraints", "Angle_restraints", "Position_restraints", 
                  "Integer", "Float", "DEC_DOT_DEC", "DEC_DIGIT", "DECIMAL", 
                  "SHARP_COMMENT", "EXCLM_COMMENT", "SMCLN_COMMENT", "Simple_name", 
                  "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", "ATM_NAME_CHAR", 
                  "ATM_TYPE_CHAR", "SIMPLE_NAME", "SPACE", "COMMENT", "SECTION_COMMENT", 
                  "LINE_COMMENT" ]

    grammarFileName = "GromacsMRLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


