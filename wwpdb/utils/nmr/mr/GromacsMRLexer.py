# Generated from GromacsMRLexer.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,18,420,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
        2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
        6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,
        7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,
        8,3,8,182,8,8,1,8,1,8,1,9,3,9,187,8,9,1,9,1,9,3,9,191,8,9,1,10,1,
        10,1,10,3,10,196,8,10,1,10,1,10,3,10,200,8,10,1,11,1,11,1,12,4,12,
        205,8,12,11,12,12,12,206,1,13,4,13,210,8,13,11,13,12,13,211,1,13,
        5,13,215,8,13,10,13,12,13,218,9,13,1,13,5,13,221,8,13,10,13,12,13,
        224,9,13,1,13,5,13,227,8,13,10,13,12,13,230,9,13,1,13,1,13,1,14,
        4,14,235,8,14,11,14,12,14,236,1,14,5,14,240,8,14,10,14,12,14,243,
        9,14,1,14,5,14,246,8,14,10,14,12,14,249,9,14,1,14,5,14,252,8,14,
        10,14,12,14,255,9,14,1,14,1,14,1,15,4,15,260,8,15,11,15,12,15,261,
        1,15,5,15,265,8,15,10,15,12,15,268,9,15,1,15,5,15,271,8,15,10,15,
        12,15,274,9,15,1,15,5,15,277,8,15,10,15,12,15,280,9,15,1,15,1,15,
        1,16,1,16,1,17,1,17,1,18,1,18,3,18,290,8,18,1,19,1,19,3,19,294,8,
        19,1,20,1,20,3,20,298,8,20,1,21,1,21,3,21,302,8,21,1,22,1,22,3,22,
        306,8,22,1,23,1,23,5,23,310,8,23,10,23,12,23,313,9,23,1,24,4,24,
        316,8,24,11,24,12,24,317,1,24,1,24,1,25,1,25,1,25,5,25,325,8,25,
        10,25,12,25,328,9,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,4,26,337,
        8,26,11,26,12,26,338,1,26,1,26,4,26,343,8,26,11,26,12,26,344,1,26,
        1,26,4,26,349,8,26,11,26,12,26,350,1,26,1,26,4,26,355,8,26,11,26,
        12,26,356,1,26,1,26,1,26,1,26,1,26,1,26,3,26,365,8,26,1,26,5,26,
        368,8,26,10,26,12,26,371,9,26,1,26,4,26,374,8,26,11,26,12,26,375,
        1,26,1,26,1,27,1,27,1,27,4,27,383,8,27,11,27,12,27,384,1,27,1,27,
        4,27,389,8,27,11,27,12,27,390,1,27,1,27,4,27,395,8,27,11,27,12,27,
        396,1,27,1,27,4,27,401,8,27,11,27,12,27,402,1,27,1,27,1,27,1,27,
        1,27,1,27,3,27,411,8,27,1,27,5,27,414,8,27,10,27,12,27,417,9,27,
        1,27,1,27,1,326,0,28,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
        10,21,0,23,0,25,0,27,11,29,12,31,13,33,14,35,0,37,0,39,0,41,0,43,
        0,45,0,47,0,49,15,51,16,53,17,55,18,1,0,7,2,0,43,43,45,45,1,0,48,
        57,2,0,10,10,13,13,2,0,65,90,97,122,4,0,34,35,39,39,42,43,45,46,
        3,0,9,10,13,13,32,32,5,0,33,33,35,35,38,38,59,59,92,92,457,0,1,1,
        0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
        0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,27,1,0,0,
        0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,
        0,0,53,1,0,0,0,0,55,1,0,0,0,1,57,1,0,0,0,3,59,1,0,0,0,5,61,1,0,0,
        0,7,81,1,0,0,0,9,101,1,0,0,0,11,124,1,0,0,0,13,141,1,0,0,0,15,160,
        1,0,0,0,17,181,1,0,0,0,19,186,1,0,0,0,21,199,1,0,0,0,23,201,1,0,
        0,0,25,204,1,0,0,0,27,209,1,0,0,0,29,234,1,0,0,0,31,259,1,0,0,0,
        33,283,1,0,0,0,35,285,1,0,0,0,37,289,1,0,0,0,39,293,1,0,0,0,41,297,
        1,0,0,0,43,301,1,0,0,0,45,305,1,0,0,0,47,307,1,0,0,0,49,315,1,0,
        0,0,51,321,1,0,0,0,53,364,1,0,0,0,55,410,1,0,0,0,57,58,5,91,0,0,
        58,2,1,0,0,0,59,60,5,93,0,0,60,4,1,0,0,0,61,62,5,100,0,0,62,63,5,
        105,0,0,63,64,5,115,0,0,64,65,5,116,0,0,65,66,5,97,0,0,66,67,5,110,
        0,0,67,68,5,99,0,0,68,69,5,101,0,0,69,70,5,95,0,0,70,71,5,114,0,
        0,71,72,5,101,0,0,72,73,5,115,0,0,73,74,5,116,0,0,74,75,5,114,0,
        0,75,76,5,97,0,0,76,77,5,105,0,0,77,78,5,110,0,0,78,79,5,116,0,0,
        79,80,5,115,0,0,80,6,1,0,0,0,81,82,5,100,0,0,82,83,5,105,0,0,83,
        84,5,104,0,0,84,85,5,101,0,0,85,86,5,100,0,0,86,87,5,114,0,0,87,
        88,5,97,0,0,88,89,5,108,0,0,89,90,5,95,0,0,90,91,5,114,0,0,91,92,
        5,101,0,0,92,93,5,115,0,0,93,94,5,116,0,0,94,95,5,114,0,0,95,96,
        5,97,0,0,96,97,5,105,0,0,97,98,5,110,0,0,98,99,5,116,0,0,99,100,
        5,115,0,0,100,8,1,0,0,0,101,102,5,111,0,0,102,103,5,114,0,0,103,
        104,5,105,0,0,104,105,5,101,0,0,105,106,5,110,0,0,106,107,5,116,
        0,0,107,108,5,97,0,0,108,109,5,116,0,0,109,110,5,105,0,0,110,111,
        5,111,0,0,111,112,5,110,0,0,112,113,5,95,0,0,113,114,5,114,0,0,114,
        115,5,101,0,0,115,116,5,115,0,0,116,117,5,116,0,0,117,118,5,114,
        0,0,118,119,5,97,0,0,119,120,5,105,0,0,120,121,5,110,0,0,121,122,
        5,116,0,0,122,123,5,115,0,0,123,10,1,0,0,0,124,125,5,97,0,0,125,
        126,5,110,0,0,126,127,5,103,0,0,127,128,5,108,0,0,128,129,5,101,
        0,0,129,130,5,95,0,0,130,131,5,114,0,0,131,132,5,101,0,0,132,133,
        5,115,0,0,133,134,5,116,0,0,134,135,5,114,0,0,135,136,5,97,0,0,136,
        137,5,105,0,0,137,138,5,110,0,0,138,139,5,116,0,0,139,140,5,115,
        0,0,140,12,1,0,0,0,141,142,5,97,0,0,142,143,5,110,0,0,143,144,5,
        103,0,0,144,145,5,108,0,0,145,146,5,101,0,0,146,147,5,95,0,0,147,
        148,5,114,0,0,148,149,5,101,0,0,149,150,5,115,0,0,150,151,5,116,
        0,0,151,152,5,114,0,0,152,153,5,97,0,0,153,154,5,105,0,0,154,155,
        5,110,0,0,155,156,5,116,0,0,156,157,5,115,0,0,157,158,5,95,0,0,158,
        159,5,122,0,0,159,14,1,0,0,0,160,161,5,112,0,0,161,162,5,111,0,0,
        162,163,5,115,0,0,163,164,5,105,0,0,164,165,5,116,0,0,165,166,5,
        105,0,0,166,167,5,111,0,0,167,168,5,110,0,0,168,169,5,95,0,0,169,
        170,5,114,0,0,170,171,5,101,0,0,171,172,5,115,0,0,172,173,5,116,
        0,0,173,174,5,114,0,0,174,175,5,97,0,0,175,176,5,105,0,0,176,177,
        5,110,0,0,177,178,5,116,0,0,178,179,5,115,0,0,179,16,1,0,0,0,180,
        182,7,0,0,0,181,180,1,0,0,0,181,182,1,0,0,0,182,183,1,0,0,0,183,
        184,3,25,12,0,184,18,1,0,0,0,185,187,7,0,0,0,186,185,1,0,0,0,186,
        187,1,0,0,0,187,190,1,0,0,0,188,191,3,25,12,0,189,191,3,21,10,0,
        190,188,1,0,0,0,190,189,1,0,0,0,191,20,1,0,0,0,192,193,3,25,12,0,
        193,195,5,46,0,0,194,196,3,25,12,0,195,194,1,0,0,0,195,196,1,0,0,
        0,196,200,1,0,0,0,197,198,5,46,0,0,198,200,3,25,12,0,199,192,1,0,
        0,0,199,197,1,0,0,0,200,22,1,0,0,0,201,202,7,1,0,0,202,24,1,0,0,
        0,203,205,3,23,11,0,204,203,1,0,0,0,205,206,1,0,0,0,206,204,1,0,
        0,0,206,207,1,0,0,0,207,26,1,0,0,0,208,210,5,35,0,0,209,208,1,0,
        0,0,210,211,1,0,0,0,211,209,1,0,0,0,211,212,1,0,0,0,212,216,1,0,
        0,0,213,215,8,2,0,0,214,213,1,0,0,0,215,218,1,0,0,0,216,214,1,0,
        0,0,216,217,1,0,0,0,217,222,1,0,0,0,218,216,1,0,0,0,219,221,5,35,
        0,0,220,219,1,0,0,0,221,224,1,0,0,0,222,220,1,0,0,0,222,223,1,0,
        0,0,223,228,1,0,0,0,224,222,1,0,0,0,225,227,8,2,0,0,226,225,1,0,
        0,0,227,230,1,0,0,0,228,226,1,0,0,0,228,229,1,0,0,0,229,231,1,0,
        0,0,230,228,1,0,0,0,231,232,6,13,0,0,232,28,1,0,0,0,233,235,5,33,
        0,0,234,233,1,0,0,0,235,236,1,0,0,0,236,234,1,0,0,0,236,237,1,0,
        0,0,237,241,1,0,0,0,238,240,8,2,0,0,239,238,1,0,0,0,240,243,1,0,
        0,0,241,239,1,0,0,0,241,242,1,0,0,0,242,247,1,0,0,0,243,241,1,0,
        0,0,244,246,5,33,0,0,245,244,1,0,0,0,246,249,1,0,0,0,247,245,1,0,
        0,0,247,248,1,0,0,0,248,253,1,0,0,0,249,247,1,0,0,0,250,252,8,2,
        0,0,251,250,1,0,0,0,252,255,1,0,0,0,253,251,1,0,0,0,253,254,1,0,
        0,0,254,256,1,0,0,0,255,253,1,0,0,0,256,257,6,14,0,0,257,30,1,0,
        0,0,258,260,5,59,0,0,259,258,1,0,0,0,260,261,1,0,0,0,261,259,1,0,
        0,0,261,262,1,0,0,0,262,266,1,0,0,0,263,265,8,2,0,0,264,263,1,0,
        0,0,265,268,1,0,0,0,266,264,1,0,0,0,266,267,1,0,0,0,267,272,1,0,
        0,0,268,266,1,0,0,0,269,271,5,59,0,0,270,269,1,0,0,0,271,274,1,0,
        0,0,272,270,1,0,0,0,272,273,1,0,0,0,273,278,1,0,0,0,274,272,1,0,
        0,0,275,277,8,2,0,0,276,275,1,0,0,0,277,280,1,0,0,0,278,276,1,0,
        0,0,278,279,1,0,0,0,279,281,1,0,0,0,280,278,1,0,0,0,281,282,6,15,
        0,0,282,32,1,0,0,0,283,284,3,47,23,0,284,34,1,0,0,0,285,286,7,3,
        0,0,286,36,1,0,0,0,287,290,3,35,17,0,288,290,3,23,11,0,289,287,1,
        0,0,0,289,288,1,0,0,0,290,38,1,0,0,0,291,294,3,37,18,0,292,294,5,
        95,0,0,293,291,1,0,0,0,293,292,1,0,0,0,294,40,1,0,0,0,295,298,3,
        39,19,0,296,298,7,4,0,0,297,295,1,0,0,0,297,296,1,0,0,0,298,42,1,
        0,0,0,299,302,3,37,18,0,300,302,5,39,0,0,301,299,1,0,0,0,301,300,
        1,0,0,0,302,44,1,0,0,0,303,306,3,37,18,0,304,306,7,0,0,0,305,303,
        1,0,0,0,305,304,1,0,0,0,306,46,1,0,0,0,307,311,3,39,19,0,308,310,
        3,41,20,0,309,308,1,0,0,0,310,313,1,0,0,0,311,309,1,0,0,0,311,312,
        1,0,0,0,312,48,1,0,0,0,313,311,1,0,0,0,314,316,7,5,0,0,315,314,1,
        0,0,0,316,317,1,0,0,0,317,315,1,0,0,0,317,318,1,0,0,0,318,319,1,
        0,0,0,319,320,6,24,1,0,320,50,1,0,0,0,321,326,5,123,0,0,322,325,
        3,51,25,0,323,325,9,0,0,0,324,322,1,0,0,0,324,323,1,0,0,0,325,328,
        1,0,0,0,326,327,1,0,0,0,326,324,1,0,0,0,327,329,1,0,0,0,328,326,
        1,0,0,0,329,330,5,125,0,0,330,331,1,0,0,0,331,332,6,25,0,0,332,52,
        1,0,0,0,333,365,7,6,0,0,334,336,5,47,0,0,335,337,5,47,0,0,336,335,
        1,0,0,0,337,338,1,0,0,0,338,336,1,0,0,0,338,339,1,0,0,0,339,365,
        1,0,0,0,340,342,5,42,0,0,341,343,5,42,0,0,342,341,1,0,0,0,343,344,
        1,0,0,0,344,342,1,0,0,0,344,345,1,0,0,0,345,365,1,0,0,0,346,348,
        5,45,0,0,347,349,5,45,0,0,348,347,1,0,0,0,349,350,1,0,0,0,350,348,
        1,0,0,0,350,351,1,0,0,0,351,365,1,0,0,0,352,354,5,43,0,0,353,355,
        5,43,0,0,354,353,1,0,0,0,355,356,1,0,0,0,356,354,1,0,0,0,356,357,
        1,0,0,0,357,365,1,0,0,0,358,359,5,82,0,0,359,360,5,69,0,0,360,361,
        5,77,0,0,361,362,5,65,0,0,362,363,5,82,0,0,363,365,5,75,0,0,364,
        333,1,0,0,0,364,334,1,0,0,0,364,340,1,0,0,0,364,346,1,0,0,0,364,
        352,1,0,0,0,364,358,1,0,0,0,365,369,1,0,0,0,366,368,5,32,0,0,367,
        366,1,0,0,0,368,371,1,0,0,0,369,367,1,0,0,0,369,370,1,0,0,0,370,
        373,1,0,0,0,371,369,1,0,0,0,372,374,7,2,0,0,373,372,1,0,0,0,374,
        375,1,0,0,0,375,373,1,0,0,0,375,376,1,0,0,0,376,377,1,0,0,0,377,
        378,6,26,0,0,378,54,1,0,0,0,379,411,7,6,0,0,380,382,5,47,0,0,381,
        383,5,47,0,0,382,381,1,0,0,0,383,384,1,0,0,0,384,382,1,0,0,0,384,
        385,1,0,0,0,385,411,1,0,0,0,386,388,5,42,0,0,387,389,5,42,0,0,388,
        387,1,0,0,0,389,390,1,0,0,0,390,388,1,0,0,0,390,391,1,0,0,0,391,
        411,1,0,0,0,392,394,5,45,0,0,393,395,5,45,0,0,394,393,1,0,0,0,395,
        396,1,0,0,0,396,394,1,0,0,0,396,397,1,0,0,0,397,411,1,0,0,0,398,
        400,5,43,0,0,399,401,5,43,0,0,400,399,1,0,0,0,401,402,1,0,0,0,402,
        400,1,0,0,0,402,403,1,0,0,0,403,411,1,0,0,0,404,405,5,82,0,0,405,
        406,5,69,0,0,406,407,5,77,0,0,407,408,5,65,0,0,408,409,5,82,0,0,
        409,411,5,75,0,0,410,379,1,0,0,0,410,380,1,0,0,0,410,386,1,0,0,0,
        410,392,1,0,0,0,410,398,1,0,0,0,410,404,1,0,0,0,411,415,1,0,0,0,
        412,414,8,2,0,0,413,412,1,0,0,0,414,417,1,0,0,0,415,413,1,0,0,0,
        415,416,1,0,0,0,416,418,1,0,0,0,417,415,1,0,0,0,418,419,6,27,0,0,
        419,56,1,0,0,0,41,0,181,186,190,195,199,206,211,216,222,228,236,
        241,247,253,261,266,272,278,289,293,297,301,305,311,317,324,326,
        338,344,350,356,364,369,375,384,390,396,402,410,415,2,0,1,0,6,0,
        0
    ]

class GromacsMRLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    L_brkt = 1
    R_brkt = 2
    Distance_restraints = 3
    Dihedral_restraints = 4
    Orientation_restraints = 5
    Angle_restraints = 6
    Angle_restraints_z = 7
    Position_restraints = 8
    Integer = 9
    Float = 10
    SHARP_COMMENT = 11
    EXCLM_COMMENT = 12
    SMCLN_COMMENT = 13
    Simple_name = 14
    SPACE = 15
    COMMENT = 16
    SECTION_COMMENT = 17
    LINE_COMMENT = 18

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "'distance_restraints'", "'dihedral_restraints'", 
            "'orientation_restraints'", "'angle_restraints'", "'angle_restraints_z'", 
            "'position_restraints'" ]

    symbolicNames = [ "<INVALID>",
            "L_brkt", "R_brkt", "Distance_restraints", "Dihedral_restraints", 
            "Orientation_restraints", "Angle_restraints", "Angle_restraints_z", 
            "Position_restraints", "Integer", "Float", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Simple_name", "SPACE", "COMMENT", 
            "SECTION_COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "L_brkt", "R_brkt", "Distance_restraints", "Dihedral_restraints", 
                  "Orientation_restraints", "Angle_restraints", "Angle_restraints_z", 
                  "Position_restraints", "Integer", "Float", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", 
                  "SMCLN_COMMENT", "Simple_name", "ALPHA", "ALPHA_NUM", 
                  "START_CHAR", "NAME_CHAR", "ATM_NAME_CHAR", "ATM_TYPE_CHAR", 
                  "SIMPLE_NAME", "SPACE", "COMMENT", "SECTION_COMMENT", 
                  "LINE_COMMENT" ]

    grammarFileName = "GromacsMRLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


