# Generated from IsdMRLexer.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,11,308,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        3,1,57,8,1,1,1,1,1,1,2,3,2,62,8,2,1,2,1,2,3,2,66,8,2,1,3,1,3,1,3,
        1,3,1,3,1,3,3,3,74,8,3,1,4,1,4,1,5,4,5,79,8,5,11,5,12,5,80,1,6,4,
        6,84,8,6,11,6,12,6,85,1,6,5,6,89,8,6,10,6,12,6,92,9,6,1,6,5,6,95,
        8,6,10,6,12,6,98,9,6,1,6,5,6,101,8,6,10,6,12,6,104,9,6,1,6,1,6,1,
        7,4,7,109,8,7,11,7,12,7,110,1,7,5,7,114,8,7,10,7,12,7,117,9,7,1,
        7,5,7,120,8,7,10,7,12,7,123,9,7,1,7,5,7,126,8,7,10,7,12,7,129,9,
        7,1,7,1,7,1,8,4,8,134,8,8,11,8,12,8,135,1,8,5,8,139,8,8,10,8,12,
        8,142,9,8,1,8,5,8,145,8,8,10,8,12,8,148,9,8,1,8,5,8,151,8,8,10,8,
        12,8,154,9,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,3,11,166,
        8,11,1,12,1,12,3,12,170,8,12,1,13,1,13,3,13,174,8,13,1,14,1,14,3,
        14,178,8,14,1,15,1,15,3,15,182,8,15,1,16,1,16,5,16,186,8,16,10,16,
        12,16,189,9,16,1,17,4,17,192,8,17,11,17,12,17,193,1,17,1,17,1,18,
        1,18,1,18,5,18,201,8,18,10,18,12,18,204,9,18,1,18,1,18,1,18,1,18,
        1,19,1,19,1,19,4,19,213,8,19,11,19,12,19,214,1,19,1,19,4,19,219,
        8,19,11,19,12,19,220,1,19,1,19,4,19,225,8,19,11,19,12,19,226,1,19,
        1,19,4,19,231,8,19,11,19,12,19,232,1,19,1,19,4,19,237,8,19,11,19,
        12,19,238,1,19,1,19,1,19,1,19,1,19,1,19,3,19,247,8,19,1,19,5,19,
        250,8,19,10,19,12,19,253,9,19,1,19,4,19,256,8,19,11,19,12,19,257,
        1,19,1,19,1,20,1,20,1,20,4,20,265,8,20,11,20,12,20,266,1,20,1,20,
        4,20,271,8,20,11,20,12,20,272,1,20,1,20,4,20,277,8,20,11,20,12,20,
        278,1,20,1,20,4,20,283,8,20,11,20,12,20,284,1,20,1,20,4,20,289,8,
        20,11,20,12,20,290,1,20,1,20,1,20,1,20,1,20,1,20,3,20,299,8,20,1,
        20,5,20,302,8,20,10,20,12,20,305,9,20,1,20,1,20,1,202,0,21,1,1,3,
        2,5,3,7,0,9,0,11,0,13,4,15,5,17,6,19,7,21,0,23,0,25,0,27,0,29,0,
        31,0,33,0,35,8,37,9,39,10,41,11,1,0,18,2,0,68,68,100,100,2,0,73,
        73,105,105,2,0,83,83,115,115,2,0,84,84,116,116,2,0,65,65,97,97,2,
        0,78,78,110,110,2,0,67,67,99,99,2,0,69,69,101,101,2,0,43,43,45,45,
        1,0,48,57,2,0,10,10,13,13,2,0,65,90,97,122,4,0,34,35,39,39,42,43,
        45,46,3,0,9,10,13,13,32,32,5,0,33,33,35,35,38,38,59,59,92,92,2,0,
        82,82,114,114,2,0,77,77,109,109,2,0,75,75,107,107,348,0,1,1,0,0,
        0,0,3,1,0,0,0,0,5,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,
        0,19,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,
        1,43,1,0,0,0,3,56,1,0,0,0,5,61,1,0,0,0,7,73,1,0,0,0,9,75,1,0,0,0,
        11,78,1,0,0,0,13,83,1,0,0,0,15,108,1,0,0,0,17,133,1,0,0,0,19,157,
        1,0,0,0,21,161,1,0,0,0,23,165,1,0,0,0,25,169,1,0,0,0,27,173,1,0,
        0,0,29,177,1,0,0,0,31,181,1,0,0,0,33,183,1,0,0,0,35,191,1,0,0,0,
        37,197,1,0,0,0,39,246,1,0,0,0,41,298,1,0,0,0,43,44,7,0,0,0,44,45,
        7,1,0,0,45,46,7,2,0,0,46,47,7,3,0,0,47,48,7,4,0,0,48,49,7,5,0,0,
        49,50,7,6,0,0,50,51,7,7,0,0,51,52,5,61,0,0,52,53,1,0,0,0,53,54,3,
        5,2,0,54,2,1,0,0,0,55,57,7,8,0,0,56,55,1,0,0,0,56,57,1,0,0,0,57,
        58,1,0,0,0,58,59,3,11,5,0,59,4,1,0,0,0,60,62,7,8,0,0,61,60,1,0,0,
        0,61,62,1,0,0,0,62,65,1,0,0,0,63,66,3,11,5,0,64,66,3,7,3,0,65,63,
        1,0,0,0,65,64,1,0,0,0,66,6,1,0,0,0,67,68,3,11,5,0,68,69,5,46,0,0,
        69,70,3,11,5,0,70,74,1,0,0,0,71,72,5,46,0,0,72,74,3,11,5,0,73,67,
        1,0,0,0,73,71,1,0,0,0,74,8,1,0,0,0,75,76,7,9,0,0,76,10,1,0,0,0,77,
        79,3,9,4,0,78,77,1,0,0,0,79,80,1,0,0,0,80,78,1,0,0,0,80,81,1,0,0,
        0,81,12,1,0,0,0,82,84,5,35,0,0,83,82,1,0,0,0,84,85,1,0,0,0,85,83,
        1,0,0,0,85,86,1,0,0,0,86,90,1,0,0,0,87,89,8,10,0,0,88,87,1,0,0,0,
        89,92,1,0,0,0,90,88,1,0,0,0,90,91,1,0,0,0,91,96,1,0,0,0,92,90,1,
        0,0,0,93,95,5,35,0,0,94,93,1,0,0,0,95,98,1,0,0,0,96,94,1,0,0,0,96,
        97,1,0,0,0,97,102,1,0,0,0,98,96,1,0,0,0,99,101,8,10,0,0,100,99,1,
        0,0,0,101,104,1,0,0,0,102,100,1,0,0,0,102,103,1,0,0,0,103,105,1,
        0,0,0,104,102,1,0,0,0,105,106,6,6,0,0,106,14,1,0,0,0,107,109,5,33,
        0,0,108,107,1,0,0,0,109,110,1,0,0,0,110,108,1,0,0,0,110,111,1,0,
        0,0,111,115,1,0,0,0,112,114,8,10,0,0,113,112,1,0,0,0,114,117,1,0,
        0,0,115,113,1,0,0,0,115,116,1,0,0,0,116,121,1,0,0,0,117,115,1,0,
        0,0,118,120,5,33,0,0,119,118,1,0,0,0,120,123,1,0,0,0,121,119,1,0,
        0,0,121,122,1,0,0,0,122,127,1,0,0,0,123,121,1,0,0,0,124,126,8,10,
        0,0,125,124,1,0,0,0,126,129,1,0,0,0,127,125,1,0,0,0,127,128,1,0,
        0,0,128,130,1,0,0,0,129,127,1,0,0,0,130,131,6,7,0,0,131,16,1,0,0,
        0,132,134,5,59,0,0,133,132,1,0,0,0,134,135,1,0,0,0,135,133,1,0,0,
        0,135,136,1,0,0,0,136,140,1,0,0,0,137,139,8,10,0,0,138,137,1,0,0,
        0,139,142,1,0,0,0,140,138,1,0,0,0,140,141,1,0,0,0,141,146,1,0,0,
        0,142,140,1,0,0,0,143,145,5,59,0,0,144,143,1,0,0,0,145,148,1,0,0,
        0,146,144,1,0,0,0,146,147,1,0,0,0,147,152,1,0,0,0,148,146,1,0,0,
        0,149,151,8,10,0,0,150,149,1,0,0,0,151,154,1,0,0,0,152,150,1,0,0,
        0,152,153,1,0,0,0,153,155,1,0,0,0,154,152,1,0,0,0,155,156,6,8,0,
        0,156,18,1,0,0,0,157,158,3,33,16,0,158,159,3,11,5,0,159,160,3,33,
        16,0,160,20,1,0,0,0,161,162,7,11,0,0,162,22,1,0,0,0,163,166,3,21,
        10,0,164,166,3,9,4,0,165,163,1,0,0,0,165,164,1,0,0,0,166,24,1,0,
        0,0,167,170,3,23,11,0,168,170,5,95,0,0,169,167,1,0,0,0,169,168,1,
        0,0,0,170,26,1,0,0,0,171,174,3,25,12,0,172,174,7,12,0,0,173,171,
        1,0,0,0,173,172,1,0,0,0,174,28,1,0,0,0,175,178,3,23,11,0,176,178,
        5,39,0,0,177,175,1,0,0,0,177,176,1,0,0,0,178,30,1,0,0,0,179,182,
        3,23,11,0,180,182,7,8,0,0,181,179,1,0,0,0,181,180,1,0,0,0,182,32,
        1,0,0,0,183,187,3,25,12,0,184,186,3,27,13,0,185,184,1,0,0,0,186,
        189,1,0,0,0,187,185,1,0,0,0,187,188,1,0,0,0,188,34,1,0,0,0,189,187,
        1,0,0,0,190,192,7,13,0,0,191,190,1,0,0,0,192,193,1,0,0,0,193,191,
        1,0,0,0,193,194,1,0,0,0,194,195,1,0,0,0,195,196,6,17,1,0,196,36,
        1,0,0,0,197,202,5,40,0,0,198,201,3,37,18,0,199,201,9,0,0,0,200,198,
        1,0,0,0,200,199,1,0,0,0,201,204,1,0,0,0,202,203,1,0,0,0,202,200,
        1,0,0,0,203,205,1,0,0,0,204,202,1,0,0,0,205,206,5,41,0,0,206,207,
        1,0,0,0,207,208,6,18,0,0,208,38,1,0,0,0,209,247,7,14,0,0,210,212,
        5,47,0,0,211,213,5,47,0,0,212,211,1,0,0,0,213,214,1,0,0,0,214,212,
        1,0,0,0,214,215,1,0,0,0,215,247,1,0,0,0,216,218,5,42,0,0,217,219,
        5,42,0,0,218,217,1,0,0,0,219,220,1,0,0,0,220,218,1,0,0,0,220,221,
        1,0,0,0,221,247,1,0,0,0,222,224,5,45,0,0,223,225,5,45,0,0,224,223,
        1,0,0,0,225,226,1,0,0,0,226,224,1,0,0,0,226,227,1,0,0,0,227,247,
        1,0,0,0,228,230,5,43,0,0,229,231,5,43,0,0,230,229,1,0,0,0,231,232,
        1,0,0,0,232,230,1,0,0,0,232,233,1,0,0,0,233,247,1,0,0,0,234,236,
        5,61,0,0,235,237,5,61,0,0,236,235,1,0,0,0,237,238,1,0,0,0,238,236,
        1,0,0,0,238,239,1,0,0,0,239,247,1,0,0,0,240,241,7,15,0,0,241,242,
        7,7,0,0,242,243,7,16,0,0,243,244,7,4,0,0,244,245,7,15,0,0,245,247,
        7,17,0,0,246,209,1,0,0,0,246,210,1,0,0,0,246,216,1,0,0,0,246,222,
        1,0,0,0,246,228,1,0,0,0,246,234,1,0,0,0,246,240,1,0,0,0,247,251,
        1,0,0,0,248,250,5,32,0,0,249,248,1,0,0,0,250,253,1,0,0,0,251,249,
        1,0,0,0,251,252,1,0,0,0,252,255,1,0,0,0,253,251,1,0,0,0,254,256,
        7,10,0,0,255,254,1,0,0,0,256,257,1,0,0,0,257,255,1,0,0,0,257,258,
        1,0,0,0,258,259,1,0,0,0,259,260,6,19,0,0,260,40,1,0,0,0,261,299,
        7,14,0,0,262,264,5,47,0,0,263,265,5,47,0,0,264,263,1,0,0,0,265,266,
        1,0,0,0,266,264,1,0,0,0,266,267,1,0,0,0,267,299,1,0,0,0,268,270,
        5,42,0,0,269,271,5,42,0,0,270,269,1,0,0,0,271,272,1,0,0,0,272,270,
        1,0,0,0,272,273,1,0,0,0,273,299,1,0,0,0,274,276,5,45,0,0,275,277,
        5,45,0,0,276,275,1,0,0,0,277,278,1,0,0,0,278,276,1,0,0,0,278,279,
        1,0,0,0,279,299,1,0,0,0,280,282,5,43,0,0,281,283,5,43,0,0,282,281,
        1,0,0,0,283,284,1,0,0,0,284,282,1,0,0,0,284,285,1,0,0,0,285,299,
        1,0,0,0,286,288,5,61,0,0,287,289,5,61,0,0,288,287,1,0,0,0,289,290,
        1,0,0,0,290,288,1,0,0,0,290,291,1,0,0,0,291,299,1,0,0,0,292,293,
        7,15,0,0,293,294,7,7,0,0,294,295,7,16,0,0,295,296,7,4,0,0,296,297,
        7,15,0,0,297,299,7,17,0,0,298,261,1,0,0,0,298,262,1,0,0,0,298,268,
        1,0,0,0,298,274,1,0,0,0,298,280,1,0,0,0,298,286,1,0,0,0,298,292,
        1,0,0,0,299,303,1,0,0,0,300,302,8,10,0,0,301,300,1,0,0,0,302,305,
        1,0,0,0,303,301,1,0,0,0,303,304,1,0,0,0,304,306,1,0,0,0,305,303,
        1,0,0,0,306,307,6,20,0,0,307,42,1,0,0,0,42,0,56,61,65,73,80,85,90,
        96,102,110,115,121,127,135,140,146,152,165,169,173,177,181,187,193,
        200,202,214,220,226,232,238,246,251,257,266,272,278,284,290,298,
        303,2,0,1,0,6,0,0
    ]

class IsdMRLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Distance = 1
    Integer = 2
    Float = 3
    SHARP_COMMENT = 4
    EXCLM_COMMENT = 5
    SMCLN_COMMENT = 6
    Atom_selection = 7
    SPACE = 8
    ENCLOSE_COMMENT = 9
    SECTION_COMMENT = 10
    LINE_COMMENT = 11

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "Distance", "Integer", "Float", "SHARP_COMMENT", "EXCLM_COMMENT", 
            "SMCLN_COMMENT", "Atom_selection", "SPACE", "ENCLOSE_COMMENT", 
            "SECTION_COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "Distance", "Integer", "Float", "DEC_DOT_DEC", "DEC_DIGIT", 
                  "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", "SMCLN_COMMENT", 
                  "Atom_selection", "ALPHA", "ALPHA_NUM", "START_CHAR", 
                  "NAME_CHAR", "ATM_NAME_CHAR", "ATM_TYPE_CHAR", "SIMPLE_NAME", 
                  "SPACE", "ENCLOSE_COMMENT", "SECTION_COMMENT", "LINE_COMMENT" ]

    grammarFileName = "IsdMRLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


