# Generated from SybylMRLexer.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,327,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,1,0,1,0,1,0,1,0,1,0,1,
        0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,
        3,1,3,1,3,1,4,3,4,75,8,4,1,4,1,4,1,5,3,5,80,8,5,1,5,1,5,3,5,84,8,
        5,1,6,1,6,1,6,1,6,1,6,1,6,3,6,92,8,6,1,7,1,7,1,8,4,8,97,8,8,11,8,
        12,8,98,1,9,4,9,102,8,9,11,9,12,9,103,1,9,5,9,107,8,9,10,9,12,9,
        110,9,9,1,9,5,9,113,8,9,10,9,12,9,116,9,9,1,9,5,9,119,8,9,10,9,12,
        9,122,9,9,1,9,1,9,1,10,4,10,127,8,10,11,10,12,10,128,1,10,5,10,132,
        8,10,10,10,12,10,135,9,10,1,10,5,10,138,8,10,10,10,12,10,141,9,10,
        1,10,5,10,144,8,10,10,10,12,10,147,9,10,1,10,1,10,1,11,4,11,152,
        8,11,11,11,12,11,153,1,11,5,11,157,8,11,10,11,12,11,160,9,11,1,11,
        5,11,163,8,11,10,11,12,11,166,9,11,1,11,5,11,169,8,11,10,11,12,11,
        172,9,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,14,1,14,
        3,14,185,8,14,1,15,1,15,3,15,189,8,15,1,16,1,16,3,16,193,8,16,1,
        17,1,17,3,17,197,8,17,1,18,1,18,3,18,201,8,18,1,19,1,19,5,19,205,
        8,19,10,19,12,19,208,9,19,1,20,4,20,211,8,20,11,20,12,20,212,1,20,
        1,20,1,21,1,21,1,21,5,21,220,8,21,10,21,12,21,223,9,21,1,21,1,21,
        1,21,1,21,1,22,1,22,1,22,4,22,232,8,22,11,22,12,22,233,1,22,1,22,
        4,22,238,8,22,11,22,12,22,239,1,22,1,22,4,22,244,8,22,11,22,12,22,
        245,1,22,1,22,4,22,250,8,22,11,22,12,22,251,1,22,1,22,4,22,256,8,
        22,11,22,12,22,257,1,22,1,22,1,22,1,22,1,22,1,22,3,22,266,8,22,1,
        22,5,22,269,8,22,10,22,12,22,272,9,22,1,22,4,22,275,8,22,11,22,12,
        22,276,1,22,1,22,1,23,1,23,1,23,4,23,284,8,23,11,23,12,23,285,1,
        23,1,23,4,23,290,8,23,11,23,12,23,291,1,23,1,23,4,23,296,8,23,11,
        23,12,23,297,1,23,1,23,4,23,302,8,23,11,23,12,23,303,1,23,1,23,4,
        23,308,8,23,11,23,12,23,309,1,23,1,23,1,23,1,23,1,23,1,23,3,23,318,
        8,23,1,23,5,23,321,8,23,10,23,12,23,324,9,23,1,23,1,23,1,221,0,24,
        1,1,3,2,5,3,7,4,9,5,11,6,13,0,15,0,17,0,19,7,21,8,23,9,25,10,27,
        0,29,0,31,0,33,0,35,0,37,0,39,0,41,11,43,12,45,13,47,14,1,0,18,2,
        0,65,65,97,97,2,0,84,84,116,116,2,0,79,79,111,111,2,0,77,77,109,
        109,2,0,76,76,108,108,2,0,87,87,119,119,2,0,69,69,101,101,2,0,82,
        82,114,114,2,0,85,85,117,117,2,0,80,80,112,112,2,0,43,43,45,45,1,
        0,48,57,2,0,10,10,13,13,2,0,65,90,97,122,4,0,34,35,39,39,42,43,45,
        46,3,0,9,10,13,13,32,32,5,0,33,33,35,35,38,38,59,59,92,92,2,0,75,
        75,107,107,367,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
        9,1,0,0,0,0,11,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,
        25,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,1,
        49,1,0,0,0,3,55,1,0,0,0,5,61,1,0,0,0,7,67,1,0,0,0,9,74,1,0,0,0,11,
        79,1,0,0,0,13,91,1,0,0,0,15,93,1,0,0,0,17,96,1,0,0,0,19,101,1,0,
        0,0,21,126,1,0,0,0,23,151,1,0,0,0,25,175,1,0,0,0,27,180,1,0,0,0,
        29,184,1,0,0,0,31,188,1,0,0,0,33,192,1,0,0,0,35,196,1,0,0,0,37,200,
        1,0,0,0,39,202,1,0,0,0,41,210,1,0,0,0,43,216,1,0,0,0,45,265,1,0,
        0,0,47,317,1,0,0,0,49,50,7,0,0,0,50,51,7,1,0,0,51,52,7,2,0,0,52,
        53,7,3,0,0,53,54,5,49,0,0,54,2,1,0,0,0,55,56,7,0,0,0,56,57,7,1,0,
        0,57,58,7,2,0,0,58,59,7,3,0,0,59,60,5,50,0,0,60,4,1,0,0,0,61,62,
        7,4,0,0,62,63,7,2,0,0,63,64,7,5,0,0,64,65,7,6,0,0,65,66,7,7,0,0,
        66,6,1,0,0,0,67,68,7,8,0,0,68,69,7,9,0,0,69,70,7,9,0,0,70,71,7,6,
        0,0,71,72,7,7,0,0,72,8,1,0,0,0,73,75,7,10,0,0,74,73,1,0,0,0,74,75,
        1,0,0,0,75,76,1,0,0,0,76,77,3,17,8,0,77,10,1,0,0,0,78,80,7,10,0,
        0,79,78,1,0,0,0,79,80,1,0,0,0,80,83,1,0,0,0,81,84,3,17,8,0,82,84,
        3,13,6,0,83,81,1,0,0,0,83,82,1,0,0,0,84,12,1,0,0,0,85,86,3,17,8,
        0,86,87,5,46,0,0,87,88,3,17,8,0,88,92,1,0,0,0,89,90,5,46,0,0,90,
        92,3,17,8,0,91,85,1,0,0,0,91,89,1,0,0,0,92,14,1,0,0,0,93,94,7,11,
        0,0,94,16,1,0,0,0,95,97,3,15,7,0,96,95,1,0,0,0,97,98,1,0,0,0,98,
        96,1,0,0,0,98,99,1,0,0,0,99,18,1,0,0,0,100,102,5,35,0,0,101,100,
        1,0,0,0,102,103,1,0,0,0,103,101,1,0,0,0,103,104,1,0,0,0,104,108,
        1,0,0,0,105,107,8,12,0,0,106,105,1,0,0,0,107,110,1,0,0,0,108,106,
        1,0,0,0,108,109,1,0,0,0,109,114,1,0,0,0,110,108,1,0,0,0,111,113,
        5,35,0,0,112,111,1,0,0,0,113,116,1,0,0,0,114,112,1,0,0,0,114,115,
        1,0,0,0,115,120,1,0,0,0,116,114,1,0,0,0,117,119,8,12,0,0,118,117,
        1,0,0,0,119,122,1,0,0,0,120,118,1,0,0,0,120,121,1,0,0,0,121,123,
        1,0,0,0,122,120,1,0,0,0,123,124,6,9,0,0,124,20,1,0,0,0,125,127,5,
        33,0,0,126,125,1,0,0,0,127,128,1,0,0,0,128,126,1,0,0,0,128,129,1,
        0,0,0,129,133,1,0,0,0,130,132,8,12,0,0,131,130,1,0,0,0,132,135,1,
        0,0,0,133,131,1,0,0,0,133,134,1,0,0,0,134,139,1,0,0,0,135,133,1,
        0,0,0,136,138,5,33,0,0,137,136,1,0,0,0,138,141,1,0,0,0,139,137,1,
        0,0,0,139,140,1,0,0,0,140,145,1,0,0,0,141,139,1,0,0,0,142,144,8,
        12,0,0,143,142,1,0,0,0,144,147,1,0,0,0,145,143,1,0,0,0,145,146,1,
        0,0,0,146,148,1,0,0,0,147,145,1,0,0,0,148,149,6,10,0,0,149,22,1,
        0,0,0,150,152,5,59,0,0,151,150,1,0,0,0,152,153,1,0,0,0,153,151,1,
        0,0,0,153,154,1,0,0,0,154,158,1,0,0,0,155,157,8,12,0,0,156,155,1,
        0,0,0,157,160,1,0,0,0,158,156,1,0,0,0,158,159,1,0,0,0,159,164,1,
        0,0,0,160,158,1,0,0,0,161,163,5,59,0,0,162,161,1,0,0,0,163,166,1,
        0,0,0,164,162,1,0,0,0,164,165,1,0,0,0,165,170,1,0,0,0,166,164,1,
        0,0,0,167,169,8,12,0,0,168,167,1,0,0,0,169,172,1,0,0,0,170,168,1,
        0,0,0,170,171,1,0,0,0,171,173,1,0,0,0,172,170,1,0,0,0,173,174,6,
        11,0,0,174,24,1,0,0,0,175,176,3,39,19,0,176,177,3,17,8,0,177,178,
        5,46,0,0,178,179,3,39,19,0,179,26,1,0,0,0,180,181,7,13,0,0,181,28,
        1,0,0,0,182,185,3,27,13,0,183,185,3,15,7,0,184,182,1,0,0,0,184,183,
        1,0,0,0,185,30,1,0,0,0,186,189,3,29,14,0,187,189,5,95,0,0,188,186,
        1,0,0,0,188,187,1,0,0,0,189,32,1,0,0,0,190,193,3,31,15,0,191,193,
        7,14,0,0,192,190,1,0,0,0,192,191,1,0,0,0,193,34,1,0,0,0,194,197,
        3,29,14,0,195,197,5,39,0,0,196,194,1,0,0,0,196,195,1,0,0,0,197,36,
        1,0,0,0,198,201,3,29,14,0,199,201,7,10,0,0,200,198,1,0,0,0,200,199,
        1,0,0,0,201,38,1,0,0,0,202,206,3,31,15,0,203,205,3,33,16,0,204,203,
        1,0,0,0,205,208,1,0,0,0,206,204,1,0,0,0,206,207,1,0,0,0,207,40,1,
        0,0,0,208,206,1,0,0,0,209,211,7,15,0,0,210,209,1,0,0,0,211,212,1,
        0,0,0,212,210,1,0,0,0,212,213,1,0,0,0,213,214,1,0,0,0,214,215,6,
        20,1,0,215,42,1,0,0,0,216,221,5,123,0,0,217,220,3,43,21,0,218,220,
        9,0,0,0,219,217,1,0,0,0,219,218,1,0,0,0,220,223,1,0,0,0,221,222,
        1,0,0,0,221,219,1,0,0,0,222,224,1,0,0,0,223,221,1,0,0,0,224,225,
        5,125,0,0,225,226,1,0,0,0,226,227,6,21,0,0,227,44,1,0,0,0,228,266,
        7,16,0,0,229,231,5,47,0,0,230,232,5,47,0,0,231,230,1,0,0,0,232,233,
        1,0,0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,266,1,0,0,0,235,237,
        5,42,0,0,236,238,5,42,0,0,237,236,1,0,0,0,238,239,1,0,0,0,239,237,
        1,0,0,0,239,240,1,0,0,0,240,266,1,0,0,0,241,243,5,45,0,0,242,244,
        5,45,0,0,243,242,1,0,0,0,244,245,1,0,0,0,245,243,1,0,0,0,245,246,
        1,0,0,0,246,266,1,0,0,0,247,249,5,43,0,0,248,250,5,43,0,0,249,248,
        1,0,0,0,250,251,1,0,0,0,251,249,1,0,0,0,251,252,1,0,0,0,252,266,
        1,0,0,0,253,255,5,61,0,0,254,256,5,61,0,0,255,254,1,0,0,0,256,257,
        1,0,0,0,257,255,1,0,0,0,257,258,1,0,0,0,258,266,1,0,0,0,259,260,
        7,7,0,0,260,261,7,6,0,0,261,262,7,3,0,0,262,263,7,0,0,0,263,264,
        7,7,0,0,264,266,7,17,0,0,265,228,1,0,0,0,265,229,1,0,0,0,265,235,
        1,0,0,0,265,241,1,0,0,0,265,247,1,0,0,0,265,253,1,0,0,0,265,259,
        1,0,0,0,266,270,1,0,0,0,267,269,5,32,0,0,268,267,1,0,0,0,269,272,
        1,0,0,0,270,268,1,0,0,0,270,271,1,0,0,0,271,274,1,0,0,0,272,270,
        1,0,0,0,273,275,7,12,0,0,274,273,1,0,0,0,275,276,1,0,0,0,276,274,
        1,0,0,0,276,277,1,0,0,0,277,278,1,0,0,0,278,279,6,22,0,0,279,46,
        1,0,0,0,280,318,7,16,0,0,281,283,5,47,0,0,282,284,5,47,0,0,283,282,
        1,0,0,0,284,285,1,0,0,0,285,283,1,0,0,0,285,286,1,0,0,0,286,318,
        1,0,0,0,287,289,5,42,0,0,288,290,5,42,0,0,289,288,1,0,0,0,290,291,
        1,0,0,0,291,289,1,0,0,0,291,292,1,0,0,0,292,318,1,0,0,0,293,295,
        5,45,0,0,294,296,5,45,0,0,295,294,1,0,0,0,296,297,1,0,0,0,297,295,
        1,0,0,0,297,298,1,0,0,0,298,318,1,0,0,0,299,301,5,43,0,0,300,302,
        5,43,0,0,301,300,1,0,0,0,302,303,1,0,0,0,303,301,1,0,0,0,303,304,
        1,0,0,0,304,318,1,0,0,0,305,307,5,61,0,0,306,308,5,61,0,0,307,306,
        1,0,0,0,308,309,1,0,0,0,309,307,1,0,0,0,309,310,1,0,0,0,310,318,
        1,0,0,0,311,312,7,7,0,0,312,313,7,6,0,0,313,314,7,3,0,0,314,315,
        7,0,0,0,315,316,7,7,0,0,316,318,7,17,0,0,317,280,1,0,0,0,317,281,
        1,0,0,0,317,287,1,0,0,0,317,293,1,0,0,0,317,299,1,0,0,0,317,305,
        1,0,0,0,317,311,1,0,0,0,318,322,1,0,0,0,319,321,8,12,0,0,320,319,
        1,0,0,0,321,324,1,0,0,0,322,320,1,0,0,0,322,323,1,0,0,0,323,325,
        1,0,0,0,324,322,1,0,0,0,325,326,6,23,0,0,326,48,1,0,0,0,42,0,74,
        79,83,91,98,103,108,114,120,128,133,139,145,153,158,164,170,184,
        188,192,196,200,206,212,219,221,233,239,245,251,257,265,270,276,
        285,291,297,303,309,317,322,2,0,1,0,6,0,0
    ]

class SybylMRLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Atom1 = 1
    Atom2 = 2
    Lower = 3
    Upper = 4
    Integer = 5
    Float = 6
    SHARP_COMMENT = 7
    EXCLM_COMMENT = 8
    SMCLN_COMMENT = 9
    Atom_selection = 10
    SPACE = 11
    ENCLOSE_COMMENT = 12
    SECTION_COMMENT = 13
    LINE_COMMENT = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'ATOM1'", "'ATOM2'", "'LOWER'", "'UPPER'" ]

    symbolicNames = [ "<INVALID>",
            "Atom1", "Atom2", "Lower", "Upper", "Integer", "Float", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Atom_selection", "SPACE", 
            "ENCLOSE_COMMENT", "SECTION_COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "Atom1", "Atom2", "Lower", "Upper", "Integer", "Float", 
                  "DEC_DOT_DEC", "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", 
                  "EXCLM_COMMENT", "SMCLN_COMMENT", "Atom_selection", "ALPHA", 
                  "ALPHA_NUM", "START_CHAR", "NAME_CHAR", "ATM_NAME_CHAR", 
                  "ATM_TYPE_CHAR", "SIMPLE_NAME", "SPACE", "ENCLOSE_COMMENT", 
                  "SECTION_COMMENT", "LINE_COMMENT" ]

    grammarFileName = "SybylMRLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


