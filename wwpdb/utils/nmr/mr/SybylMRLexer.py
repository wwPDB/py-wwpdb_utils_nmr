# Generated from SybylMRLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,15,332,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,1,0,1,0,1,0,1,0,1,0,1,
        0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,
        3,1,3,1,3,1,4,3,4,75,8,4,1,4,1,4,1,5,3,5,80,8,5,1,5,1,5,3,5,84,8,
        5,1,6,3,6,87,8,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,3,7,97,8,7,1,8,
        1,8,1,8,1,8,1,8,1,8,3,8,105,8,8,1,9,1,9,1,10,4,10,110,8,10,11,10,
        12,10,111,1,11,4,11,115,8,11,11,11,12,11,116,1,11,5,11,120,8,11,
        10,11,12,11,123,9,11,1,11,5,11,126,8,11,10,11,12,11,129,9,11,1,11,
        5,11,132,8,11,10,11,12,11,135,9,11,1,11,1,11,1,12,4,12,140,8,12,
        11,12,12,12,141,1,12,5,12,145,8,12,10,12,12,12,148,9,12,1,12,5,12,
        151,8,12,10,12,12,12,154,9,12,1,12,5,12,157,8,12,10,12,12,12,160,
        9,12,1,12,1,12,1,13,4,13,165,8,13,11,13,12,13,166,1,13,5,13,170,
        8,13,10,13,12,13,173,9,13,1,13,5,13,176,8,13,10,13,12,13,179,9,13,
        1,13,5,13,182,8,13,10,13,12,13,185,9,13,1,13,1,13,1,14,1,14,1,14,
        1,14,1,14,1,15,1,15,1,16,1,16,3,16,198,8,16,1,17,1,17,3,17,202,8,
        17,1,18,1,18,3,18,206,8,18,1,19,1,19,5,19,210,8,19,10,19,12,19,213,
        9,19,1,20,4,20,216,8,20,11,20,12,20,217,1,20,1,20,1,21,1,21,1,21,
        5,21,225,8,21,10,21,12,21,228,9,21,1,21,1,21,1,21,1,21,1,22,1,22,
        1,22,4,22,237,8,22,11,22,12,22,238,1,22,1,22,4,22,243,8,22,11,22,
        12,22,244,1,22,1,22,4,22,249,8,22,11,22,12,22,250,1,22,1,22,4,22,
        255,8,22,11,22,12,22,256,1,22,1,22,4,22,261,8,22,11,22,12,22,262,
        1,22,1,22,1,22,1,22,1,22,1,22,3,22,271,8,22,1,22,5,22,274,8,22,10,
        22,12,22,277,9,22,1,22,4,22,280,8,22,11,22,12,22,281,1,22,1,22,1,
        23,1,23,1,23,4,23,289,8,23,11,23,12,23,290,1,23,1,23,4,23,295,8,
        23,11,23,12,23,296,1,23,1,23,4,23,301,8,23,11,23,12,23,302,1,23,
        1,23,4,23,307,8,23,11,23,12,23,308,1,23,1,23,4,23,313,8,23,11,23,
        12,23,314,1,23,1,23,1,23,1,23,1,23,1,23,3,23,323,8,23,1,23,5,23,
        326,8,23,10,23,12,23,329,9,23,1,23,1,23,1,226,0,24,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,0,17,0,19,0,21,0,23,8,25,9,27,10,29,11,31,0,33,
        0,35,0,37,0,39,0,41,12,43,13,45,14,47,15,1,0,18,2,0,65,65,97,97,
        2,0,84,84,116,116,2,0,79,79,111,111,2,0,77,77,109,109,2,0,76,76,
        108,108,2,0,87,87,119,119,2,0,69,69,101,101,2,0,82,82,114,114,2,
        0,85,85,117,117,2,0,80,80,112,112,2,0,43,43,45,45,1,0,48,57,2,0,
        10,10,13,13,2,0,65,90,97,122,4,0,34,35,39,39,42,43,45,46,3,0,9,10,
        13,13,32,32,5,0,33,33,35,35,38,38,59,59,92,92,2,0,75,75,107,107,
        373,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
        0,11,1,0,0,0,0,13,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
        0,29,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,
        1,49,1,0,0,0,3,55,1,0,0,0,5,61,1,0,0,0,7,67,1,0,0,0,9,74,1,0,0,0,
        11,79,1,0,0,0,13,86,1,0,0,0,15,96,1,0,0,0,17,104,1,0,0,0,19,106,
        1,0,0,0,21,109,1,0,0,0,23,114,1,0,0,0,25,139,1,0,0,0,27,164,1,0,
        0,0,29,188,1,0,0,0,31,193,1,0,0,0,33,197,1,0,0,0,35,201,1,0,0,0,
        37,205,1,0,0,0,39,207,1,0,0,0,41,215,1,0,0,0,43,221,1,0,0,0,45,270,
        1,0,0,0,47,322,1,0,0,0,49,50,7,0,0,0,50,51,7,1,0,0,51,52,7,2,0,0,
        52,53,7,3,0,0,53,54,5,49,0,0,54,2,1,0,0,0,55,56,7,0,0,0,56,57,7,
        1,0,0,57,58,7,2,0,0,58,59,7,3,0,0,59,60,5,50,0,0,60,4,1,0,0,0,61,
        62,7,4,0,0,62,63,7,2,0,0,63,64,7,5,0,0,64,65,7,6,0,0,65,66,7,7,0,
        0,66,6,1,0,0,0,67,68,7,8,0,0,68,69,7,9,0,0,69,70,7,9,0,0,70,71,7,
        6,0,0,71,72,7,7,0,0,72,8,1,0,0,0,73,75,7,10,0,0,74,73,1,0,0,0,74,
        75,1,0,0,0,75,76,1,0,0,0,76,77,3,21,10,0,77,10,1,0,0,0,78,80,7,10,
        0,0,79,78,1,0,0,0,79,80,1,0,0,0,80,83,1,0,0,0,81,84,3,21,10,0,82,
        84,3,15,7,0,83,81,1,0,0,0,83,82,1,0,0,0,84,12,1,0,0,0,85,87,7,10,
        0,0,86,85,1,0,0,0,86,87,1,0,0,0,87,88,1,0,0,0,88,89,3,17,8,0,89,
        14,1,0,0,0,90,91,3,21,10,0,91,92,5,46,0,0,92,93,3,21,10,0,93,97,
        1,0,0,0,94,95,5,46,0,0,95,97,3,21,10,0,96,90,1,0,0,0,96,94,1,0,0,
        0,97,16,1,0,0,0,98,99,3,21,10,0,99,100,5,44,0,0,100,101,3,21,10,
        0,101,105,1,0,0,0,102,103,5,44,0,0,103,105,3,21,10,0,104,98,1,0,
        0,0,104,102,1,0,0,0,105,18,1,0,0,0,106,107,7,11,0,0,107,20,1,0,0,
        0,108,110,3,19,9,0,109,108,1,0,0,0,110,111,1,0,0,0,111,109,1,0,0,
        0,111,112,1,0,0,0,112,22,1,0,0,0,113,115,5,35,0,0,114,113,1,0,0,
        0,115,116,1,0,0,0,116,114,1,0,0,0,116,117,1,0,0,0,117,121,1,0,0,
        0,118,120,8,12,0,0,119,118,1,0,0,0,120,123,1,0,0,0,121,119,1,0,0,
        0,121,122,1,0,0,0,122,127,1,0,0,0,123,121,1,0,0,0,124,126,5,35,0,
        0,125,124,1,0,0,0,126,129,1,0,0,0,127,125,1,0,0,0,127,128,1,0,0,
        0,128,133,1,0,0,0,129,127,1,0,0,0,130,132,8,12,0,0,131,130,1,0,0,
        0,132,135,1,0,0,0,133,131,1,0,0,0,133,134,1,0,0,0,134,136,1,0,0,
        0,135,133,1,0,0,0,136,137,6,11,0,0,137,24,1,0,0,0,138,140,5,33,0,
        0,139,138,1,0,0,0,140,141,1,0,0,0,141,139,1,0,0,0,141,142,1,0,0,
        0,142,146,1,0,0,0,143,145,8,12,0,0,144,143,1,0,0,0,145,148,1,0,0,
        0,146,144,1,0,0,0,146,147,1,0,0,0,147,152,1,0,0,0,148,146,1,0,0,
        0,149,151,5,33,0,0,150,149,1,0,0,0,151,154,1,0,0,0,152,150,1,0,0,
        0,152,153,1,0,0,0,153,158,1,0,0,0,154,152,1,0,0,0,155,157,8,12,0,
        0,156,155,1,0,0,0,157,160,1,0,0,0,158,156,1,0,0,0,158,159,1,0,0,
        0,159,161,1,0,0,0,160,158,1,0,0,0,161,162,6,12,0,0,162,26,1,0,0,
        0,163,165,5,59,0,0,164,163,1,0,0,0,165,166,1,0,0,0,166,164,1,0,0,
        0,166,167,1,0,0,0,167,171,1,0,0,0,168,170,8,12,0,0,169,168,1,0,0,
        0,170,173,1,0,0,0,171,169,1,0,0,0,171,172,1,0,0,0,172,177,1,0,0,
        0,173,171,1,0,0,0,174,176,5,59,0,0,175,174,1,0,0,0,176,179,1,0,0,
        0,177,175,1,0,0,0,177,178,1,0,0,0,178,183,1,0,0,0,179,177,1,0,0,
        0,180,182,8,12,0,0,181,180,1,0,0,0,182,185,1,0,0,0,183,181,1,0,0,
        0,183,184,1,0,0,0,184,186,1,0,0,0,185,183,1,0,0,0,186,187,6,13,0,
        0,187,28,1,0,0,0,188,189,3,39,19,0,189,190,3,21,10,0,190,191,5,46,
        0,0,191,192,3,39,19,0,192,30,1,0,0,0,193,194,7,13,0,0,194,32,1,0,
        0,0,195,198,3,31,15,0,196,198,3,19,9,0,197,195,1,0,0,0,197,196,1,
        0,0,0,198,34,1,0,0,0,199,202,3,33,16,0,200,202,5,95,0,0,201,199,
        1,0,0,0,201,200,1,0,0,0,202,36,1,0,0,0,203,206,3,35,17,0,204,206,
        7,14,0,0,205,203,1,0,0,0,205,204,1,0,0,0,206,38,1,0,0,0,207,211,
        3,35,17,0,208,210,3,37,18,0,209,208,1,0,0,0,210,213,1,0,0,0,211,
        209,1,0,0,0,211,212,1,0,0,0,212,40,1,0,0,0,213,211,1,0,0,0,214,216,
        7,15,0,0,215,214,1,0,0,0,216,217,1,0,0,0,217,215,1,0,0,0,217,218,
        1,0,0,0,218,219,1,0,0,0,219,220,6,20,1,0,220,42,1,0,0,0,221,226,
        5,123,0,0,222,225,3,43,21,0,223,225,9,0,0,0,224,222,1,0,0,0,224,
        223,1,0,0,0,225,228,1,0,0,0,226,227,1,0,0,0,226,224,1,0,0,0,227,
        229,1,0,0,0,228,226,1,0,0,0,229,230,5,125,0,0,230,231,1,0,0,0,231,
        232,6,21,0,0,232,44,1,0,0,0,233,271,7,16,0,0,234,236,5,47,0,0,235,
        237,5,47,0,0,236,235,1,0,0,0,237,238,1,0,0,0,238,236,1,0,0,0,238,
        239,1,0,0,0,239,271,1,0,0,0,240,242,5,42,0,0,241,243,5,42,0,0,242,
        241,1,0,0,0,243,244,1,0,0,0,244,242,1,0,0,0,244,245,1,0,0,0,245,
        271,1,0,0,0,246,248,5,45,0,0,247,249,5,45,0,0,248,247,1,0,0,0,249,
        250,1,0,0,0,250,248,1,0,0,0,250,251,1,0,0,0,251,271,1,0,0,0,252,
        254,5,43,0,0,253,255,5,43,0,0,254,253,1,0,0,0,255,256,1,0,0,0,256,
        254,1,0,0,0,256,257,1,0,0,0,257,271,1,0,0,0,258,260,5,61,0,0,259,
        261,5,61,0,0,260,259,1,0,0,0,261,262,1,0,0,0,262,260,1,0,0,0,262,
        263,1,0,0,0,263,271,1,0,0,0,264,265,7,7,0,0,265,266,7,6,0,0,266,
        267,7,3,0,0,267,268,7,0,0,0,268,269,7,7,0,0,269,271,7,17,0,0,270,
        233,1,0,0,0,270,234,1,0,0,0,270,240,1,0,0,0,270,246,1,0,0,0,270,
        252,1,0,0,0,270,258,1,0,0,0,270,264,1,0,0,0,271,275,1,0,0,0,272,
        274,5,32,0,0,273,272,1,0,0,0,274,277,1,0,0,0,275,273,1,0,0,0,275,
        276,1,0,0,0,276,279,1,0,0,0,277,275,1,0,0,0,278,280,7,12,0,0,279,
        278,1,0,0,0,280,281,1,0,0,0,281,279,1,0,0,0,281,282,1,0,0,0,282,
        283,1,0,0,0,283,284,6,22,0,0,284,46,1,0,0,0,285,323,7,16,0,0,286,
        288,5,47,0,0,287,289,5,47,0,0,288,287,1,0,0,0,289,290,1,0,0,0,290,
        288,1,0,0,0,290,291,1,0,0,0,291,323,1,0,0,0,292,294,5,42,0,0,293,
        295,5,42,0,0,294,293,1,0,0,0,295,296,1,0,0,0,296,294,1,0,0,0,296,
        297,1,0,0,0,297,323,1,0,0,0,298,300,5,45,0,0,299,301,5,45,0,0,300,
        299,1,0,0,0,301,302,1,0,0,0,302,300,1,0,0,0,302,303,1,0,0,0,303,
        323,1,0,0,0,304,306,5,43,0,0,305,307,5,43,0,0,306,305,1,0,0,0,307,
        308,1,0,0,0,308,306,1,0,0,0,308,309,1,0,0,0,309,323,1,0,0,0,310,
        312,5,61,0,0,311,313,5,61,0,0,312,311,1,0,0,0,313,314,1,0,0,0,314,
        312,1,0,0,0,314,315,1,0,0,0,315,323,1,0,0,0,316,317,7,7,0,0,317,
        318,7,6,0,0,318,319,7,3,0,0,319,320,7,0,0,0,320,321,7,7,0,0,321,
        323,7,17,0,0,322,285,1,0,0,0,322,286,1,0,0,0,322,292,1,0,0,0,322,
        298,1,0,0,0,322,304,1,0,0,0,322,310,1,0,0,0,322,316,1,0,0,0,323,
        327,1,0,0,0,324,326,8,12,0,0,325,324,1,0,0,0,326,329,1,0,0,0,327,
        325,1,0,0,0,327,328,1,0,0,0,328,330,1,0,0,0,329,327,1,0,0,0,330,
        331,6,23,0,0,331,48,1,0,0,0,42,0,74,79,83,86,96,104,111,116,121,
        127,133,141,146,152,158,166,171,177,183,197,201,205,211,217,224,
        226,238,244,250,256,262,270,275,281,290,296,302,308,314,322,327,
        2,0,1,0,6,0,0
    ]

class SybylMRLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Atom1 = 1
    Atom2 = 2
    Lower = 3
    Upper = 4
    Integer = 5
    Float = 6
    Float_DecimalComma = 7
    SHARP_COMMENT = 8
    EXCLM_COMMENT = 9
    SMCLN_COMMENT = 10
    Atom_selection = 11
    SPACE = 12
    ENCLOSE_COMMENT = 13
    SECTION_COMMENT = 14
    LINE_COMMENT = 15

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'ATOM1'", "'ATOM2'", "'LOWER'", "'UPPER'" ]

    symbolicNames = [ "<INVALID>",
            "Atom1", "Atom2", "Lower", "Upper", "Integer", "Float", "Float_DecimalComma", 
            "SHARP_COMMENT", "EXCLM_COMMENT", "SMCLN_COMMENT", "Atom_selection", 
            "SPACE", "ENCLOSE_COMMENT", "SECTION_COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "Atom1", "Atom2", "Lower", "Upper", "Integer", "Float", 
                  "Float_DecimalComma", "DEC_DOT_DEC", "DEC_COM_DEC", "DEC_DIGIT", 
                  "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", "SMCLN_COMMENT", 
                  "Atom_selection", "ALPHA", "ALPHA_NUM", "START_CHAR", 
                  "NAME_CHAR", "SIMPLE_NAME", "SPACE", "ENCLOSE_COMMENT", 
                  "SECTION_COMMENT", "LINE_COMMENT" ]

    grammarFileName = "SybylMRLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


