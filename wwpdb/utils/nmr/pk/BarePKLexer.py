# Generated from BarePKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,283,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,1,0,3,0,45,8,0,1,0,1,0,1,1,3,1,50,8,1,1,1,1,1,3,1,54,
        8,1,1,2,3,2,57,8,2,1,2,1,2,3,2,61,8,2,1,2,1,2,3,2,65,8,2,1,2,3,2,
        68,8,2,1,3,1,3,3,3,72,8,3,1,3,1,3,1,3,3,3,77,8,3,4,3,79,8,3,11,3,
        12,3,80,1,4,1,4,1,4,1,4,1,4,1,4,3,4,89,8,4,1,5,1,5,1,6,4,6,94,8,
        6,11,6,12,6,95,1,7,4,7,99,8,7,11,7,12,7,100,1,7,5,7,104,8,7,10,7,
        12,7,107,9,7,1,7,5,7,110,8,7,10,7,12,7,113,9,7,1,7,5,7,116,8,7,10,
        7,12,7,119,9,7,1,7,1,7,1,8,4,8,124,8,8,11,8,12,8,125,1,8,5,8,129,
        8,8,10,8,12,8,132,9,8,1,8,5,8,135,8,8,10,8,12,8,138,9,8,1,8,5,8,
        141,8,8,10,8,12,8,144,9,8,1,8,1,8,1,9,4,9,149,8,9,11,9,12,9,150,
        1,9,5,9,154,8,9,10,9,12,9,157,9,9,1,9,5,9,160,8,9,10,9,12,9,163,
        9,9,1,9,5,9,166,8,9,10,9,12,9,169,9,9,1,9,1,9,1,10,1,10,1,11,1,11,
        1,12,1,12,3,12,179,8,12,1,13,1,13,3,13,183,8,13,1,14,1,14,3,14,187,
        8,14,1,15,1,15,5,15,191,8,15,10,15,12,15,194,9,15,1,16,4,16,197,
        8,16,11,16,12,16,198,1,16,1,16,1,17,4,17,204,8,17,11,17,12,17,205,
        1,18,1,18,1,19,1,19,1,19,4,19,213,8,19,11,19,12,19,214,1,19,1,19,
        4,19,219,8,19,11,19,12,19,220,1,19,1,19,4,19,225,8,19,11,19,12,19,
        226,1,19,1,19,1,19,1,19,1,19,1,19,3,19,235,8,19,1,19,5,19,238,8,
        19,10,19,12,19,241,9,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,4,20,
        250,8,20,11,20,12,20,251,1,20,1,20,4,20,256,8,20,11,20,12,20,257,
        1,20,1,20,4,20,262,8,20,11,20,12,20,263,1,20,1,20,1,20,1,20,1,20,
        1,20,3,20,272,8,20,1,20,5,20,275,8,20,10,20,12,20,278,9,20,1,20,
        1,20,1,20,1,20,0,0,21,1,1,3,2,5,3,7,4,9,0,11,0,13,0,15,5,17,6,19,
        7,21,8,23,0,25,0,27,0,29,0,31,0,33,9,35,10,37,0,39,11,41,12,1,0,
        10,2,0,43,43,45,45,2,0,69,69,101,101,4,0,44,44,47,47,59,59,124,124,
        1,0,48,57,2,0,10,10,13,13,2,0,65,90,97,122,6,0,40,40,42,43,45,46,
        63,63,95,95,123,123,8,0,34,35,37,37,39,39,41,41,44,44,47,47,59,59,
        124,125,2,0,9,9,32,32,7,0,33,33,35,35,38,38,42,42,47,47,61,61,92,
        92,319,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,33,1,0,0,0,0,35,1,0,
        0,0,0,39,1,0,0,0,0,41,1,0,0,0,1,44,1,0,0,0,3,49,1,0,0,0,5,56,1,0,
        0,0,7,71,1,0,0,0,9,88,1,0,0,0,11,90,1,0,0,0,13,93,1,0,0,0,15,98,
        1,0,0,0,17,123,1,0,0,0,19,148,1,0,0,0,21,172,1,0,0,0,23,174,1,0,
        0,0,25,178,1,0,0,0,27,182,1,0,0,0,29,186,1,0,0,0,31,188,1,0,0,0,
        33,196,1,0,0,0,35,203,1,0,0,0,37,207,1,0,0,0,39,234,1,0,0,0,41,271,
        1,0,0,0,43,45,7,0,0,0,44,43,1,0,0,0,44,45,1,0,0,0,45,46,1,0,0,0,
        46,47,3,13,6,0,47,2,1,0,0,0,48,50,7,0,0,0,49,48,1,0,0,0,49,50,1,
        0,0,0,50,53,1,0,0,0,51,54,3,13,6,0,52,54,3,9,4,0,53,51,1,0,0,0,53,
        52,1,0,0,0,54,4,1,0,0,0,55,57,7,0,0,0,56,55,1,0,0,0,56,57,1,0,0,
        0,57,60,1,0,0,0,58,61,3,13,6,0,59,61,3,9,4,0,60,58,1,0,0,0,60,59,
        1,0,0,0,61,67,1,0,0,0,62,64,7,1,0,0,63,65,7,0,0,0,64,63,1,0,0,0,
        64,65,1,0,0,0,65,66,1,0,0,0,66,68,3,13,6,0,67,62,1,0,0,0,67,68,1,
        0,0,0,68,6,1,0,0,0,69,72,3,3,1,0,70,72,3,1,0,0,71,69,1,0,0,0,71,
        70,1,0,0,0,72,78,1,0,0,0,73,76,7,2,0,0,74,77,3,3,1,0,75,77,3,1,0,
        0,76,74,1,0,0,0,76,75,1,0,0,0,77,79,1,0,0,0,78,73,1,0,0,0,79,80,
        1,0,0,0,80,78,1,0,0,0,80,81,1,0,0,0,81,8,1,0,0,0,82,83,3,13,6,0,
        83,84,5,46,0,0,84,85,3,13,6,0,85,89,1,0,0,0,86,87,5,46,0,0,87,89,
        3,13,6,0,88,82,1,0,0,0,88,86,1,0,0,0,89,10,1,0,0,0,90,91,7,3,0,0,
        91,12,1,0,0,0,92,94,3,11,5,0,93,92,1,0,0,0,94,95,1,0,0,0,95,93,1,
        0,0,0,95,96,1,0,0,0,96,14,1,0,0,0,97,99,5,35,0,0,98,97,1,0,0,0,99,
        100,1,0,0,0,100,98,1,0,0,0,100,101,1,0,0,0,101,105,1,0,0,0,102,104,
        8,4,0,0,103,102,1,0,0,0,104,107,1,0,0,0,105,103,1,0,0,0,105,106,
        1,0,0,0,106,111,1,0,0,0,107,105,1,0,0,0,108,110,5,35,0,0,109,108,
        1,0,0,0,110,113,1,0,0,0,111,109,1,0,0,0,111,112,1,0,0,0,112,117,
        1,0,0,0,113,111,1,0,0,0,114,116,8,4,0,0,115,114,1,0,0,0,116,119,
        1,0,0,0,117,115,1,0,0,0,117,118,1,0,0,0,118,120,1,0,0,0,119,117,
        1,0,0,0,120,121,6,7,0,0,121,16,1,0,0,0,122,124,5,33,0,0,123,122,
        1,0,0,0,124,125,1,0,0,0,125,123,1,0,0,0,125,126,1,0,0,0,126,130,
        1,0,0,0,127,129,8,4,0,0,128,127,1,0,0,0,129,132,1,0,0,0,130,128,
        1,0,0,0,130,131,1,0,0,0,131,136,1,0,0,0,132,130,1,0,0,0,133,135,
        5,33,0,0,134,133,1,0,0,0,135,138,1,0,0,0,136,134,1,0,0,0,136,137,
        1,0,0,0,137,142,1,0,0,0,138,136,1,0,0,0,139,141,8,4,0,0,140,139,
        1,0,0,0,141,144,1,0,0,0,142,140,1,0,0,0,142,143,1,0,0,0,143,145,
        1,0,0,0,144,142,1,0,0,0,145,146,6,8,0,0,146,18,1,0,0,0,147,149,5,
        59,0,0,148,147,1,0,0,0,149,150,1,0,0,0,150,148,1,0,0,0,150,151,1,
        0,0,0,151,155,1,0,0,0,152,154,8,4,0,0,153,152,1,0,0,0,154,157,1,
        0,0,0,155,153,1,0,0,0,155,156,1,0,0,0,156,161,1,0,0,0,157,155,1,
        0,0,0,158,160,5,59,0,0,159,158,1,0,0,0,160,163,1,0,0,0,161,159,1,
        0,0,0,161,162,1,0,0,0,162,167,1,0,0,0,163,161,1,0,0,0,164,166,8,
        4,0,0,165,164,1,0,0,0,166,169,1,0,0,0,167,165,1,0,0,0,167,168,1,
        0,0,0,168,170,1,0,0,0,169,167,1,0,0,0,170,171,6,9,0,0,171,20,1,0,
        0,0,172,173,3,31,15,0,173,22,1,0,0,0,174,175,7,5,0,0,175,24,1,0,
        0,0,176,179,3,23,11,0,177,179,3,11,5,0,178,176,1,0,0,0,178,177,1,
        0,0,0,179,26,1,0,0,0,180,183,3,25,12,0,181,183,7,6,0,0,182,180,1,
        0,0,0,182,181,1,0,0,0,183,28,1,0,0,0,184,187,3,27,13,0,185,187,7,
        7,0,0,186,184,1,0,0,0,186,185,1,0,0,0,187,30,1,0,0,0,188,192,3,27,
        13,0,189,191,3,29,14,0,190,189,1,0,0,0,191,194,1,0,0,0,192,190,1,
        0,0,0,192,193,1,0,0,0,193,32,1,0,0,0,194,192,1,0,0,0,195,197,7,8,
        0,0,196,195,1,0,0,0,197,198,1,0,0,0,198,196,1,0,0,0,198,199,1,0,
        0,0,199,200,1,0,0,0,200,201,6,16,1,0,201,34,1,0,0,0,202,204,7,4,
        0,0,203,202,1,0,0,0,204,205,1,0,0,0,205,203,1,0,0,0,205,206,1,0,
        0,0,206,36,1,0,0,0,207,208,7,9,0,0,208,38,1,0,0,0,209,235,3,37,18,
        0,210,212,3,37,18,0,211,213,5,47,0,0,212,211,1,0,0,0,213,214,1,0,
        0,0,214,212,1,0,0,0,214,215,1,0,0,0,215,235,1,0,0,0,216,218,3,37,
        18,0,217,219,5,42,0,0,218,217,1,0,0,0,219,220,1,0,0,0,220,218,1,
        0,0,0,220,221,1,0,0,0,221,235,1,0,0,0,222,224,3,37,18,0,223,225,
        5,61,0,0,224,223,1,0,0,0,225,226,1,0,0,0,226,224,1,0,0,0,226,227,
        1,0,0,0,227,235,1,0,0,0,228,229,5,82,0,0,229,230,5,69,0,0,230,231,
        5,77,0,0,231,232,5,65,0,0,232,233,5,82,0,0,233,235,5,75,0,0,234,
        209,1,0,0,0,234,210,1,0,0,0,234,216,1,0,0,0,234,222,1,0,0,0,234,
        228,1,0,0,0,235,239,1,0,0,0,236,238,5,32,0,0,237,236,1,0,0,0,238,
        241,1,0,0,0,239,237,1,0,0,0,239,240,1,0,0,0,240,242,1,0,0,0,241,
        239,1,0,0,0,242,243,3,35,17,0,243,244,1,0,0,0,244,245,6,19,0,0,245,
        40,1,0,0,0,246,272,3,37,18,0,247,249,3,37,18,0,248,250,5,47,0,0,
        249,248,1,0,0,0,250,251,1,0,0,0,251,249,1,0,0,0,251,252,1,0,0,0,
        252,272,1,0,0,0,253,255,3,37,18,0,254,256,5,42,0,0,255,254,1,0,0,
        0,256,257,1,0,0,0,257,255,1,0,0,0,257,258,1,0,0,0,258,272,1,0,0,
        0,259,261,3,37,18,0,260,262,5,61,0,0,261,260,1,0,0,0,262,263,1,0,
        0,0,263,261,1,0,0,0,263,264,1,0,0,0,264,272,1,0,0,0,265,266,5,82,
        0,0,266,267,5,69,0,0,267,268,5,77,0,0,268,269,5,65,0,0,269,270,5,
        82,0,0,270,272,5,75,0,0,271,246,1,0,0,0,271,247,1,0,0,0,271,253,
        1,0,0,0,271,259,1,0,0,0,271,265,1,0,0,0,272,276,1,0,0,0,273,275,
        8,4,0,0,274,273,1,0,0,0,275,278,1,0,0,0,276,274,1,0,0,0,276,277,
        1,0,0,0,277,279,1,0,0,0,278,276,1,0,0,0,279,280,3,35,17,0,280,281,
        1,0,0,0,281,282,6,20,0,0,282,42,1,0,0,0,41,0,44,49,53,56,60,64,67,
        71,76,80,88,95,100,105,111,117,125,130,136,142,150,155,161,167,178,
        182,186,192,198,205,214,220,226,234,239,251,257,263,271,276,2,0,
        1,0,6,0,0
    ]

class BarePKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    Integer = 1
    Float = 2
    Real = 3
    Ambig_float = 4
    SHARP_COMMENT = 5
    EXCLM_COMMENT = 6
    SMCLN_COMMENT = 7
    Simple_name = 8
    SPACE = 9
    RETURN = 10
    SECTION_COMMENT = 11
    LINE_COMMENT = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "Integer", "Float", "Real", "Ambig_float", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Simple_name", "SPACE", "RETURN", 
            "SECTION_COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "Integer", "Float", "Real", "Ambig_float", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", 
                  "SMCLN_COMMENT", "Simple_name", "ALPHA", "ALPHA_NUM", 
                  "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", "SPACE", "RETURN", 
                  "COMMENT_START_CHAR", "SECTION_COMMENT", "LINE_COMMENT" ]

    grammarFileName = "BarePKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


