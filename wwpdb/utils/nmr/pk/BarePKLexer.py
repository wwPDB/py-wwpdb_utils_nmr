# Generated from BarePKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,22,433,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0,79,8,0,3,0,81,8,0,
        1,0,1,0,1,1,3,1,86,8,1,1,1,1,1,1,2,3,2,91,8,2,1,2,1,2,3,2,95,8,2,
        1,3,3,3,98,8,3,1,3,1,3,3,3,102,8,3,1,3,1,3,3,3,106,8,3,1,3,3,3,109,
        8,3,1,4,1,4,3,4,113,8,4,1,4,1,4,1,4,3,4,118,8,4,4,4,120,8,4,11,4,
        12,4,121,1,5,1,5,1,5,1,5,1,5,1,5,3,5,130,8,5,1,6,1,6,1,7,4,7,135,
        8,7,11,7,12,7,136,1,8,4,8,140,8,8,11,8,12,8,141,1,8,5,8,145,8,8,
        10,8,12,8,148,9,8,1,8,5,8,151,8,8,10,8,12,8,154,9,8,1,8,5,8,157,
        8,8,10,8,12,8,160,9,8,1,8,1,8,1,9,4,9,165,8,9,11,9,12,9,166,1,9,
        5,9,170,8,9,10,9,12,9,173,9,9,1,9,5,9,176,8,9,10,9,12,9,179,9,9,
        1,9,5,9,182,8,9,10,9,12,9,185,9,9,1,9,1,9,1,10,1,10,1,11,1,11,1,
        12,1,12,3,12,195,8,12,1,13,1,13,3,13,199,8,13,1,14,1,14,3,14,203,
        8,14,1,15,1,15,5,15,207,8,15,10,15,12,15,210,9,15,1,16,4,16,213,
        8,16,11,16,12,16,214,1,16,1,16,1,17,4,17,220,8,17,11,17,12,17,221,
        1,18,1,18,1,19,1,19,1,19,4,19,229,8,19,11,19,12,19,230,1,19,1,19,
        4,19,235,8,19,11,19,12,19,236,1,19,1,19,4,19,241,8,19,11,19,12,19,
        242,1,19,1,19,1,19,1,19,1,19,1,19,3,19,251,8,19,1,19,5,19,254,8,
        19,10,19,12,19,257,9,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,4,20,
        266,8,20,11,20,12,20,267,1,20,1,20,4,20,272,8,20,11,20,12,20,273,
        1,20,1,20,4,20,278,8,20,11,20,12,20,279,1,20,1,20,1,20,1,20,1,20,
        1,20,3,20,288,8,20,1,20,5,20,291,8,20,10,20,12,20,294,9,20,1,20,
        1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,
        309,8,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,3,22,320,8,
        22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,331,8,23,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,24,342,8,24,1,25,1,
        25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
        25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,368,8,25,1,
        26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,
        27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,
        27,1,27,1,27,1,27,1,27,1,27,1,27,3,27,403,8,27,3,27,405,8,27,1,28,
        1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,3,28,418,8,28,
        1,29,4,29,421,8,29,11,29,12,29,422,1,29,1,29,1,30,4,30,428,8,30,
        11,30,12,30,429,1,30,1,30,0,0,31,2,1,4,2,6,3,8,4,10,5,12,0,14,0,
        16,0,18,6,20,7,22,8,24,0,26,0,28,0,30,0,32,0,34,9,36,10,38,0,40,
        11,42,12,44,13,46,14,48,15,50,16,52,17,54,18,56,19,58,20,60,21,62,
        22,2,0,1,31,2,0,80,80,112,112,2,0,69,69,101,101,2,0,65,65,97,97,
        2,0,75,75,107,107,2,0,32,32,95,95,2,0,78,78,110,110,2,0,85,85,117,
        117,2,0,77,77,109,109,2,0,66,66,98,98,2,0,82,82,114,114,2,0,73,73,
        105,105,2,0,68,68,100,100,2,0,43,43,45,45,4,0,44,44,47,47,59,59,
        124,124,1,0,48,57,2,0,10,10,13,13,2,0,65,90,97,122,6,0,40,40,42,
        43,45,46,63,63,95,95,123,123,8,0,34,35,37,37,39,39,41,41,44,44,47,
        47,59,59,124,125,2,0,9,9,32,32,7,0,33,33,35,35,38,38,42,42,47,47,
        61,61,92,92,2,0,70,70,102,102,2,0,76,76,108,108,2,0,84,84,116,116,
        2,0,83,83,115,115,2,0,89,89,121,121,2,0,72,72,104,104,2,0,71,71,
        103,103,2,0,86,86,118,118,2,0,79,79,111,111,2,0,67,67,99,99,478,
        0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,18,
        1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,40,
        1,0,0,0,0,42,1,0,0,0,1,44,1,0,0,0,1,46,1,0,0,0,1,48,1,0,0,0,1,50,
        1,0,0,0,1,52,1,0,0,0,1,54,1,0,0,0,1,56,1,0,0,0,1,58,1,0,0,0,1,60,
        1,0,0,0,1,62,1,0,0,0,2,64,1,0,0,0,4,85,1,0,0,0,6,90,1,0,0,0,8,97,
        1,0,0,0,10,112,1,0,0,0,12,129,1,0,0,0,14,131,1,0,0,0,16,134,1,0,
        0,0,18,139,1,0,0,0,20,164,1,0,0,0,22,188,1,0,0,0,24,190,1,0,0,0,
        26,194,1,0,0,0,28,198,1,0,0,0,30,202,1,0,0,0,32,204,1,0,0,0,34,212,
        1,0,0,0,36,219,1,0,0,0,38,223,1,0,0,0,40,250,1,0,0,0,42,287,1,0,
        0,0,44,299,1,0,0,0,46,310,1,0,0,0,48,321,1,0,0,0,50,332,1,0,0,0,
        52,367,1,0,0,0,54,369,1,0,0,0,56,404,1,0,0,0,58,417,1,0,0,0,60,420,
        1,0,0,0,62,427,1,0,0,0,64,65,7,0,0,0,65,66,7,1,0,0,66,67,7,2,0,0,
        67,68,7,3,0,0,68,80,1,0,0,0,69,78,7,4,0,0,70,71,7,5,0,0,71,72,7,
        6,0,0,72,73,7,7,0,0,73,74,7,8,0,0,74,75,7,1,0,0,75,79,7,9,0,0,76,
        77,7,10,0,0,77,79,7,11,0,0,78,70,1,0,0,0,78,76,1,0,0,0,79,81,1,0,
        0,0,80,69,1,0,0,0,80,81,1,0,0,0,81,82,1,0,0,0,82,83,6,0,0,0,83,3,
        1,0,0,0,84,86,7,12,0,0,85,84,1,0,0,0,85,86,1,0,0,0,86,87,1,0,0,0,
        87,88,3,16,7,0,88,5,1,0,0,0,89,91,7,12,0,0,90,89,1,0,0,0,90,91,1,
        0,0,0,91,94,1,0,0,0,92,95,3,16,7,0,93,95,3,12,5,0,94,92,1,0,0,0,
        94,93,1,0,0,0,95,7,1,0,0,0,96,98,7,12,0,0,97,96,1,0,0,0,97,98,1,
        0,0,0,98,101,1,0,0,0,99,102,3,16,7,0,100,102,3,12,5,0,101,99,1,0,
        0,0,101,100,1,0,0,0,102,108,1,0,0,0,103,105,7,1,0,0,104,106,7,12,
        0,0,105,104,1,0,0,0,105,106,1,0,0,0,106,107,1,0,0,0,107,109,3,16,
        7,0,108,103,1,0,0,0,108,109,1,0,0,0,109,9,1,0,0,0,110,113,3,6,2,
        0,111,113,3,4,1,0,112,110,1,0,0,0,112,111,1,0,0,0,113,119,1,0,0,
        0,114,117,7,13,0,0,115,118,3,6,2,0,116,118,3,4,1,0,117,115,1,0,0,
        0,117,116,1,0,0,0,118,120,1,0,0,0,119,114,1,0,0,0,120,121,1,0,0,
        0,121,119,1,0,0,0,121,122,1,0,0,0,122,11,1,0,0,0,123,124,3,16,7,
        0,124,125,5,46,0,0,125,126,3,16,7,0,126,130,1,0,0,0,127,128,5,46,
        0,0,128,130,3,16,7,0,129,123,1,0,0,0,129,127,1,0,0,0,130,13,1,0,
        0,0,131,132,7,14,0,0,132,15,1,0,0,0,133,135,3,14,6,0,134,133,1,0,
        0,0,135,136,1,0,0,0,136,134,1,0,0,0,136,137,1,0,0,0,137,17,1,0,0,
        0,138,140,5,35,0,0,139,138,1,0,0,0,140,141,1,0,0,0,141,139,1,0,0,
        0,141,142,1,0,0,0,142,146,1,0,0,0,143,145,8,15,0,0,144,143,1,0,0,
        0,145,148,1,0,0,0,146,144,1,0,0,0,146,147,1,0,0,0,147,152,1,0,0,
        0,148,146,1,0,0,0,149,151,5,35,0,0,150,149,1,0,0,0,151,154,1,0,0,
        0,152,150,1,0,0,0,152,153,1,0,0,0,153,158,1,0,0,0,154,152,1,0,0,
        0,155,157,8,15,0,0,156,155,1,0,0,0,157,160,1,0,0,0,158,156,1,0,0,
        0,158,159,1,0,0,0,159,161,1,0,0,0,160,158,1,0,0,0,161,162,6,8,1,
        0,162,19,1,0,0,0,163,165,5,33,0,0,164,163,1,0,0,0,165,166,1,0,0,
        0,166,164,1,0,0,0,166,167,1,0,0,0,167,171,1,0,0,0,168,170,8,15,0,
        0,169,168,1,0,0,0,170,173,1,0,0,0,171,169,1,0,0,0,171,172,1,0,0,
        0,172,177,1,0,0,0,173,171,1,0,0,0,174,176,5,33,0,0,175,174,1,0,0,
        0,176,179,1,0,0,0,177,175,1,0,0,0,177,178,1,0,0,0,178,183,1,0,0,
        0,179,177,1,0,0,0,180,182,8,15,0,0,181,180,1,0,0,0,182,185,1,0,0,
        0,183,181,1,0,0,0,183,184,1,0,0,0,184,186,1,0,0,0,185,183,1,0,0,
        0,186,187,6,9,1,0,187,21,1,0,0,0,188,189,3,32,15,0,189,23,1,0,0,
        0,190,191,7,16,0,0,191,25,1,0,0,0,192,195,3,24,11,0,193,195,3,14,
        6,0,194,192,1,0,0,0,194,193,1,0,0,0,195,27,1,0,0,0,196,199,3,26,
        12,0,197,199,7,17,0,0,198,196,1,0,0,0,198,197,1,0,0,0,199,29,1,0,
        0,0,200,203,3,28,13,0,201,203,7,18,0,0,202,200,1,0,0,0,202,201,1,
        0,0,0,203,31,1,0,0,0,204,208,3,28,13,0,205,207,3,30,14,0,206,205,
        1,0,0,0,207,210,1,0,0,0,208,206,1,0,0,0,208,209,1,0,0,0,209,33,1,
        0,0,0,210,208,1,0,0,0,211,213,7,19,0,0,212,211,1,0,0,0,213,214,1,
        0,0,0,214,212,1,0,0,0,214,215,1,0,0,0,215,216,1,0,0,0,216,217,6,
        16,2,0,217,35,1,0,0,0,218,220,7,15,0,0,219,218,1,0,0,0,220,221,1,
        0,0,0,221,219,1,0,0,0,221,222,1,0,0,0,222,37,1,0,0,0,223,224,7,20,
        0,0,224,39,1,0,0,0,225,251,3,38,18,0,226,228,3,38,18,0,227,229,5,
        47,0,0,228,227,1,0,0,0,229,230,1,0,0,0,230,228,1,0,0,0,230,231,1,
        0,0,0,231,251,1,0,0,0,232,234,3,38,18,0,233,235,5,42,0,0,234,233,
        1,0,0,0,235,236,1,0,0,0,236,234,1,0,0,0,236,237,1,0,0,0,237,251,
        1,0,0,0,238,240,3,38,18,0,239,241,5,61,0,0,240,239,1,0,0,0,241,242,
        1,0,0,0,242,240,1,0,0,0,242,243,1,0,0,0,243,251,1,0,0,0,244,245,
        7,9,0,0,245,246,7,1,0,0,246,247,7,7,0,0,247,248,7,2,0,0,248,249,
        7,9,0,0,249,251,7,3,0,0,250,225,1,0,0,0,250,226,1,0,0,0,250,232,
        1,0,0,0,250,238,1,0,0,0,250,244,1,0,0,0,251,255,1,0,0,0,252,254,
        5,32,0,0,253,252,1,0,0,0,254,257,1,0,0,0,255,253,1,0,0,0,255,256,
        1,0,0,0,256,258,1,0,0,0,257,255,1,0,0,0,258,259,3,36,17,0,259,260,
        1,0,0,0,260,261,6,19,1,0,261,41,1,0,0,0,262,288,3,38,18,0,263,265,
        3,38,18,0,264,266,5,47,0,0,265,264,1,0,0,0,266,267,1,0,0,0,267,265,
        1,0,0,0,267,268,1,0,0,0,268,288,1,0,0,0,269,271,3,38,18,0,270,272,
        5,42,0,0,271,270,1,0,0,0,272,273,1,0,0,0,273,271,1,0,0,0,273,274,
        1,0,0,0,274,288,1,0,0,0,275,277,3,38,18,0,276,278,5,61,0,0,277,276,
        1,0,0,0,278,279,1,0,0,0,279,277,1,0,0,0,279,280,1,0,0,0,280,288,
        1,0,0,0,281,282,7,9,0,0,282,283,7,1,0,0,283,284,7,7,0,0,284,285,
        7,2,0,0,285,286,7,9,0,0,286,288,7,3,0,0,287,262,1,0,0,0,287,263,
        1,0,0,0,287,269,1,0,0,0,287,275,1,0,0,0,287,281,1,0,0,0,288,292,
        1,0,0,0,289,291,8,15,0,0,290,289,1,0,0,0,291,294,1,0,0,0,292,290,
        1,0,0,0,292,293,1,0,0,0,293,295,1,0,0,0,294,292,1,0,0,0,295,296,
        3,36,17,0,296,297,1,0,0,0,297,298,6,20,1,0,298,43,1,0,0,0,299,300,
        7,21,0,0,300,301,5,49,0,0,301,308,1,0,0,0,302,303,7,4,0,0,303,304,
        5,40,0,0,304,305,7,0,0,0,305,306,7,0,0,0,306,307,7,7,0,0,307,309,
        5,41,0,0,308,302,1,0,0,0,308,309,1,0,0,0,309,45,1,0,0,0,310,311,
        7,21,0,0,311,312,5,50,0,0,312,319,1,0,0,0,313,314,7,4,0,0,314,315,
        5,40,0,0,315,316,7,0,0,0,316,317,7,0,0,0,317,318,7,7,0,0,318,320,
        5,41,0,0,319,313,1,0,0,0,319,320,1,0,0,0,320,47,1,0,0,0,321,322,
        7,21,0,0,322,323,5,51,0,0,323,330,1,0,0,0,324,325,7,4,0,0,325,326,
        5,40,0,0,326,327,7,0,0,0,327,328,7,0,0,0,328,329,7,7,0,0,329,331,
        5,41,0,0,330,324,1,0,0,0,330,331,1,0,0,0,331,49,1,0,0,0,332,333,
        7,21,0,0,333,334,5,52,0,0,334,341,1,0,0,0,335,336,7,4,0,0,336,337,
        5,40,0,0,337,338,7,0,0,0,338,339,7,0,0,0,339,340,7,7,0,0,340,342,
        5,41,0,0,341,335,1,0,0,0,341,342,1,0,0,0,342,51,1,0,0,0,343,344,
        7,2,0,0,344,345,7,7,0,0,345,346,7,0,0,0,346,347,7,22,0,0,347,348,
        7,10,0,0,348,349,7,23,0,0,349,350,7,6,0,0,350,351,7,11,0,0,351,368,
        7,1,0,0,352,353,7,10,0,0,353,354,7,5,0,0,354,355,7,23,0,0,355,356,
        7,1,0,0,356,357,7,5,0,0,357,358,7,24,0,0,358,359,7,10,0,0,359,360,
        7,23,0,0,360,368,7,25,0,0,361,362,7,26,0,0,362,363,7,1,0,0,363,364,
        7,10,0,0,364,365,7,27,0,0,365,366,7,26,0,0,366,368,7,23,0,0,367,
        343,1,0,0,0,367,352,1,0,0,0,367,361,1,0,0,0,368,53,1,0,0,0,369,370,
        7,28,0,0,370,371,7,29,0,0,371,372,7,22,0,0,372,373,7,6,0,0,373,374,
        7,7,0,0,374,375,7,1,0,0,375,55,1,0,0,0,376,377,7,22,0,0,377,378,
        7,2,0,0,378,379,7,8,0,0,379,380,7,1,0,0,380,405,7,22,0,0,381,382,
        7,2,0,0,382,383,7,5,0,0,383,384,7,5,0,0,384,385,7,29,0,0,385,386,
        7,23,0,0,386,387,7,2,0,0,387,388,7,23,0,0,388,389,7,10,0,0,389,390,
        7,29,0,0,390,405,7,5,0,0,391,392,7,2,0,0,392,393,7,24,0,0,393,394,
        7,24,0,0,394,395,7,10,0,0,395,396,7,27,0,0,396,397,7,5,0,0,397,402,
        1,0,0,0,398,399,7,7,0,0,399,400,7,1,0,0,400,401,7,5,0,0,401,403,
        7,23,0,0,402,398,1,0,0,0,402,403,1,0,0,0,403,405,1,0,0,0,404,376,
        1,0,0,0,404,381,1,0,0,0,404,391,1,0,0,0,405,57,1,0,0,0,406,407,7,
        30,0,0,407,408,7,29,0,0,408,409,7,7,0,0,409,410,7,7,0,0,410,411,
        7,1,0,0,411,412,7,5,0,0,412,418,7,23,0,0,413,414,7,5,0,0,414,415,
        7,29,0,0,415,416,7,23,0,0,416,418,7,1,0,0,417,406,1,0,0,0,417,413,
        1,0,0,0,418,59,1,0,0,0,419,421,7,19,0,0,420,419,1,0,0,0,421,422,
        1,0,0,0,422,420,1,0,0,0,422,423,1,0,0,0,423,424,1,0,0,0,424,425,
        6,29,2,0,425,61,1,0,0,0,426,428,7,15,0,0,427,426,1,0,0,0,428,429,
        1,0,0,0,429,427,1,0,0,0,429,430,1,0,0,0,430,431,1,0,0,0,431,432,
        6,30,3,0,432,63,1,0,0,0,50,0,1,78,80,85,90,94,97,101,105,108,112,
        117,121,129,136,141,146,152,158,166,171,177,183,194,198,202,208,
        214,221,230,236,242,250,255,267,273,279,287,292,308,319,330,341,
        367,402,404,417,422,429,4,5,1,0,0,1,0,6,0,0,4,0,0
    ]

class BarePKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    PEAK_MODE = 1

    Peak = 1
    Integer = 2
    Float = 3
    Real = 4
    Ambig_float = 5
    SHARP_COMMENT = 6
    EXCLM_COMMENT = 7
    Simple_name = 8
    SPACE = 9
    RETURN = 10
    SECTION_COMMENT = 11
    LINE_COMMENT = 12
    X_ppm = 13
    Y_ppm = 14
    Z_ppm = 15
    A_ppm = 16
    Amplitude = 17
    Volume = 18
    Label = 19
    Comment = 20
    SPACE_FO = 21
    RETURN_FO = 22

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "PEAK_MODE" ]

    literalNames = [ "<INVALID>",
            "'Volume'" ]

    symbolicNames = [ "<INVALID>",
            "Peak", "Integer", "Float", "Real", "Ambig_float", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "Simple_name", "SPACE", "RETURN", "SECTION_COMMENT", 
            "LINE_COMMENT", "X_ppm", "Y_ppm", "Z_ppm", "A_ppm", "Amplitude", 
            "Volume", "Label", "Comment", "SPACE_FO", "RETURN_FO" ]

    ruleNames = [ "Peak", "Integer", "Float", "Real", "Ambig_float", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", 
                  "Simple_name", "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", 
                  "SIMPLE_NAME", "SPACE", "RETURN", "COMMENT_START_CHAR", 
                  "SECTION_COMMENT", "LINE_COMMENT", "X_ppm", "Y_ppm", "Z_ppm", 
                  "A_ppm", "Amplitude", "Volume", "Label", "Comment", "SPACE_FO", 
                  "RETURN_FO" ]

    grammarFileName = "BarePKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


