# Generated from NmrViewPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,36,479,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,
        4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,
        12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,
        18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,
        25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,
        31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
        38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,
        44,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,3,1,103,8,1,1,1,1,1,1,2,3,
        2,108,8,2,1,2,1,2,3,2,112,8,2,1,3,3,3,115,8,3,1,3,1,3,3,3,119,8,
        3,1,3,1,3,3,3,123,8,3,1,3,3,3,126,8,3,1,4,1,4,1,4,1,4,1,4,1,4,3,
        4,134,8,4,1,5,1,5,1,6,4,6,139,8,6,11,6,12,6,140,1,7,4,7,144,8,7,
        11,7,12,7,145,1,7,5,7,149,8,7,10,7,12,7,152,9,7,1,7,5,7,155,8,7,
        10,7,12,7,158,9,7,1,7,5,7,161,8,7,10,7,12,7,164,9,7,1,7,1,7,1,8,
        4,8,169,8,8,11,8,12,8,170,1,8,5,8,174,8,8,10,8,12,8,177,9,8,1,8,
        5,8,180,8,8,10,8,12,8,183,9,8,1,8,5,8,186,8,8,10,8,12,8,189,9,8,
        1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,3,11,199,8,11,1,12,1,12,3,12,
        203,8,12,1,13,1,13,3,13,207,8,13,1,14,1,14,5,14,211,8,14,10,14,12,
        14,214,9,14,1,15,4,15,217,8,15,11,15,12,15,218,1,15,1,15,1,16,4,
        16,224,8,16,11,16,12,16,225,1,17,1,17,1,18,4,18,231,8,18,11,18,12,
        18,232,1,18,1,18,1,19,1,19,1,19,1,19,4,19,241,8,19,11,19,12,19,242,
        1,19,1,19,4,19,247,8,19,11,19,12,19,248,1,19,1,19,4,19,253,8,19,
        11,19,12,19,254,1,19,1,19,1,19,1,19,1,19,1,19,3,19,263,8,19,1,19,
        5,19,266,8,19,10,19,12,19,269,9,19,1,19,1,19,1,19,1,19,1,20,1,20,
        1,20,1,20,1,20,4,20,280,8,20,11,20,12,20,281,1,20,1,20,4,20,286,
        8,20,11,20,12,20,287,1,20,1,20,4,20,292,8,20,11,20,12,20,293,1,20,
        1,20,1,20,1,20,1,20,1,20,3,20,302,8,20,1,20,5,20,305,8,20,10,20,
        12,20,308,9,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,
        1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,
        1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,
        1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,
        1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,5,36,394,8,36,10,36,
        12,36,397,9,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,5,36,406,8,36,
        10,36,12,36,409,9,36,5,36,411,8,36,10,36,12,36,414,9,36,1,36,4,36,
        417,8,36,11,36,12,36,418,1,36,1,36,1,37,1,37,1,38,1,38,1,39,4,39,
        428,8,39,11,39,12,39,429,1,39,1,39,1,40,1,40,1,41,1,41,5,41,438,
        8,41,10,41,12,41,441,9,41,1,41,1,41,1,41,5,41,446,8,41,10,41,12,
        41,449,9,41,3,41,451,8,41,1,41,5,41,454,8,41,10,41,12,41,457,9,41,
        1,41,1,41,1,42,4,42,462,8,42,11,42,12,42,463,1,43,4,43,467,8,43,
        11,43,12,43,468,1,43,1,43,1,44,4,44,474,8,44,11,44,12,44,475,1,44,
        1,44,1,447,0,45,3,1,5,2,7,3,9,4,11,0,13,0,15,0,17,5,19,6,21,7,23,
        0,25,0,27,0,29,0,31,0,33,8,35,9,37,0,39,10,41,11,43,12,45,13,47,
        14,49,15,51,16,53,17,55,18,57,19,59,20,61,21,63,22,65,23,67,24,69,
        25,71,26,73,27,75,28,77,29,79,30,81,31,83,32,85,33,87,34,89,35,91,
        36,3,0,1,2,12,2,0,43,43,45,45,2,0,69,69,101,101,1,0,48,57,2,0,10,
        10,13,13,2,0,65,90,97,122,5,0,40,40,42,43,45,46,63,63,95,95,8,0,
        34,35,37,37,39,39,41,41,44,44,47,47,59,59,124,124,2,0,9,9,32,32,
        7,0,33,33,38,38,42,42,47,47,59,59,61,61,92,92,1,0,49,57,3,0,9,9,
        13,13,32,32,5,0,9,10,13,13,32,32,123,123,125,125,522,0,3,1,0,0,0,
        0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,
        21,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,
        43,1,0,0,0,1,45,1,0,0,0,1,47,1,0,0,0,1,49,1,0,0,0,1,51,1,0,0,0,1,
        53,1,0,0,0,1,55,1,0,0,0,1,57,1,0,0,0,1,59,1,0,0,0,1,61,1,0,0,0,1,
        63,1,0,0,0,1,65,1,0,0,0,1,67,1,0,0,0,1,69,1,0,0,0,1,71,1,0,0,0,1,
        73,1,0,0,0,1,75,1,0,0,0,1,77,1,0,0,0,1,79,1,0,0,0,1,81,1,0,0,0,1,
        83,1,0,0,0,1,85,1,0,0,0,2,87,1,0,0,0,2,89,1,0,0,0,2,91,1,0,0,0,3,
        93,1,0,0,0,5,102,1,0,0,0,7,107,1,0,0,0,9,114,1,0,0,0,11,133,1,0,
        0,0,13,135,1,0,0,0,15,138,1,0,0,0,17,143,1,0,0,0,19,168,1,0,0,0,
        21,192,1,0,0,0,23,194,1,0,0,0,25,198,1,0,0,0,27,202,1,0,0,0,29,206,
        1,0,0,0,31,208,1,0,0,0,33,216,1,0,0,0,35,223,1,0,0,0,37,227,1,0,
        0,0,39,230,1,0,0,0,41,262,1,0,0,0,43,301,1,0,0,0,45,313,1,0,0,0,
        47,321,1,0,0,0,49,324,1,0,0,0,51,327,1,0,0,0,53,337,1,0,0,0,55,341,
        1,0,0,0,57,345,1,0,0,0,59,349,1,0,0,0,61,353,1,0,0,0,63,357,1,0,
        0,0,65,361,1,0,0,0,67,365,1,0,0,0,69,369,1,0,0,0,71,373,1,0,0,0,
        73,378,1,0,0,0,75,386,1,0,0,0,77,422,1,0,0,0,79,424,1,0,0,0,81,427,
        1,0,0,0,83,433,1,0,0,0,85,435,1,0,0,0,87,461,1,0,0,0,89,466,1,0,
        0,0,91,473,1,0,0,0,93,94,5,108,0,0,94,95,5,97,0,0,95,96,5,98,0,0,
        96,97,5,101,0,0,97,98,5,108,0,0,98,99,1,0,0,0,99,100,6,0,0,0,100,
        4,1,0,0,0,101,103,7,0,0,0,102,101,1,0,0,0,102,103,1,0,0,0,103,104,
        1,0,0,0,104,105,3,15,6,0,105,6,1,0,0,0,106,108,7,0,0,0,107,106,1,
        0,0,0,107,108,1,0,0,0,108,111,1,0,0,0,109,112,3,15,6,0,110,112,3,
        11,4,0,111,109,1,0,0,0,111,110,1,0,0,0,112,8,1,0,0,0,113,115,7,0,
        0,0,114,113,1,0,0,0,114,115,1,0,0,0,115,118,1,0,0,0,116,119,3,15,
        6,0,117,119,3,11,4,0,118,116,1,0,0,0,118,117,1,0,0,0,119,125,1,0,
        0,0,120,122,7,1,0,0,121,123,7,0,0,0,122,121,1,0,0,0,122,123,1,0,
        0,0,123,124,1,0,0,0,124,126,3,15,6,0,125,120,1,0,0,0,125,126,1,0,
        0,0,126,10,1,0,0,0,127,128,3,15,6,0,128,129,5,46,0,0,129,130,3,15,
        6,0,130,134,1,0,0,0,131,132,5,46,0,0,132,134,3,15,6,0,133,127,1,
        0,0,0,133,131,1,0,0,0,134,12,1,0,0,0,135,136,7,2,0,0,136,14,1,0,
        0,0,137,139,3,13,5,0,138,137,1,0,0,0,139,140,1,0,0,0,140,138,1,0,
        0,0,140,141,1,0,0,0,141,16,1,0,0,0,142,144,5,33,0,0,143,142,1,0,
        0,0,144,145,1,0,0,0,145,143,1,0,0,0,145,146,1,0,0,0,146,150,1,0,
        0,0,147,149,8,3,0,0,148,147,1,0,0,0,149,152,1,0,0,0,150,148,1,0,
        0,0,150,151,1,0,0,0,151,156,1,0,0,0,152,150,1,0,0,0,153,155,5,33,
        0,0,154,153,1,0,0,0,155,158,1,0,0,0,156,154,1,0,0,0,156,157,1,0,
        0,0,157,162,1,0,0,0,158,156,1,0,0,0,159,161,8,3,0,0,160,159,1,0,
        0,0,161,164,1,0,0,0,162,160,1,0,0,0,162,163,1,0,0,0,163,165,1,0,
        0,0,164,162,1,0,0,0,165,166,6,7,1,0,166,18,1,0,0,0,167,169,5,59,
        0,0,168,167,1,0,0,0,169,170,1,0,0,0,170,168,1,0,0,0,170,171,1,0,
        0,0,171,175,1,0,0,0,172,174,8,3,0,0,173,172,1,0,0,0,174,177,1,0,
        0,0,175,173,1,0,0,0,175,176,1,0,0,0,176,181,1,0,0,0,177,175,1,0,
        0,0,178,180,5,59,0,0,179,178,1,0,0,0,180,183,1,0,0,0,181,179,1,0,
        0,0,181,182,1,0,0,0,182,187,1,0,0,0,183,181,1,0,0,0,184,186,8,3,
        0,0,185,184,1,0,0,0,186,189,1,0,0,0,187,185,1,0,0,0,187,188,1,0,
        0,0,188,190,1,0,0,0,189,187,1,0,0,0,190,191,6,8,1,0,191,20,1,0,0,
        0,192,193,3,31,14,0,193,22,1,0,0,0,194,195,7,4,0,0,195,24,1,0,0,
        0,196,199,3,23,10,0,197,199,3,13,5,0,198,196,1,0,0,0,198,197,1,0,
        0,0,199,26,1,0,0,0,200,203,3,25,11,0,201,203,7,5,0,0,202,200,1,0,
        0,0,202,201,1,0,0,0,203,28,1,0,0,0,204,207,3,27,12,0,205,207,7,6,
        0,0,206,204,1,0,0,0,206,205,1,0,0,0,207,30,1,0,0,0,208,212,3,27,
        12,0,209,211,3,29,13,0,210,209,1,0,0,0,211,214,1,0,0,0,212,210,1,
        0,0,0,212,213,1,0,0,0,213,32,1,0,0,0,214,212,1,0,0,0,215,217,7,7,
        0,0,216,215,1,0,0,0,217,218,1,0,0,0,218,216,1,0,0,0,218,219,1,0,
        0,0,219,220,1,0,0,0,220,221,6,15,2,0,221,34,1,0,0,0,222,224,7,3,
        0,0,223,222,1,0,0,0,224,225,1,0,0,0,225,223,1,0,0,0,225,226,1,0,
        0,0,226,36,1,0,0,0,227,228,7,8,0,0,228,38,1,0,0,0,229,231,5,123,
        0,0,230,229,1,0,0,0,231,232,1,0,0,0,232,230,1,0,0,0,232,233,1,0,
        0,0,233,234,1,0,0,0,234,235,6,18,3,0,235,40,1,0,0,0,236,263,5,35,
        0,0,237,263,3,37,17,0,238,240,3,37,17,0,239,241,5,47,0,0,240,239,
        1,0,0,0,241,242,1,0,0,0,242,240,1,0,0,0,242,243,1,0,0,0,243,263,
        1,0,0,0,244,246,3,37,17,0,245,247,5,42,0,0,246,245,1,0,0,0,247,248,
        1,0,0,0,248,246,1,0,0,0,248,249,1,0,0,0,249,263,1,0,0,0,250,252,
        3,37,17,0,251,253,5,61,0,0,252,251,1,0,0,0,253,254,1,0,0,0,254,252,
        1,0,0,0,254,255,1,0,0,0,255,263,1,0,0,0,256,257,5,82,0,0,257,258,
        5,69,0,0,258,259,5,77,0,0,259,260,5,65,0,0,260,261,5,82,0,0,261,
        263,5,75,0,0,262,236,1,0,0,0,262,237,1,0,0,0,262,238,1,0,0,0,262,
        244,1,0,0,0,262,250,1,0,0,0,262,256,1,0,0,0,263,267,1,0,0,0,264,
        266,5,32,0,0,265,264,1,0,0,0,266,269,1,0,0,0,267,265,1,0,0,0,267,
        268,1,0,0,0,268,270,1,0,0,0,269,267,1,0,0,0,270,271,3,35,16,0,271,
        272,1,0,0,0,272,273,6,19,1,0,273,42,1,0,0,0,274,275,5,35,0,0,275,
        302,5,32,0,0,276,302,3,37,17,0,277,279,3,37,17,0,278,280,5,47,0,
        0,279,278,1,0,0,0,280,281,1,0,0,0,281,279,1,0,0,0,281,282,1,0,0,
        0,282,302,1,0,0,0,283,285,3,37,17,0,284,286,5,42,0,0,285,284,1,0,
        0,0,286,287,1,0,0,0,287,285,1,0,0,0,287,288,1,0,0,0,288,302,1,0,
        0,0,289,291,3,37,17,0,290,292,5,61,0,0,291,290,1,0,0,0,292,293,1,
        0,0,0,293,291,1,0,0,0,293,294,1,0,0,0,294,302,1,0,0,0,295,296,5,
        82,0,0,296,297,5,69,0,0,297,298,5,77,0,0,298,299,5,65,0,0,299,300,
        5,82,0,0,300,302,5,75,0,0,301,274,1,0,0,0,301,276,1,0,0,0,301,277,
        1,0,0,0,301,283,1,0,0,0,301,289,1,0,0,0,301,295,1,0,0,0,302,306,
        1,0,0,0,303,305,8,3,0,0,304,303,1,0,0,0,305,308,1,0,0,0,306,304,
        1,0,0,0,306,307,1,0,0,0,307,309,1,0,0,0,308,306,1,0,0,0,309,310,
        3,35,16,0,310,311,1,0,0,0,311,312,6,20,1,0,312,44,1,0,0,0,313,314,
        5,100,0,0,314,315,5,97,0,0,315,316,5,116,0,0,316,317,5,97,0,0,317,
        318,5,115,0,0,318,319,5,101,0,0,319,320,5,116,0,0,320,46,1,0,0,0,
        321,322,5,115,0,0,322,323,5,119,0,0,323,48,1,0,0,0,324,325,5,115,
        0,0,325,326,5,102,0,0,326,50,1,0,0,0,327,328,5,99,0,0,328,329,5,
        111,0,0,329,330,5,110,0,0,330,331,5,100,0,0,331,332,5,105,0,0,332,
        333,5,116,0,0,333,334,5,105,0,0,334,335,5,111,0,0,335,336,5,110,
        0,0,336,52,1,0,0,0,337,338,3,21,9,0,338,339,5,46,0,0,339,340,5,76,
        0,0,340,54,1,0,0,0,341,342,3,21,9,0,342,343,5,46,0,0,343,344,5,80,
        0,0,344,56,1,0,0,0,345,346,3,21,9,0,346,347,5,46,0,0,347,348,5,87,
        0,0,348,58,1,0,0,0,349,350,3,21,9,0,350,351,5,46,0,0,351,352,5,66,
        0,0,352,60,1,0,0,0,353,354,3,21,9,0,354,355,5,46,0,0,355,356,5,69,
        0,0,356,62,1,0,0,0,357,358,3,21,9,0,358,359,5,46,0,0,359,360,5,74,
        0,0,360,64,1,0,0,0,361,362,3,21,9,0,362,363,5,46,0,0,363,364,5,85,
        0,0,364,66,1,0,0,0,365,366,5,118,0,0,366,367,5,111,0,0,367,368,5,
        108,0,0,368,68,1,0,0,0,369,370,5,105,0,0,370,371,5,110,0,0,371,372,
        5,116,0,0,372,70,1,0,0,0,373,374,5,115,0,0,374,375,5,116,0,0,375,
        376,5,97,0,0,376,377,5,116,0,0,377,72,1,0,0,0,378,379,5,99,0,0,379,
        380,5,111,0,0,380,381,5,109,0,0,381,382,5,109,0,0,382,383,5,101,
        0,0,383,384,5,110,0,0,384,385,5,116,0,0,385,74,1,0,0,0,386,387,5,
        102,0,0,387,388,5,108,0,0,388,389,5,97,0,0,389,390,5,103,0,0,390,
        391,5,48,0,0,391,395,1,0,0,0,392,394,5,32,0,0,393,392,1,0,0,0,394,
        397,1,0,0,0,395,393,1,0,0,0,395,396,1,0,0,0,396,412,1,0,0,0,397,
        395,1,0,0,0,398,399,5,102,0,0,399,400,5,108,0,0,400,401,5,97,0,0,
        401,402,5,103,0,0,402,403,1,0,0,0,403,407,7,9,0,0,404,406,5,32,0,
        0,405,404,1,0,0,0,406,409,1,0,0,0,407,405,1,0,0,0,407,408,1,0,0,
        0,408,411,1,0,0,0,409,407,1,0,0,0,410,398,1,0,0,0,411,414,1,0,0,
        0,412,410,1,0,0,0,412,413,1,0,0,0,413,416,1,0,0,0,414,412,1,0,0,
        0,415,417,7,3,0,0,416,415,1,0,0,0,417,418,1,0,0,0,418,416,1,0,0,
        0,418,419,1,0,0,0,419,420,1,0,0,0,420,421,6,36,4,0,421,76,1,0,0,
        0,422,423,3,31,14,0,423,78,1,0,0,0,424,425,3,7,2,0,425,80,1,0,0,
        0,426,428,7,10,0,0,427,426,1,0,0,0,428,429,1,0,0,0,429,427,1,0,0,
        0,429,430,1,0,0,0,430,431,1,0,0,0,431,432,6,39,2,0,432,82,1,0,0,
        0,433,434,5,10,0,0,434,84,1,0,0,0,435,439,5,123,0,0,436,438,5,32,
        0,0,437,436,1,0,0,0,438,441,1,0,0,0,439,437,1,0,0,0,439,440,1,0,
        0,0,440,450,1,0,0,0,441,439,1,0,0,0,442,451,3,7,2,0,443,446,3,31,
        14,0,444,446,5,32,0,0,445,443,1,0,0,0,445,444,1,0,0,0,446,449,1,
        0,0,0,447,448,1,0,0,0,447,445,1,0,0,0,448,451,1,0,0,0,449,447,1,
        0,0,0,450,442,1,0,0,0,450,447,1,0,0,0,451,455,1,0,0,0,452,454,5,
        32,0,0,453,452,1,0,0,0,454,457,1,0,0,0,455,453,1,0,0,0,455,456,1,
        0,0,0,456,458,1,0,0,0,457,455,1,0,0,0,458,459,5,125,0,0,459,86,1,
        0,0,0,460,462,8,11,0,0,461,460,1,0,0,0,462,463,1,0,0,0,463,461,1,
        0,0,0,463,464,1,0,0,0,464,88,1,0,0,0,465,467,7,7,0,0,466,465,1,0,
        0,0,467,468,1,0,0,0,468,466,1,0,0,0,468,469,1,0,0,0,469,470,1,0,
        0,0,470,471,6,43,2,0,471,90,1,0,0,0,472,474,5,125,0,0,473,472,1,
        0,0,0,474,475,1,0,0,0,475,473,1,0,0,0,475,476,1,0,0,0,476,477,1,
        0,0,0,477,478,6,44,4,0,478,92,1,0,0,0,50,0,1,2,102,107,111,114,118,
        122,125,133,140,145,150,156,162,170,175,181,187,198,202,206,212,
        218,225,232,242,248,254,262,267,281,287,293,301,306,395,407,412,
        418,429,439,445,447,450,455,463,468,475,5,5,1,0,0,1,0,6,0,0,5,2,
        0,4,0,0
    ]

class NmrViewPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LABEL_MODE = 1
    ENCLOSE_DATA_MODE = 2

    Label = 1
    Integer = 2
    Float = 3
    Real = 4
    EXCLM_COMMENT = 5
    SMCLN_COMMENT = 6
    Simple_name = 7
    SPACE = 8
    RETURN = 9
    L_brace = 10
    SECTION_COMMENT = 11
    LINE_COMMENT = 12
    Dataset = 13
    Sw = 14
    Sf = 15
    Condition = 16
    L_name = 17
    P_name = 18
    W_name = 19
    B_name = 20
    E_name = 21
    J_name = 22
    U_name = 23
    Vol = 24
    Int = 25
    Stat = 26
    Comment = 27
    Flag0 = 28
    Simple_name_LA = 29
    Float_LA = 30
    SPACE_LA = 31
    SINGLE_NL_LA = 32
    ENCLOSE_DATA_LA = 33
    Any_name = 34
    SPACE_CM = 35
    R_brace = 36

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "LABEL_MODE", "ENCLOSE_DATA_MODE" ]

    literalNames = [ "<INVALID>",
            "'label'", "'dataset'", "'sw'", "'sf'", "'condition'", "'vol'", 
            "'int'", "'stat'", "'comment'", "'\\n'" ]

    symbolicNames = [ "<INVALID>",
            "Label", "Integer", "Float", "Real", "EXCLM_COMMENT", "SMCLN_COMMENT", 
            "Simple_name", "SPACE", "RETURN", "L_brace", "SECTION_COMMENT", 
            "LINE_COMMENT", "Dataset", "Sw", "Sf", "Condition", "L_name", 
            "P_name", "W_name", "B_name", "E_name", "J_name", "U_name", 
            "Vol", "Int", "Stat", "Comment", "Flag0", "Simple_name_LA", 
            "Float_LA", "SPACE_LA", "SINGLE_NL_LA", "ENCLOSE_DATA_LA", "Any_name", 
            "SPACE_CM", "R_brace" ]

    ruleNames = [ "Label", "Integer", "Float", "Real", "DEC_DOT_DEC", "DEC_DIGIT", 
                  "DECIMAL", "EXCLM_COMMENT", "SMCLN_COMMENT", "Simple_name", 
                  "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", 
                  "SPACE", "RETURN", "COMMENT_START_CHAR", "L_brace", "SECTION_COMMENT", 
                  "LINE_COMMENT", "Dataset", "Sw", "Sf", "Condition", "L_name", 
                  "P_name", "W_name", "B_name", "E_name", "J_name", "U_name", 
                  "Vol", "Int", "Stat", "Comment", "Flag0", "Simple_name_LA", 
                  "Float_LA", "SPACE_LA", "SINGLE_NL_LA", "ENCLOSE_DATA_LA", 
                  "Any_name", "SPACE_CM", "R_brace" ]

    grammarFileName = "NmrViewPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


