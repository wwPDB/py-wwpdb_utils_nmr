# Generated from NmrViewPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,34,496,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,1,3,1,98,8,1,1,1,1,1,1,2,3,2,103,8,2,1,2,1,2,3,2,107,8,
        2,1,3,3,3,110,8,3,1,3,1,3,3,3,114,8,3,1,3,1,3,3,3,118,8,3,1,3,3,
        3,121,8,3,1,4,1,4,1,4,1,4,1,4,1,4,3,4,129,8,4,1,5,1,5,1,6,4,6,134,
        8,6,11,6,12,6,135,1,7,4,7,139,8,7,11,7,12,7,140,1,7,5,7,144,8,7,
        10,7,12,7,147,9,7,1,7,5,7,150,8,7,10,7,12,7,153,9,7,1,7,5,7,156,
        8,7,10,7,12,7,159,9,7,1,7,1,7,1,8,4,8,164,8,8,11,8,12,8,165,1,8,
        5,8,169,8,8,10,8,12,8,172,9,8,1,8,5,8,175,8,8,10,8,12,8,178,9,8,
        1,8,5,8,181,8,8,10,8,12,8,184,9,8,1,8,1,8,1,9,4,9,189,8,9,11,9,12,
        9,190,1,9,5,9,194,8,9,10,9,12,9,197,9,9,1,9,5,9,200,8,9,10,9,12,
        9,203,9,9,1,9,5,9,206,8,9,10,9,12,9,209,9,9,1,9,1,9,1,10,1,10,1,
        11,1,11,1,12,1,12,3,12,219,8,12,1,13,1,13,3,13,223,8,13,1,14,1,14,
        3,14,227,8,14,1,15,1,15,5,15,231,8,15,10,15,12,15,234,9,15,1,16,
        4,16,237,8,16,11,16,12,16,238,1,16,1,16,1,17,4,17,244,8,17,11,17,
        12,17,245,1,18,1,18,1,19,1,19,5,19,252,8,19,10,19,12,19,255,9,19,
        1,19,1,19,1,19,1,19,5,19,261,8,19,10,19,12,19,264,9,19,3,19,266,
        8,19,1,19,5,19,269,8,19,10,19,12,19,272,9,19,1,19,1,19,1,20,1,20,
        1,20,4,20,279,8,20,11,20,12,20,280,1,20,1,20,4,20,285,8,20,11,20,
        12,20,286,1,20,1,20,4,20,291,8,20,11,20,12,20,292,1,20,1,20,1,20,
        1,20,1,20,1,20,3,20,301,8,20,1,20,5,20,304,8,20,10,20,12,20,307,
        9,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,4,21,316,8,21,11,21,12,21,
        317,1,21,1,21,4,21,322,8,21,11,21,12,21,323,1,21,1,21,4,21,328,8,
        21,11,21,12,21,329,1,21,1,21,1,21,1,21,1,21,1,21,3,21,338,8,21,1,
        21,5,21,341,8,21,10,21,12,21,344,9,21,1,21,1,21,1,21,1,21,1,22,1,
        22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,
        25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,
        26,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,
        30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,
        33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,
        36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,
        37,5,37,430,8,37,10,37,12,37,433,9,37,1,37,1,37,1,37,1,37,1,37,1,
        37,1,37,5,37,442,8,37,10,37,12,37,445,9,37,5,37,447,8,37,10,37,12,
        37,450,9,37,1,37,4,37,453,8,37,11,37,12,37,454,1,37,1,37,1,38,1,
        38,1,39,1,39,1,40,4,40,464,8,40,11,40,12,40,465,1,40,1,40,1,41,1,
        41,1,42,1,42,5,42,474,8,42,10,42,12,42,477,9,42,1,42,1,42,1,42,5,
        42,482,8,42,10,42,12,42,485,9,42,3,42,487,8,42,1,42,5,42,490,8,42,
        10,42,12,42,493,9,42,1,42,1,42,2,262,483,0,43,2,1,4,2,6,3,8,4,10,
        0,12,0,14,0,16,5,18,6,20,7,22,8,24,0,26,0,28,0,30,0,32,0,34,9,36,
        10,38,0,40,11,42,12,44,13,46,14,48,15,50,16,52,17,54,18,56,19,58,
        20,60,21,62,22,64,23,66,24,68,25,70,26,72,27,74,28,76,29,78,30,80,
        31,82,32,84,33,86,34,2,0,1,10,2,0,43,43,45,45,2,0,69,69,101,101,
        1,0,48,57,2,0,10,10,13,13,2,0,65,90,97,122,4,0,42,43,45,46,63,63,
        95,95,5,0,34,35,37,37,39,39,44,44,124,124,2,0,9,9,32,32,8,0,33,33,
        35,35,38,38,42,42,47,47,59,59,61,61,92,92,1,0,49,57,544,0,2,1,0,
        0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,
        0,0,20,1,0,0,0,0,22,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,40,1,0,0,
        0,0,42,1,0,0,0,0,44,1,0,0,0,1,46,1,0,0,0,1,48,1,0,0,0,1,50,1,0,0,
        0,1,52,1,0,0,0,1,54,1,0,0,0,1,56,1,0,0,0,1,58,1,0,0,0,1,60,1,0,0,
        0,1,62,1,0,0,0,1,64,1,0,0,0,1,66,1,0,0,0,1,68,1,0,0,0,1,70,1,0,0,
        0,1,72,1,0,0,0,1,74,1,0,0,0,1,76,1,0,0,0,1,78,1,0,0,0,1,80,1,0,0,
        0,1,82,1,0,0,0,1,84,1,0,0,0,1,86,1,0,0,0,2,88,1,0,0,0,4,97,1,0,0,
        0,6,102,1,0,0,0,8,109,1,0,0,0,10,128,1,0,0,0,12,130,1,0,0,0,14,133,
        1,0,0,0,16,138,1,0,0,0,18,163,1,0,0,0,20,188,1,0,0,0,22,212,1,0,
        0,0,24,214,1,0,0,0,26,218,1,0,0,0,28,222,1,0,0,0,30,226,1,0,0,0,
        32,228,1,0,0,0,34,236,1,0,0,0,36,243,1,0,0,0,38,247,1,0,0,0,40,249,
        1,0,0,0,42,300,1,0,0,0,44,337,1,0,0,0,46,349,1,0,0,0,48,357,1,0,
        0,0,50,360,1,0,0,0,52,363,1,0,0,0,54,373,1,0,0,0,56,377,1,0,0,0,
        58,381,1,0,0,0,60,385,1,0,0,0,62,389,1,0,0,0,64,393,1,0,0,0,66,397,
        1,0,0,0,68,401,1,0,0,0,70,405,1,0,0,0,72,409,1,0,0,0,74,414,1,0,
        0,0,76,422,1,0,0,0,78,458,1,0,0,0,80,460,1,0,0,0,82,463,1,0,0,0,
        84,469,1,0,0,0,86,471,1,0,0,0,88,89,5,108,0,0,89,90,5,97,0,0,90,
        91,5,98,0,0,91,92,5,101,0,0,92,93,5,108,0,0,93,94,1,0,0,0,94,95,
        6,0,0,0,95,3,1,0,0,0,96,98,7,0,0,0,97,96,1,0,0,0,97,98,1,0,0,0,98,
        99,1,0,0,0,99,100,3,14,6,0,100,5,1,0,0,0,101,103,7,0,0,0,102,101,
        1,0,0,0,102,103,1,0,0,0,103,106,1,0,0,0,104,107,3,14,6,0,105,107,
        3,10,4,0,106,104,1,0,0,0,106,105,1,0,0,0,107,7,1,0,0,0,108,110,7,
        0,0,0,109,108,1,0,0,0,109,110,1,0,0,0,110,113,1,0,0,0,111,114,3,
        14,6,0,112,114,3,10,4,0,113,111,1,0,0,0,113,112,1,0,0,0,114,120,
        1,0,0,0,115,117,7,1,0,0,116,118,7,0,0,0,117,116,1,0,0,0,117,118,
        1,0,0,0,118,119,1,0,0,0,119,121,3,14,6,0,120,115,1,0,0,0,120,121,
        1,0,0,0,121,9,1,0,0,0,122,123,3,14,6,0,123,124,5,46,0,0,124,125,
        3,14,6,0,125,129,1,0,0,0,126,127,5,46,0,0,127,129,3,14,6,0,128,122,
        1,0,0,0,128,126,1,0,0,0,129,11,1,0,0,0,130,131,7,2,0,0,131,13,1,
        0,0,0,132,134,3,12,5,0,133,132,1,0,0,0,134,135,1,0,0,0,135,133,1,
        0,0,0,135,136,1,0,0,0,136,15,1,0,0,0,137,139,5,35,0,0,138,137,1,
        0,0,0,139,140,1,0,0,0,140,138,1,0,0,0,140,141,1,0,0,0,141,145,1,
        0,0,0,142,144,8,3,0,0,143,142,1,0,0,0,144,147,1,0,0,0,145,143,1,
        0,0,0,145,146,1,0,0,0,146,151,1,0,0,0,147,145,1,0,0,0,148,150,5,
        35,0,0,149,148,1,0,0,0,150,153,1,0,0,0,151,149,1,0,0,0,151,152,1,
        0,0,0,152,157,1,0,0,0,153,151,1,0,0,0,154,156,8,3,0,0,155,154,1,
        0,0,0,156,159,1,0,0,0,157,155,1,0,0,0,157,158,1,0,0,0,158,160,1,
        0,0,0,159,157,1,0,0,0,160,161,6,7,1,0,161,17,1,0,0,0,162,164,5,33,
        0,0,163,162,1,0,0,0,164,165,1,0,0,0,165,163,1,0,0,0,165,166,1,0,
        0,0,166,170,1,0,0,0,167,169,8,3,0,0,168,167,1,0,0,0,169,172,1,0,
        0,0,170,168,1,0,0,0,170,171,1,0,0,0,171,176,1,0,0,0,172,170,1,0,
        0,0,173,175,5,33,0,0,174,173,1,0,0,0,175,178,1,0,0,0,176,174,1,0,
        0,0,176,177,1,0,0,0,177,182,1,0,0,0,178,176,1,0,0,0,179,181,8,3,
        0,0,180,179,1,0,0,0,181,184,1,0,0,0,182,180,1,0,0,0,182,183,1,0,
        0,0,183,185,1,0,0,0,184,182,1,0,0,0,185,186,6,8,1,0,186,19,1,0,0,
        0,187,189,5,59,0,0,188,187,1,0,0,0,189,190,1,0,0,0,190,188,1,0,0,
        0,190,191,1,0,0,0,191,195,1,0,0,0,192,194,8,3,0,0,193,192,1,0,0,
        0,194,197,1,0,0,0,195,193,1,0,0,0,195,196,1,0,0,0,196,201,1,0,0,
        0,197,195,1,0,0,0,198,200,5,59,0,0,199,198,1,0,0,0,200,203,1,0,0,
        0,201,199,1,0,0,0,201,202,1,0,0,0,202,207,1,0,0,0,203,201,1,0,0,
        0,204,206,8,3,0,0,205,204,1,0,0,0,206,209,1,0,0,0,207,205,1,0,0,
        0,207,208,1,0,0,0,208,210,1,0,0,0,209,207,1,0,0,0,210,211,6,9,1,
        0,211,21,1,0,0,0,212,213,3,32,15,0,213,23,1,0,0,0,214,215,7,4,0,
        0,215,25,1,0,0,0,216,219,3,24,11,0,217,219,3,12,5,0,218,216,1,0,
        0,0,218,217,1,0,0,0,219,27,1,0,0,0,220,223,3,26,12,0,221,223,7,5,
        0,0,222,220,1,0,0,0,222,221,1,0,0,0,223,29,1,0,0,0,224,227,3,28,
        13,0,225,227,7,6,0,0,226,224,1,0,0,0,226,225,1,0,0,0,227,31,1,0,
        0,0,228,232,3,28,13,0,229,231,3,30,14,0,230,229,1,0,0,0,231,234,
        1,0,0,0,232,230,1,0,0,0,232,233,1,0,0,0,233,33,1,0,0,0,234,232,1,
        0,0,0,235,237,7,7,0,0,236,235,1,0,0,0,237,238,1,0,0,0,238,236,1,
        0,0,0,238,239,1,0,0,0,239,240,1,0,0,0,240,241,6,16,2,0,241,35,1,
        0,0,0,242,244,7,3,0,0,243,242,1,0,0,0,244,245,1,0,0,0,245,243,1,
        0,0,0,245,246,1,0,0,0,246,37,1,0,0,0,247,248,7,8,0,0,248,39,1,0,
        0,0,249,253,5,123,0,0,250,252,5,32,0,0,251,250,1,0,0,0,252,255,1,
        0,0,0,253,251,1,0,0,0,253,254,1,0,0,0,254,265,1,0,0,0,255,253,1,
        0,0,0,256,266,3,40,19,0,257,266,3,6,2,0,258,261,3,32,15,0,259,261,
        5,32,0,0,260,258,1,0,0,0,260,259,1,0,0,0,261,264,1,0,0,0,262,263,
        1,0,0,0,262,260,1,0,0,0,263,266,1,0,0,0,264,262,1,0,0,0,265,256,
        1,0,0,0,265,257,1,0,0,0,265,262,1,0,0,0,266,270,1,0,0,0,267,269,
        5,32,0,0,268,267,1,0,0,0,269,272,1,0,0,0,270,268,1,0,0,0,270,271,
        1,0,0,0,271,273,1,0,0,0,272,270,1,0,0,0,273,274,5,125,0,0,274,41,
        1,0,0,0,275,301,3,38,18,0,276,278,3,38,18,0,277,279,5,47,0,0,278,
        277,1,0,0,0,279,280,1,0,0,0,280,278,1,0,0,0,280,281,1,0,0,0,281,
        301,1,0,0,0,282,284,3,38,18,0,283,285,5,42,0,0,284,283,1,0,0,0,285,
        286,1,0,0,0,286,284,1,0,0,0,286,287,1,0,0,0,287,301,1,0,0,0,288,
        290,3,38,18,0,289,291,5,61,0,0,290,289,1,0,0,0,291,292,1,0,0,0,292,
        290,1,0,0,0,292,293,1,0,0,0,293,301,1,0,0,0,294,295,5,82,0,0,295,
        296,5,69,0,0,296,297,5,77,0,0,297,298,5,65,0,0,298,299,5,82,0,0,
        299,301,5,75,0,0,300,275,1,0,0,0,300,276,1,0,0,0,300,282,1,0,0,0,
        300,288,1,0,0,0,300,294,1,0,0,0,301,305,1,0,0,0,302,304,5,32,0,0,
        303,302,1,0,0,0,304,307,1,0,0,0,305,303,1,0,0,0,305,306,1,0,0,0,
        306,308,1,0,0,0,307,305,1,0,0,0,308,309,3,36,17,0,309,310,1,0,0,
        0,310,311,6,20,1,0,311,43,1,0,0,0,312,338,3,38,18,0,313,315,3,38,
        18,0,314,316,5,47,0,0,315,314,1,0,0,0,316,317,1,0,0,0,317,315,1,
        0,0,0,317,318,1,0,0,0,318,338,1,0,0,0,319,321,3,38,18,0,320,322,
        5,42,0,0,321,320,1,0,0,0,322,323,1,0,0,0,323,321,1,0,0,0,323,324,
        1,0,0,0,324,338,1,0,0,0,325,327,3,38,18,0,326,328,5,61,0,0,327,326,
        1,0,0,0,328,329,1,0,0,0,329,327,1,0,0,0,329,330,1,0,0,0,330,338,
        1,0,0,0,331,332,5,82,0,0,332,333,5,69,0,0,333,334,5,77,0,0,334,335,
        5,65,0,0,335,336,5,82,0,0,336,338,5,75,0,0,337,312,1,0,0,0,337,313,
        1,0,0,0,337,319,1,0,0,0,337,325,1,0,0,0,337,331,1,0,0,0,338,342,
        1,0,0,0,339,341,8,3,0,0,340,339,1,0,0,0,341,344,1,0,0,0,342,340,
        1,0,0,0,342,343,1,0,0,0,343,345,1,0,0,0,344,342,1,0,0,0,345,346,
        3,36,17,0,346,347,1,0,0,0,347,348,6,21,1,0,348,45,1,0,0,0,349,350,
        5,100,0,0,350,351,5,97,0,0,351,352,5,116,0,0,352,353,5,97,0,0,353,
        354,5,115,0,0,354,355,5,101,0,0,355,356,5,116,0,0,356,47,1,0,0,0,
        357,358,5,115,0,0,358,359,5,119,0,0,359,49,1,0,0,0,360,361,5,115,
        0,0,361,362,5,102,0,0,362,51,1,0,0,0,363,364,5,99,0,0,364,365,5,
        111,0,0,365,366,5,110,0,0,366,367,5,100,0,0,367,368,5,105,0,0,368,
        369,5,116,0,0,369,370,5,105,0,0,370,371,5,111,0,0,371,372,5,110,
        0,0,372,53,1,0,0,0,373,374,3,22,10,0,374,375,5,46,0,0,375,376,5,
        76,0,0,376,55,1,0,0,0,377,378,3,22,10,0,378,379,5,46,0,0,379,380,
        5,80,0,0,380,57,1,0,0,0,381,382,3,22,10,0,382,383,5,46,0,0,383,384,
        5,87,0,0,384,59,1,0,0,0,385,386,3,22,10,0,386,387,5,46,0,0,387,388,
        5,66,0,0,388,61,1,0,0,0,389,390,3,22,10,0,390,391,5,46,0,0,391,392,
        5,69,0,0,392,63,1,0,0,0,393,394,3,22,10,0,394,395,5,46,0,0,395,396,
        5,74,0,0,396,65,1,0,0,0,397,398,3,22,10,0,398,399,5,46,0,0,399,400,
        5,85,0,0,400,67,1,0,0,0,401,402,5,118,0,0,402,403,5,111,0,0,403,
        404,5,108,0,0,404,69,1,0,0,0,405,406,5,105,0,0,406,407,5,110,0,0,
        407,408,5,116,0,0,408,71,1,0,0,0,409,410,5,115,0,0,410,411,5,116,
        0,0,411,412,5,97,0,0,412,413,5,116,0,0,413,73,1,0,0,0,414,415,5,
        99,0,0,415,416,5,111,0,0,416,417,5,109,0,0,417,418,5,109,0,0,418,
        419,5,101,0,0,419,420,5,110,0,0,420,421,5,116,0,0,421,75,1,0,0,0,
        422,423,5,102,0,0,423,424,5,108,0,0,424,425,5,97,0,0,425,426,5,103,
        0,0,426,427,5,48,0,0,427,431,1,0,0,0,428,430,5,32,0,0,429,428,1,
        0,0,0,430,433,1,0,0,0,431,429,1,0,0,0,431,432,1,0,0,0,432,448,1,
        0,0,0,433,431,1,0,0,0,434,435,5,102,0,0,435,436,5,108,0,0,436,437,
        5,97,0,0,437,438,5,103,0,0,438,439,1,0,0,0,439,443,7,9,0,0,440,442,
        5,32,0,0,441,440,1,0,0,0,442,445,1,0,0,0,443,441,1,0,0,0,443,444,
        1,0,0,0,444,447,1,0,0,0,445,443,1,0,0,0,446,434,1,0,0,0,447,450,
        1,0,0,0,448,446,1,0,0,0,448,449,1,0,0,0,449,452,1,0,0,0,450,448,
        1,0,0,0,451,453,7,3,0,0,452,451,1,0,0,0,453,454,1,0,0,0,454,452,
        1,0,0,0,454,455,1,0,0,0,455,456,1,0,0,0,456,457,6,37,3,0,457,77,
        1,0,0,0,458,459,3,32,15,0,459,79,1,0,0,0,460,461,3,6,2,0,461,81,
        1,0,0,0,462,464,7,7,0,0,463,462,1,0,0,0,464,465,1,0,0,0,465,463,
        1,0,0,0,465,466,1,0,0,0,466,467,1,0,0,0,467,468,6,40,2,0,468,83,
        1,0,0,0,469,470,7,3,0,0,470,85,1,0,0,0,471,475,5,123,0,0,472,474,
        5,32,0,0,473,472,1,0,0,0,474,477,1,0,0,0,475,473,1,0,0,0,475,476,
        1,0,0,0,476,486,1,0,0,0,477,475,1,0,0,0,478,487,3,6,2,0,479,482,
        3,32,15,0,480,482,5,32,0,0,481,479,1,0,0,0,481,480,1,0,0,0,482,485,
        1,0,0,0,483,484,1,0,0,0,483,481,1,0,0,0,484,487,1,0,0,0,485,483,
        1,0,0,0,486,478,1,0,0,0,486,483,1,0,0,0,487,491,1,0,0,0,488,490,
        5,32,0,0,489,488,1,0,0,0,490,493,1,0,0,0,491,489,1,0,0,0,491,492,
        1,0,0,0,492,494,1,0,0,0,493,491,1,0,0,0,494,495,5,125,0,0,495,87,
        1,0,0,0,54,0,1,97,102,106,109,113,117,120,128,135,140,145,151,157,
        165,170,176,182,190,195,201,207,218,222,226,232,238,245,253,260,
        262,265,270,280,286,292,300,305,317,323,329,337,342,431,443,448,
        454,465,475,481,483,486,491,4,5,1,0,0,1,0,6,0,0,4,0,0
    ]

class NmrViewPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LABEL_MODE = 1

    Label = 1
    Integer = 2
    Float = 3
    Real = 4
    SHARP_COMMENT = 5
    EXCLM_COMMENT = 6
    SMCLN_COMMENT = 7
    Simple_name = 8
    SPACE = 9
    RETURN = 10
    ENCLOSE_DATA = 11
    SECTION_COMMENT = 12
    LINE_COMMENT = 13
    Dataset = 14
    Sw = 15
    Sf = 16
    Condition = 17
    L_name = 18
    P_name = 19
    W_name = 20
    B_name = 21
    E_name = 22
    J_name = 23
    U_name = 24
    Vol = 25
    Int = 26
    Stat = 27
    Comment = 28
    Flag0 = 29
    Simple_name_LA = 30
    Float_LA = 31
    SPACE_LA = 32
    RETURN_LA = 33
    ENCLOSE_DATA_LA = 34

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "LABEL_MODE" ]

    literalNames = [ "<INVALID>",
            "'label'", "'dataset'", "'sw'", "'sf'", "'condition'", "'vol'", 
            "'int'", "'stat'", "'comment'" ]

    symbolicNames = [ "<INVALID>",
            "Label", "Integer", "Float", "Real", "SHARP_COMMENT", "EXCLM_COMMENT", 
            "SMCLN_COMMENT", "Simple_name", "SPACE", "RETURN", "ENCLOSE_DATA", 
            "SECTION_COMMENT", "LINE_COMMENT", "Dataset", "Sw", "Sf", "Condition", 
            "L_name", "P_name", "W_name", "B_name", "E_name", "J_name", 
            "U_name", "Vol", "Int", "Stat", "Comment", "Flag0", "Simple_name_LA", 
            "Float_LA", "SPACE_LA", "RETURN_LA", "ENCLOSE_DATA_LA" ]

    ruleNames = [ "Label", "Integer", "Float", "Real", "DEC_DOT_DEC", "DEC_DIGIT", 
                  "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", "SMCLN_COMMENT", 
                  "Simple_name", "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", 
                  "SIMPLE_NAME", "SPACE", "RETURN", "COMMENT_START_CHAR", 
                  "ENCLOSE_DATA", "SECTION_COMMENT", "LINE_COMMENT", "Dataset", 
                  "Sw", "Sf", "Condition", "L_name", "P_name", "W_name", 
                  "B_name", "E_name", "J_name", "U_name", "Vol", "Int", 
                  "Stat", "Comment", "Flag0", "Simple_name_LA", "Float_LA", 
                  "SPACE_LA", "RETURN_LA", "ENCLOSE_DATA_LA" ]

    grammarFileName = "NmrViewPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


