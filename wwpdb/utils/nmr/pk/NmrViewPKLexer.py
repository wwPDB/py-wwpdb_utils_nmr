# Generated from NmrViewPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,34,494,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,3,1,96,8,1,1,1,1,1,1,2,3,2,101,8,2,1,2,1,2,3,2,105,8,2,1,3,3,3,
        108,8,3,1,3,1,3,3,3,112,8,3,1,3,1,3,3,3,116,8,3,1,3,3,3,119,8,3,
        1,4,1,4,1,4,1,4,1,4,1,4,3,4,127,8,4,1,5,1,5,1,6,4,6,132,8,6,11,6,
        12,6,133,1,7,4,7,137,8,7,11,7,12,7,138,1,7,5,7,142,8,7,10,7,12,7,
        145,9,7,1,7,5,7,148,8,7,10,7,12,7,151,9,7,1,7,5,7,154,8,7,10,7,12,
        7,157,9,7,1,7,1,7,1,8,4,8,162,8,8,11,8,12,8,163,1,8,5,8,167,8,8,
        10,8,12,8,170,9,8,1,8,5,8,173,8,8,10,8,12,8,176,9,8,1,8,5,8,179,
        8,8,10,8,12,8,182,9,8,1,8,1,8,1,9,4,9,187,8,9,11,9,12,9,188,1,9,
        5,9,192,8,9,10,9,12,9,195,9,9,1,9,5,9,198,8,9,10,9,12,9,201,9,9,
        1,9,5,9,204,8,9,10,9,12,9,207,9,9,1,9,1,9,1,10,1,10,1,11,1,11,1,
        12,1,12,3,12,217,8,12,1,13,1,13,3,13,221,8,13,1,14,1,14,3,14,225,
        8,14,1,15,1,15,5,15,229,8,15,10,15,12,15,232,9,15,1,16,4,16,235,
        8,16,11,16,12,16,236,1,16,1,16,1,17,4,17,242,8,17,11,17,12,17,243,
        1,18,1,18,5,18,248,8,18,10,18,12,18,251,9,18,1,18,1,18,1,18,5,18,
        256,8,18,10,18,12,18,259,9,18,3,18,261,8,18,1,18,5,18,264,8,18,10,
        18,12,18,267,9,18,1,18,1,18,1,19,1,19,1,19,4,19,274,8,19,11,19,12,
        19,275,1,19,1,19,4,19,280,8,19,11,19,12,19,281,1,19,1,19,4,19,286,
        8,19,11,19,12,19,287,1,19,1,19,1,19,1,19,1,19,1,19,3,19,296,8,19,
        1,19,5,19,299,8,19,10,19,12,19,302,9,19,1,19,1,19,1,19,1,19,1,20,
        1,20,1,20,4,20,311,8,20,11,20,12,20,312,1,20,1,20,4,20,317,8,20,
        11,20,12,20,318,1,20,1,20,4,20,323,8,20,11,20,12,20,324,1,20,1,20,
        1,20,1,20,1,20,1,20,3,20,333,8,20,1,20,5,20,336,8,20,10,20,12,20,
        339,9,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,
        1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,1,30,
        1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,
        1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
        1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,5,36,425,8,36,10,36,12,36,
        428,9,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,5,36,437,8,36,10,36,
        12,36,440,9,36,5,36,442,8,36,10,36,12,36,445,9,36,1,36,4,36,448,
        8,36,11,36,12,36,449,1,36,1,36,1,37,1,37,1,38,1,38,1,39,4,39,459,
        8,39,11,39,12,39,460,1,39,1,39,1,40,4,40,466,8,40,11,40,12,40,467,
        1,41,1,41,5,41,472,8,41,10,41,12,41,475,9,41,1,41,1,41,1,41,5,41,
        480,8,41,10,41,12,41,483,9,41,3,41,485,8,41,1,41,5,41,488,8,41,10,
        41,12,41,491,9,41,1,41,1,41,2,257,481,0,42,2,1,4,2,6,3,8,4,10,0,
        12,0,14,0,16,5,18,6,20,7,22,8,24,0,26,0,28,0,30,0,32,0,34,9,36,10,
        38,11,40,12,42,13,44,14,46,15,48,16,50,17,52,18,54,19,56,20,58,21,
        60,22,62,23,64,24,66,25,68,26,70,27,72,28,74,29,76,30,78,31,80,32,
        82,33,84,34,2,0,1,10,2,0,43,43,45,45,2,0,69,69,101,101,1,0,48,57,
        2,0,10,10,13,13,2,0,65,90,97,122,4,0,42,43,45,46,63,63,95,95,2,0,
        34,34,39,39,2,0,9,9,32,32,5,0,33,33,35,35,38,38,59,59,92,92,1,0,
        49,57,543,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,16,1,
        0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,34,1,0,0,0,0,36,1,
        0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,1,44,1,0,0,0,1,46,1,
        0,0,0,1,48,1,0,0,0,1,50,1,0,0,0,1,52,1,0,0,0,1,54,1,0,0,0,1,56,1,
        0,0,0,1,58,1,0,0,0,1,60,1,0,0,0,1,62,1,0,0,0,1,64,1,0,0,0,1,66,1,
        0,0,0,1,68,1,0,0,0,1,70,1,0,0,0,1,72,1,0,0,0,1,74,1,0,0,0,1,76,1,
        0,0,0,1,78,1,0,0,0,1,80,1,0,0,0,1,82,1,0,0,0,1,84,1,0,0,0,2,86,1,
        0,0,0,4,95,1,0,0,0,6,100,1,0,0,0,8,107,1,0,0,0,10,126,1,0,0,0,12,
        128,1,0,0,0,14,131,1,0,0,0,16,136,1,0,0,0,18,161,1,0,0,0,20,186,
        1,0,0,0,22,210,1,0,0,0,24,212,1,0,0,0,26,216,1,0,0,0,28,220,1,0,
        0,0,30,224,1,0,0,0,32,226,1,0,0,0,34,234,1,0,0,0,36,241,1,0,0,0,
        38,245,1,0,0,0,40,295,1,0,0,0,42,332,1,0,0,0,44,344,1,0,0,0,46,352,
        1,0,0,0,48,355,1,0,0,0,50,358,1,0,0,0,52,368,1,0,0,0,54,372,1,0,
        0,0,56,376,1,0,0,0,58,380,1,0,0,0,60,384,1,0,0,0,62,388,1,0,0,0,
        64,392,1,0,0,0,66,396,1,0,0,0,68,400,1,0,0,0,70,404,1,0,0,0,72,409,
        1,0,0,0,74,417,1,0,0,0,76,453,1,0,0,0,78,455,1,0,0,0,80,458,1,0,
        0,0,82,465,1,0,0,0,84,469,1,0,0,0,86,87,5,108,0,0,87,88,5,97,0,0,
        88,89,5,98,0,0,89,90,5,101,0,0,90,91,5,108,0,0,91,92,1,0,0,0,92,
        93,6,0,0,0,93,3,1,0,0,0,94,96,7,0,0,0,95,94,1,0,0,0,95,96,1,0,0,
        0,96,97,1,0,0,0,97,98,3,14,6,0,98,5,1,0,0,0,99,101,7,0,0,0,100,99,
        1,0,0,0,100,101,1,0,0,0,101,104,1,0,0,0,102,105,3,14,6,0,103,105,
        3,10,4,0,104,102,1,0,0,0,104,103,1,0,0,0,105,7,1,0,0,0,106,108,7,
        0,0,0,107,106,1,0,0,0,107,108,1,0,0,0,108,111,1,0,0,0,109,112,3,
        14,6,0,110,112,3,10,4,0,111,109,1,0,0,0,111,110,1,0,0,0,112,118,
        1,0,0,0,113,115,7,1,0,0,114,116,7,0,0,0,115,114,1,0,0,0,115,116,
        1,0,0,0,116,117,1,0,0,0,117,119,3,14,6,0,118,113,1,0,0,0,118,119,
        1,0,0,0,119,9,1,0,0,0,120,121,3,14,6,0,121,122,5,46,0,0,122,123,
        3,14,6,0,123,127,1,0,0,0,124,125,5,46,0,0,125,127,3,14,6,0,126,120,
        1,0,0,0,126,124,1,0,0,0,127,11,1,0,0,0,128,129,7,2,0,0,129,13,1,
        0,0,0,130,132,3,12,5,0,131,130,1,0,0,0,132,133,1,0,0,0,133,131,1,
        0,0,0,133,134,1,0,0,0,134,15,1,0,0,0,135,137,5,35,0,0,136,135,1,
        0,0,0,137,138,1,0,0,0,138,136,1,0,0,0,138,139,1,0,0,0,139,143,1,
        0,0,0,140,142,8,3,0,0,141,140,1,0,0,0,142,145,1,0,0,0,143,141,1,
        0,0,0,143,144,1,0,0,0,144,149,1,0,0,0,145,143,1,0,0,0,146,148,5,
        35,0,0,147,146,1,0,0,0,148,151,1,0,0,0,149,147,1,0,0,0,149,150,1,
        0,0,0,150,155,1,0,0,0,151,149,1,0,0,0,152,154,8,3,0,0,153,152,1,
        0,0,0,154,157,1,0,0,0,155,153,1,0,0,0,155,156,1,0,0,0,156,158,1,
        0,0,0,157,155,1,0,0,0,158,159,6,7,1,0,159,17,1,0,0,0,160,162,5,33,
        0,0,161,160,1,0,0,0,162,163,1,0,0,0,163,161,1,0,0,0,163,164,1,0,
        0,0,164,168,1,0,0,0,165,167,8,3,0,0,166,165,1,0,0,0,167,170,1,0,
        0,0,168,166,1,0,0,0,168,169,1,0,0,0,169,174,1,0,0,0,170,168,1,0,
        0,0,171,173,5,33,0,0,172,171,1,0,0,0,173,176,1,0,0,0,174,172,1,0,
        0,0,174,175,1,0,0,0,175,180,1,0,0,0,176,174,1,0,0,0,177,179,8,3,
        0,0,178,177,1,0,0,0,179,182,1,0,0,0,180,178,1,0,0,0,180,181,1,0,
        0,0,181,183,1,0,0,0,182,180,1,0,0,0,183,184,6,8,1,0,184,19,1,0,0,
        0,185,187,5,59,0,0,186,185,1,0,0,0,187,188,1,0,0,0,188,186,1,0,0,
        0,188,189,1,0,0,0,189,193,1,0,0,0,190,192,8,3,0,0,191,190,1,0,0,
        0,192,195,1,0,0,0,193,191,1,0,0,0,193,194,1,0,0,0,194,199,1,0,0,
        0,195,193,1,0,0,0,196,198,5,59,0,0,197,196,1,0,0,0,198,201,1,0,0,
        0,199,197,1,0,0,0,199,200,1,0,0,0,200,205,1,0,0,0,201,199,1,0,0,
        0,202,204,8,3,0,0,203,202,1,0,0,0,204,207,1,0,0,0,205,203,1,0,0,
        0,205,206,1,0,0,0,206,208,1,0,0,0,207,205,1,0,0,0,208,209,6,9,1,
        0,209,21,1,0,0,0,210,211,3,32,15,0,211,23,1,0,0,0,212,213,7,4,0,
        0,213,25,1,0,0,0,214,217,3,24,11,0,215,217,3,12,5,0,216,214,1,0,
        0,0,216,215,1,0,0,0,217,27,1,0,0,0,218,221,3,26,12,0,219,221,7,5,
        0,0,220,218,1,0,0,0,220,219,1,0,0,0,221,29,1,0,0,0,222,225,3,28,
        13,0,223,225,7,6,0,0,224,222,1,0,0,0,224,223,1,0,0,0,225,31,1,0,
        0,0,226,230,3,28,13,0,227,229,3,30,14,0,228,227,1,0,0,0,229,232,
        1,0,0,0,230,228,1,0,0,0,230,231,1,0,0,0,231,33,1,0,0,0,232,230,1,
        0,0,0,233,235,7,7,0,0,234,233,1,0,0,0,235,236,1,0,0,0,236,234,1,
        0,0,0,236,237,1,0,0,0,237,238,1,0,0,0,238,239,6,16,2,0,239,35,1,
        0,0,0,240,242,7,3,0,0,241,240,1,0,0,0,242,243,1,0,0,0,243,241,1,
        0,0,0,243,244,1,0,0,0,244,37,1,0,0,0,245,249,5,123,0,0,246,248,5,
        32,0,0,247,246,1,0,0,0,248,251,1,0,0,0,249,247,1,0,0,0,249,250,1,
        0,0,0,250,260,1,0,0,0,251,249,1,0,0,0,252,261,3,6,2,0,253,256,3,
        32,15,0,254,256,5,32,0,0,255,253,1,0,0,0,255,254,1,0,0,0,256,259,
        1,0,0,0,257,258,1,0,0,0,257,255,1,0,0,0,258,261,1,0,0,0,259,257,
        1,0,0,0,260,252,1,0,0,0,260,257,1,0,0,0,261,265,1,0,0,0,262,264,
        5,32,0,0,263,262,1,0,0,0,264,267,1,0,0,0,265,263,1,0,0,0,265,266,
        1,0,0,0,266,268,1,0,0,0,267,265,1,0,0,0,268,269,5,125,0,0,269,39,
        1,0,0,0,270,296,7,8,0,0,271,273,5,47,0,0,272,274,5,47,0,0,273,272,
        1,0,0,0,274,275,1,0,0,0,275,273,1,0,0,0,275,276,1,0,0,0,276,296,
        1,0,0,0,277,279,5,42,0,0,278,280,5,42,0,0,279,278,1,0,0,0,280,281,
        1,0,0,0,281,279,1,0,0,0,281,282,1,0,0,0,282,296,1,0,0,0,283,285,
        5,61,0,0,284,286,5,61,0,0,285,284,1,0,0,0,286,287,1,0,0,0,287,285,
        1,0,0,0,287,288,1,0,0,0,288,296,1,0,0,0,289,290,5,82,0,0,290,291,
        5,69,0,0,291,292,5,77,0,0,292,293,5,65,0,0,293,294,5,82,0,0,294,
        296,5,75,0,0,295,270,1,0,0,0,295,271,1,0,0,0,295,277,1,0,0,0,295,
        283,1,0,0,0,295,289,1,0,0,0,296,300,1,0,0,0,297,299,5,32,0,0,298,
        297,1,0,0,0,299,302,1,0,0,0,300,298,1,0,0,0,300,301,1,0,0,0,301,
        303,1,0,0,0,302,300,1,0,0,0,303,304,3,36,17,0,304,305,1,0,0,0,305,
        306,6,19,1,0,306,41,1,0,0,0,307,333,7,8,0,0,308,310,5,47,0,0,309,
        311,5,47,0,0,310,309,1,0,0,0,311,312,1,0,0,0,312,310,1,0,0,0,312,
        313,1,0,0,0,313,333,1,0,0,0,314,316,5,42,0,0,315,317,5,42,0,0,316,
        315,1,0,0,0,317,318,1,0,0,0,318,316,1,0,0,0,318,319,1,0,0,0,319,
        333,1,0,0,0,320,322,5,61,0,0,321,323,5,61,0,0,322,321,1,0,0,0,323,
        324,1,0,0,0,324,322,1,0,0,0,324,325,1,0,0,0,325,333,1,0,0,0,326,
        327,5,82,0,0,327,328,5,69,0,0,328,329,5,77,0,0,329,330,5,65,0,0,
        330,331,5,82,0,0,331,333,5,75,0,0,332,307,1,0,0,0,332,308,1,0,0,
        0,332,314,1,0,0,0,332,320,1,0,0,0,332,326,1,0,0,0,333,337,1,0,0,
        0,334,336,8,3,0,0,335,334,1,0,0,0,336,339,1,0,0,0,337,335,1,0,0,
        0,337,338,1,0,0,0,338,340,1,0,0,0,339,337,1,0,0,0,340,341,3,36,17,
        0,341,342,1,0,0,0,342,343,6,20,1,0,343,43,1,0,0,0,344,345,5,100,
        0,0,345,346,5,97,0,0,346,347,5,116,0,0,347,348,5,97,0,0,348,349,
        5,115,0,0,349,350,5,101,0,0,350,351,5,116,0,0,351,45,1,0,0,0,352,
        353,5,115,0,0,353,354,5,119,0,0,354,47,1,0,0,0,355,356,5,115,0,0,
        356,357,5,102,0,0,357,49,1,0,0,0,358,359,5,99,0,0,359,360,5,111,
        0,0,360,361,5,110,0,0,361,362,5,100,0,0,362,363,5,105,0,0,363,364,
        5,116,0,0,364,365,5,105,0,0,365,366,5,111,0,0,366,367,5,110,0,0,
        367,51,1,0,0,0,368,369,3,22,10,0,369,370,5,46,0,0,370,371,5,76,0,
        0,371,53,1,0,0,0,372,373,3,22,10,0,373,374,5,46,0,0,374,375,5,80,
        0,0,375,55,1,0,0,0,376,377,3,22,10,0,377,378,5,46,0,0,378,379,5,
        87,0,0,379,57,1,0,0,0,380,381,3,22,10,0,381,382,5,46,0,0,382,383,
        5,66,0,0,383,59,1,0,0,0,384,385,3,22,10,0,385,386,5,46,0,0,386,387,
        5,69,0,0,387,61,1,0,0,0,388,389,3,22,10,0,389,390,5,46,0,0,390,391,
        5,74,0,0,391,63,1,0,0,0,392,393,3,22,10,0,393,394,5,46,0,0,394,395,
        5,85,0,0,395,65,1,0,0,0,396,397,5,118,0,0,397,398,5,111,0,0,398,
        399,5,108,0,0,399,67,1,0,0,0,400,401,5,105,0,0,401,402,5,110,0,0,
        402,403,5,116,0,0,403,69,1,0,0,0,404,405,5,115,0,0,405,406,5,116,
        0,0,406,407,5,97,0,0,407,408,5,116,0,0,408,71,1,0,0,0,409,410,5,
        99,0,0,410,411,5,111,0,0,411,412,5,109,0,0,412,413,5,109,0,0,413,
        414,5,101,0,0,414,415,5,110,0,0,415,416,5,116,0,0,416,73,1,0,0,0,
        417,418,5,102,0,0,418,419,5,108,0,0,419,420,5,97,0,0,420,421,5,103,
        0,0,421,422,5,48,0,0,422,426,1,0,0,0,423,425,5,32,0,0,424,423,1,
        0,0,0,425,428,1,0,0,0,426,424,1,0,0,0,426,427,1,0,0,0,427,443,1,
        0,0,0,428,426,1,0,0,0,429,430,5,102,0,0,430,431,5,108,0,0,431,432,
        5,97,0,0,432,433,5,103,0,0,433,434,1,0,0,0,434,438,7,9,0,0,435,437,
        5,32,0,0,436,435,1,0,0,0,437,440,1,0,0,0,438,436,1,0,0,0,438,439,
        1,0,0,0,439,442,1,0,0,0,440,438,1,0,0,0,441,429,1,0,0,0,442,445,
        1,0,0,0,443,441,1,0,0,0,443,444,1,0,0,0,444,447,1,0,0,0,445,443,
        1,0,0,0,446,448,7,3,0,0,447,446,1,0,0,0,448,449,1,0,0,0,449,447,
        1,0,0,0,449,450,1,0,0,0,450,451,1,0,0,0,451,452,6,36,3,0,452,75,
        1,0,0,0,453,454,3,32,15,0,454,77,1,0,0,0,455,456,3,6,2,0,456,79,
        1,0,0,0,457,459,7,7,0,0,458,457,1,0,0,0,459,460,1,0,0,0,460,458,
        1,0,0,0,460,461,1,0,0,0,461,462,1,0,0,0,462,463,6,39,2,0,463,81,
        1,0,0,0,464,466,7,3,0,0,465,464,1,0,0,0,466,467,1,0,0,0,467,465,
        1,0,0,0,467,468,1,0,0,0,468,83,1,0,0,0,469,473,5,123,0,0,470,472,
        5,32,0,0,471,470,1,0,0,0,472,475,1,0,0,0,473,471,1,0,0,0,473,474,
        1,0,0,0,474,484,1,0,0,0,475,473,1,0,0,0,476,485,3,6,2,0,477,480,
        3,32,15,0,478,480,5,32,0,0,479,477,1,0,0,0,479,478,1,0,0,0,480,483,
        1,0,0,0,481,482,1,0,0,0,481,479,1,0,0,0,482,485,1,0,0,0,483,481,
        1,0,0,0,484,476,1,0,0,0,484,481,1,0,0,0,485,489,1,0,0,0,486,488,
        5,32,0,0,487,486,1,0,0,0,488,491,1,0,0,0,489,487,1,0,0,0,489,490,
        1,0,0,0,490,492,1,0,0,0,491,489,1,0,0,0,492,493,5,125,0,0,493,85,
        1,0,0,0,55,0,1,95,100,104,107,111,115,118,126,133,138,143,149,155,
        163,168,174,180,188,193,199,205,216,220,224,230,236,243,249,255,
        257,260,265,275,281,287,295,300,312,318,324,332,337,426,438,443,
        449,460,467,473,479,481,484,489,4,5,1,0,0,1,0,6,0,0,4,0,0
    ]

class NmrViewPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LABEL_MODE = 1

    Label = 1
    Integer = 2
    Float = 3
    Real = 4
    SHARP_COMMENT = 5
    EXCLM_COMMENT = 6
    SMCLN_COMMENT = 7
    Simple_name = 8
    SPACE = 9
    RETURN = 10
    ENCLOSE_DATA = 11
    SECTION_COMMENT = 12
    LINE_COMMENT = 13
    Dataset = 14
    Sw = 15
    Sf = 16
    Condition = 17
    L_name = 18
    P_name = 19
    W_name = 20
    B_name = 21
    E_name = 22
    J_name = 23
    U_name = 24
    Vol = 25
    Int = 26
    Stat = 27
    Comment = 28
    Flag0 = 29
    Simple_name_LA = 30
    Float_LA = 31
    SPACE_LA = 32
    RETURN_LA = 33
    ENCLOSE_DATA_LA = 34

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "LABEL_MODE" ]

    literalNames = [ "<INVALID>",
            "'label'", "'dataset'", "'sw'", "'sf'", "'condition'", "'vol'", 
            "'int'", "'stat'", "'comment'" ]

    symbolicNames = [ "<INVALID>",
            "Label", "Integer", "Float", "Real", "SHARP_COMMENT", "EXCLM_COMMENT", 
            "SMCLN_COMMENT", "Simple_name", "SPACE", "RETURN", "ENCLOSE_DATA", 
            "SECTION_COMMENT", "LINE_COMMENT", "Dataset", "Sw", "Sf", "Condition", 
            "L_name", "P_name", "W_name", "B_name", "E_name", "J_name", 
            "U_name", "Vol", "Int", "Stat", "Comment", "Flag0", "Simple_name_LA", 
            "Float_LA", "SPACE_LA", "RETURN_LA", "ENCLOSE_DATA_LA" ]

    ruleNames = [ "Label", "Integer", "Float", "Real", "DEC_DOT_DEC", "DEC_DIGIT", 
                  "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", "SMCLN_COMMENT", 
                  "Simple_name", "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", 
                  "SIMPLE_NAME", "SPACE", "RETURN", "ENCLOSE_DATA", "SECTION_COMMENT", 
                  "LINE_COMMENT", "Dataset", "Sw", "Sf", "Condition", "L_name", 
                  "P_name", "W_name", "B_name", "E_name", "J_name", "U_name", 
                  "Vol", "Int", "Stat", "Comment", "Flag0", "Simple_name_LA", 
                  "Float_LA", "SPACE_LA", "RETURN_LA", "ENCLOSE_DATA_LA" ]

    grammarFileName = "NmrViewPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


