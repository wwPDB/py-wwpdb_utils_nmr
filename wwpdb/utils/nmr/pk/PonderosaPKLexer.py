# Generated from PonderosaPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,21,356,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,
        4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,
        12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,
        18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,
        25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,2,3,2,89,8,2,1,2,1,2,1,3,3,3,94,8,3,1,3,1,3,3,
        3,98,8,3,1,4,3,4,101,8,4,1,4,1,4,3,4,105,8,4,1,4,1,4,3,4,109,8,4,
        1,4,3,4,112,8,4,1,5,1,5,1,5,1,5,1,5,1,5,3,5,120,8,5,1,6,1,6,1,7,
        4,7,125,8,7,11,7,12,7,126,1,8,4,8,130,8,8,11,8,12,8,131,1,8,5,8,
        135,8,8,10,8,12,8,138,9,8,1,8,5,8,141,8,8,10,8,12,8,144,9,8,1,8,
        5,8,147,8,8,10,8,12,8,150,9,8,1,8,1,8,1,9,4,9,155,8,9,11,9,12,9,
        156,1,9,5,9,160,8,9,10,9,12,9,163,9,9,1,9,5,9,166,8,9,10,9,12,9,
        169,9,9,1,9,5,9,172,8,9,10,9,12,9,175,9,9,1,9,1,9,1,10,4,10,180,
        8,10,11,10,12,10,181,1,10,5,10,185,8,10,10,10,12,10,188,9,10,1,10,
        5,10,191,8,10,10,10,12,10,194,9,10,1,10,5,10,197,8,10,10,10,12,10,
        200,9,10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,3,13,210,8,13,1,
        14,1,14,3,14,214,8,14,1,15,1,15,3,15,218,8,15,1,16,1,16,5,16,222,
        8,16,10,16,12,16,225,9,16,1,17,4,17,228,8,17,11,17,12,17,229,1,17,
        1,17,1,18,4,18,235,8,18,11,18,12,18,236,1,19,1,19,1,20,1,20,1,20,
        4,20,244,8,20,11,20,12,20,245,1,20,1,20,4,20,250,8,20,11,20,12,20,
        251,1,20,1,20,4,20,256,8,20,11,20,12,20,257,1,20,1,20,1,20,1,20,
        1,20,1,20,3,20,266,8,20,1,20,5,20,269,8,20,10,20,12,20,272,9,20,
        1,20,1,20,1,20,1,20,1,21,1,21,1,21,4,21,281,8,21,11,21,12,21,282,
        1,21,1,21,4,21,287,8,21,11,21,12,21,288,1,21,1,21,4,21,293,8,21,
        11,21,12,21,294,1,21,1,21,1,21,1,21,1,21,1,21,3,21,303,8,21,1,21,
        5,21,306,8,21,10,21,12,21,309,9,21,1,21,1,21,1,21,1,21,1,22,3,22,
        316,8,22,1,22,1,22,1,23,1,23,1,24,4,24,323,8,24,11,24,12,24,324,
        1,24,1,24,1,25,4,25,330,8,25,11,25,12,25,331,1,25,1,25,1,26,3,26,
        337,8,26,1,26,1,26,1,27,1,27,1,28,4,28,344,8,28,11,28,12,28,345,
        1,28,1,28,1,29,4,29,351,8,29,11,29,12,29,352,1,29,1,29,0,0,30,3,
        1,5,2,7,3,9,4,11,5,13,0,15,0,17,0,19,6,21,7,23,8,25,9,27,0,29,0,
        31,0,33,0,35,0,37,10,39,11,41,0,43,12,45,13,47,14,49,15,51,16,53,
        17,55,18,57,19,59,20,61,21,3,0,1,2,9,2,0,43,43,45,45,2,0,69,69,101,
        101,1,0,48,57,2,0,10,10,13,13,2,0,65,90,97,122,6,0,40,40,42,43,45,
        46,63,63,95,95,123,123,8,0,34,35,37,37,39,39,41,41,44,44,47,47,59,
        59,124,125,2,0,9,9,32,32,7,0,33,33,35,35,38,38,42,42,47,47,61,61,
        92,92,393,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
        0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,37,1,
        0,0,0,0,39,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,1,47,1,0,0,0,1,49,1,
        0,0,0,1,51,1,0,0,0,1,53,1,0,0,0,2,55,1,0,0,0,2,57,1,0,0,0,2,59,1,
        0,0,0,2,61,1,0,0,0,3,63,1,0,0,0,5,75,1,0,0,0,7,88,1,0,0,0,9,93,1,
        0,0,0,11,100,1,0,0,0,13,119,1,0,0,0,15,121,1,0,0,0,17,124,1,0,0,
        0,19,129,1,0,0,0,21,154,1,0,0,0,23,179,1,0,0,0,25,203,1,0,0,0,27,
        205,1,0,0,0,29,209,1,0,0,0,31,213,1,0,0,0,33,217,1,0,0,0,35,219,
        1,0,0,0,37,227,1,0,0,0,39,234,1,0,0,0,41,238,1,0,0,0,43,265,1,0,
        0,0,45,302,1,0,0,0,47,315,1,0,0,0,49,319,1,0,0,0,51,322,1,0,0,0,
        53,329,1,0,0,0,55,336,1,0,0,0,57,340,1,0,0,0,59,343,1,0,0,0,61,350,
        1,0,0,0,63,64,5,78,0,0,64,65,5,79,0,0,65,66,5,69,0,0,66,67,5,83,
        0,0,67,68,5,89,0,0,68,69,5,84,0,0,69,70,5,89,0,0,70,71,5,80,0,0,
        71,72,5,69,0,0,72,73,1,0,0,0,73,74,6,0,0,0,74,4,1,0,0,0,75,76,5,
        65,0,0,76,77,5,88,0,0,77,78,5,73,0,0,78,79,5,83,0,0,79,80,5,79,0,
        0,80,81,5,82,0,0,81,82,5,68,0,0,82,83,5,69,0,0,83,84,5,82,0,0,84,
        85,1,0,0,0,85,86,6,1,1,0,86,6,1,0,0,0,87,89,7,0,0,0,88,87,1,0,0,
        0,88,89,1,0,0,0,89,90,1,0,0,0,90,91,3,17,7,0,91,8,1,0,0,0,92,94,
        7,0,0,0,93,92,1,0,0,0,93,94,1,0,0,0,94,97,1,0,0,0,95,98,3,17,7,0,
        96,98,3,13,5,0,97,95,1,0,0,0,97,96,1,0,0,0,98,10,1,0,0,0,99,101,
        7,0,0,0,100,99,1,0,0,0,100,101,1,0,0,0,101,104,1,0,0,0,102,105,3,
        17,7,0,103,105,3,13,5,0,104,102,1,0,0,0,104,103,1,0,0,0,105,111,
        1,0,0,0,106,108,7,1,0,0,107,109,7,0,0,0,108,107,1,0,0,0,108,109,
        1,0,0,0,109,110,1,0,0,0,110,112,3,17,7,0,111,106,1,0,0,0,111,112,
        1,0,0,0,112,12,1,0,0,0,113,114,3,17,7,0,114,115,5,46,0,0,115,116,
        3,17,7,0,116,120,1,0,0,0,117,118,5,46,0,0,118,120,3,17,7,0,119,113,
        1,0,0,0,119,117,1,0,0,0,120,14,1,0,0,0,121,122,7,2,0,0,122,16,1,
        0,0,0,123,125,3,15,6,0,124,123,1,0,0,0,125,126,1,0,0,0,126,124,1,
        0,0,0,126,127,1,0,0,0,127,18,1,0,0,0,128,130,5,35,0,0,129,128,1,
        0,0,0,130,131,1,0,0,0,131,129,1,0,0,0,131,132,1,0,0,0,132,136,1,
        0,0,0,133,135,8,3,0,0,134,133,1,0,0,0,135,138,1,0,0,0,136,134,1,
        0,0,0,136,137,1,0,0,0,137,142,1,0,0,0,138,136,1,0,0,0,139,141,5,
        35,0,0,140,139,1,0,0,0,141,144,1,0,0,0,142,140,1,0,0,0,142,143,1,
        0,0,0,143,148,1,0,0,0,144,142,1,0,0,0,145,147,8,3,0,0,146,145,1,
        0,0,0,147,150,1,0,0,0,148,146,1,0,0,0,148,149,1,0,0,0,149,151,1,
        0,0,0,150,148,1,0,0,0,151,152,6,8,2,0,152,20,1,0,0,0,153,155,5,33,
        0,0,154,153,1,0,0,0,155,156,1,0,0,0,156,154,1,0,0,0,156,157,1,0,
        0,0,157,161,1,0,0,0,158,160,8,3,0,0,159,158,1,0,0,0,160,163,1,0,
        0,0,161,159,1,0,0,0,161,162,1,0,0,0,162,167,1,0,0,0,163,161,1,0,
        0,0,164,166,5,33,0,0,165,164,1,0,0,0,166,169,1,0,0,0,167,165,1,0,
        0,0,167,168,1,0,0,0,168,173,1,0,0,0,169,167,1,0,0,0,170,172,8,3,
        0,0,171,170,1,0,0,0,172,175,1,0,0,0,173,171,1,0,0,0,173,174,1,0,
        0,0,174,176,1,0,0,0,175,173,1,0,0,0,176,177,6,9,2,0,177,22,1,0,0,
        0,178,180,5,59,0,0,179,178,1,0,0,0,180,181,1,0,0,0,181,179,1,0,0,
        0,181,182,1,0,0,0,182,186,1,0,0,0,183,185,8,3,0,0,184,183,1,0,0,
        0,185,188,1,0,0,0,186,184,1,0,0,0,186,187,1,0,0,0,187,192,1,0,0,
        0,188,186,1,0,0,0,189,191,5,59,0,0,190,189,1,0,0,0,191,194,1,0,0,
        0,192,190,1,0,0,0,192,193,1,0,0,0,193,198,1,0,0,0,194,192,1,0,0,
        0,195,197,8,3,0,0,196,195,1,0,0,0,197,200,1,0,0,0,198,196,1,0,0,
        0,198,199,1,0,0,0,199,201,1,0,0,0,200,198,1,0,0,0,201,202,6,10,2,
        0,202,24,1,0,0,0,203,204,3,35,16,0,204,26,1,0,0,0,205,206,7,4,0,
        0,206,28,1,0,0,0,207,210,3,27,12,0,208,210,3,15,6,0,209,207,1,0,
        0,0,209,208,1,0,0,0,210,30,1,0,0,0,211,214,3,29,13,0,212,214,7,5,
        0,0,213,211,1,0,0,0,213,212,1,0,0,0,214,32,1,0,0,0,215,218,3,31,
        14,0,216,218,7,6,0,0,217,215,1,0,0,0,217,216,1,0,0,0,218,34,1,0,
        0,0,219,223,3,31,14,0,220,222,3,33,15,0,221,220,1,0,0,0,222,225,
        1,0,0,0,223,221,1,0,0,0,223,224,1,0,0,0,224,36,1,0,0,0,225,223,1,
        0,0,0,226,228,7,7,0,0,227,226,1,0,0,0,228,229,1,0,0,0,229,227,1,
        0,0,0,229,230,1,0,0,0,230,231,1,0,0,0,231,232,6,17,3,0,232,38,1,
        0,0,0,233,235,7,3,0,0,234,233,1,0,0,0,235,236,1,0,0,0,236,234,1,
        0,0,0,236,237,1,0,0,0,237,40,1,0,0,0,238,239,7,8,0,0,239,42,1,0,
        0,0,240,266,3,41,19,0,241,243,3,41,19,0,242,244,5,47,0,0,243,242,
        1,0,0,0,244,245,1,0,0,0,245,243,1,0,0,0,245,246,1,0,0,0,246,266,
        1,0,0,0,247,249,3,41,19,0,248,250,5,42,0,0,249,248,1,0,0,0,250,251,
        1,0,0,0,251,249,1,0,0,0,251,252,1,0,0,0,252,266,1,0,0,0,253,255,
        3,41,19,0,254,256,5,61,0,0,255,254,1,0,0,0,256,257,1,0,0,0,257,255,
        1,0,0,0,257,258,1,0,0,0,258,266,1,0,0,0,259,260,5,82,0,0,260,261,
        5,69,0,0,261,262,5,77,0,0,262,263,5,65,0,0,263,264,5,82,0,0,264,
        266,5,75,0,0,265,240,1,0,0,0,265,241,1,0,0,0,265,247,1,0,0,0,265,
        253,1,0,0,0,265,259,1,0,0,0,266,270,1,0,0,0,267,269,5,32,0,0,268,
        267,1,0,0,0,269,272,1,0,0,0,270,268,1,0,0,0,270,271,1,0,0,0,271,
        273,1,0,0,0,272,270,1,0,0,0,273,274,3,39,18,0,274,275,1,0,0,0,275,
        276,6,20,2,0,276,44,1,0,0,0,277,303,3,41,19,0,278,280,3,41,19,0,
        279,281,5,47,0,0,280,279,1,0,0,0,281,282,1,0,0,0,282,280,1,0,0,0,
        282,283,1,0,0,0,283,303,1,0,0,0,284,286,3,41,19,0,285,287,5,42,0,
        0,286,285,1,0,0,0,287,288,1,0,0,0,288,286,1,0,0,0,288,289,1,0,0,
        0,289,303,1,0,0,0,290,292,3,41,19,0,291,293,5,61,0,0,292,291,1,0,
        0,0,293,294,1,0,0,0,294,292,1,0,0,0,294,295,1,0,0,0,295,303,1,0,
        0,0,296,297,5,82,0,0,297,298,5,69,0,0,298,299,5,77,0,0,299,300,5,
        65,0,0,300,301,5,82,0,0,301,303,5,75,0,0,302,277,1,0,0,0,302,278,
        1,0,0,0,302,284,1,0,0,0,302,290,1,0,0,0,302,296,1,0,0,0,303,307,
        1,0,0,0,304,306,8,3,0,0,305,304,1,0,0,0,306,309,1,0,0,0,307,305,
        1,0,0,0,307,308,1,0,0,0,308,310,1,0,0,0,309,307,1,0,0,0,310,311,
        3,39,18,0,311,312,1,0,0,0,312,313,6,21,2,0,313,46,1,0,0,0,314,316,
        7,0,0,0,315,314,1,0,0,0,315,316,1,0,0,0,316,317,1,0,0,0,317,318,
        3,17,7,0,318,48,1,0,0,0,319,320,3,35,16,0,320,50,1,0,0,0,321,323,
        7,7,0,0,322,321,1,0,0,0,323,324,1,0,0,0,324,322,1,0,0,0,324,325,
        1,0,0,0,325,326,1,0,0,0,326,327,6,24,3,0,327,52,1,0,0,0,328,330,
        7,3,0,0,329,328,1,0,0,0,330,331,1,0,0,0,331,329,1,0,0,0,331,332,
        1,0,0,0,332,333,1,0,0,0,333,334,6,25,4,0,334,54,1,0,0,0,335,337,
        7,0,0,0,336,335,1,0,0,0,336,337,1,0,0,0,337,338,1,0,0,0,338,339,
        3,17,7,0,339,56,1,0,0,0,340,341,3,35,16,0,341,58,1,0,0,0,342,344,
        7,7,0,0,343,342,1,0,0,0,344,345,1,0,0,0,345,343,1,0,0,0,345,346,
        1,0,0,0,346,347,1,0,0,0,347,348,6,28,3,0,348,60,1,0,0,0,349,351,
        7,3,0,0,350,349,1,0,0,0,351,352,1,0,0,0,352,350,1,0,0,0,352,353,
        1,0,0,0,353,354,1,0,0,0,354,355,6,29,4,0,355,62,1,0,0,0,46,0,1,2,
        88,93,97,100,104,108,111,119,126,131,136,142,148,156,161,167,173,
        181,186,192,198,209,213,217,223,229,236,245,251,257,265,270,282,
        288,294,302,307,315,324,331,336,345,352,5,5,1,0,5,2,0,0,1,0,6,0,
        0,4,0,0
    ]

class PonderosaPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NT_MODE = 1
    AO_MODE = 2

    Noesy_type = 1
    Axis_order = 2
    Integer = 3
    Float = 4
    Real = 5
    SHARP_COMMENT = 6
    EXCLM_COMMENT = 7
    SMCLN_COMMENT = 8
    Simple_name = 9
    SPACE = 10
    RETURN = 11
    SECTION_COMMENT = 12
    LINE_COMMENT = 13
    Integer_NT = 14
    Simple_name_NT = 15
    SPACE_NT = 16
    RETURN_NT = 17
    Integer_AO = 18
    Simple_name_AO = 19
    SPACE_AO = 20
    RETURN_AO = 21

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "NT_MODE", "AO_MODE" ]

    literalNames = [ "<INVALID>",
            "'NOESYTYPE'", "'AXISORDER'" ]

    symbolicNames = [ "<INVALID>",
            "Noesy_type", "Axis_order", "Integer", "Float", "Real", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Simple_name", "SPACE", "RETURN", 
            "SECTION_COMMENT", "LINE_COMMENT", "Integer_NT", "Simple_name_NT", 
            "SPACE_NT", "RETURN_NT", "Integer_AO", "Simple_name_AO", "SPACE_AO", 
            "RETURN_AO" ]

    ruleNames = [ "Noesy_type", "Axis_order", "Integer", "Float", "Real", 
                  "DEC_DOT_DEC", "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", 
                  "EXCLM_COMMENT", "SMCLN_COMMENT", "Simple_name", "ALPHA", 
                  "ALPHA_NUM", "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", 
                  "SPACE", "RETURN", "COMMENT_START_CHAR", "SECTION_COMMENT", 
                  "LINE_COMMENT", "Integer_NT", "Simple_name_NT", "SPACE_NT", 
                  "RETURN_NT", "Integer_AO", "Simple_name_AO", "SPACE_AO", 
                  "RETURN_AO" ]

    grammarFileName = "PonderosaPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


