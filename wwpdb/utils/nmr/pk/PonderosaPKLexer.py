# Generated from PonderosaPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,22,370,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,
        4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,
        12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,
        18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,
        25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,2,91,8,2,1,2,1,2,1,3,3,3,96,8,3,
        1,3,1,3,3,3,100,8,3,1,4,3,4,103,8,4,1,4,1,4,3,4,107,8,4,1,4,1,4,
        3,4,111,8,4,1,4,3,4,114,8,4,1,5,1,5,1,5,1,5,1,5,1,5,3,5,122,8,5,
        1,6,1,6,1,7,4,7,127,8,7,11,7,12,7,128,1,8,4,8,132,8,8,11,8,12,8,
        133,1,8,5,8,137,8,8,10,8,12,8,140,9,8,1,8,5,8,143,8,8,10,8,12,8,
        146,9,8,1,8,5,8,149,8,8,10,8,12,8,152,9,8,1,8,1,8,1,9,4,9,157,8,
        9,11,9,12,9,158,1,9,5,9,162,8,9,10,9,12,9,165,9,9,1,9,5,9,168,8,
        9,10,9,12,9,171,9,9,1,9,5,9,174,8,9,10,9,12,9,177,9,9,1,9,1,9,1,
        10,4,10,182,8,10,11,10,12,10,183,1,10,5,10,187,8,10,10,10,12,10,
        190,9,10,1,10,5,10,193,8,10,10,10,12,10,196,9,10,1,10,5,10,199,8,
        10,10,10,12,10,202,9,10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,
        3,13,212,8,13,1,14,1,14,3,14,216,8,14,1,15,1,15,3,15,220,8,15,1,
        16,1,16,5,16,224,8,16,10,16,12,16,227,9,16,1,17,4,17,230,8,17,11,
        17,12,17,231,1,17,1,17,1,18,4,18,237,8,18,11,18,12,18,238,1,19,1,
        19,1,20,1,20,1,20,5,20,246,8,20,10,20,12,20,249,9,20,1,20,1,20,1,
        20,1,20,1,21,1,21,1,21,4,21,258,8,21,11,21,12,21,259,1,21,1,21,4,
        21,264,8,21,11,21,12,21,265,1,21,1,21,4,21,270,8,21,11,21,12,21,
        271,1,21,1,21,1,21,1,21,1,21,1,21,3,21,280,8,21,1,21,5,21,283,8,
        21,10,21,12,21,286,9,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,4,22,
        295,8,22,11,22,12,22,296,1,22,1,22,4,22,301,8,22,11,22,12,22,302,
        1,22,1,22,4,22,307,8,22,11,22,12,22,308,1,22,1,22,1,22,1,22,1,22,
        1,22,3,22,317,8,22,1,22,5,22,320,8,22,10,22,12,22,323,9,22,1,22,
        1,22,1,22,1,22,1,23,3,23,330,8,23,1,23,1,23,1,24,1,24,1,25,4,25,
        337,8,25,11,25,12,25,338,1,25,1,25,1,26,4,26,344,8,26,11,26,12,26,
        345,1,26,1,26,1,27,3,27,351,8,27,1,27,1,27,1,28,1,28,1,29,4,29,358,
        8,29,11,29,12,29,359,1,29,1,29,1,30,4,30,365,8,30,11,30,12,30,366,
        1,30,1,30,1,247,0,31,3,1,5,2,7,3,9,4,11,5,13,0,15,0,17,0,19,6,21,
        7,23,8,25,9,27,0,29,0,31,0,33,0,35,0,37,10,39,11,41,0,43,12,45,13,
        47,14,49,15,51,16,53,17,55,18,57,19,59,20,61,21,63,22,3,0,1,2,9,
        2,0,43,43,45,45,2,0,69,69,101,101,1,0,48,57,2,0,10,10,13,13,2,0,
        65,90,97,122,4,0,42,43,45,46,63,63,95,95,3,0,34,34,39,39,59,59,2,
        0,9,9,32,32,7,0,33,33,35,35,38,38,42,42,47,47,61,61,92,92,409,0,
        3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,37,1,0,0,0,0,39,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,1,49,1,0,0,0,1,51,
        1,0,0,0,1,53,1,0,0,0,1,55,1,0,0,0,2,57,1,0,0,0,2,59,1,0,0,0,2,61,
        1,0,0,0,2,63,1,0,0,0,3,65,1,0,0,0,5,77,1,0,0,0,7,90,1,0,0,0,9,95,
        1,0,0,0,11,102,1,0,0,0,13,121,1,0,0,0,15,123,1,0,0,0,17,126,1,0,
        0,0,19,131,1,0,0,0,21,156,1,0,0,0,23,181,1,0,0,0,25,205,1,0,0,0,
        27,207,1,0,0,0,29,211,1,0,0,0,31,215,1,0,0,0,33,219,1,0,0,0,35,221,
        1,0,0,0,37,229,1,0,0,0,39,236,1,0,0,0,41,240,1,0,0,0,43,242,1,0,
        0,0,45,279,1,0,0,0,47,316,1,0,0,0,49,329,1,0,0,0,51,333,1,0,0,0,
        53,336,1,0,0,0,55,343,1,0,0,0,57,350,1,0,0,0,59,354,1,0,0,0,61,357,
        1,0,0,0,63,364,1,0,0,0,65,66,5,78,0,0,66,67,5,79,0,0,67,68,5,69,
        0,0,68,69,5,83,0,0,69,70,5,89,0,0,70,71,5,84,0,0,71,72,5,89,0,0,
        72,73,5,80,0,0,73,74,5,69,0,0,74,75,1,0,0,0,75,76,6,0,0,0,76,4,1,
        0,0,0,77,78,5,65,0,0,78,79,5,88,0,0,79,80,5,73,0,0,80,81,5,83,0,
        0,81,82,5,79,0,0,82,83,5,82,0,0,83,84,5,68,0,0,84,85,5,69,0,0,85,
        86,5,82,0,0,86,87,1,0,0,0,87,88,6,1,1,0,88,6,1,0,0,0,89,91,7,0,0,
        0,90,89,1,0,0,0,90,91,1,0,0,0,91,92,1,0,0,0,92,93,3,17,7,0,93,8,
        1,0,0,0,94,96,7,0,0,0,95,94,1,0,0,0,95,96,1,0,0,0,96,99,1,0,0,0,
        97,100,3,17,7,0,98,100,3,13,5,0,99,97,1,0,0,0,99,98,1,0,0,0,100,
        10,1,0,0,0,101,103,7,0,0,0,102,101,1,0,0,0,102,103,1,0,0,0,103,106,
        1,0,0,0,104,107,3,17,7,0,105,107,3,13,5,0,106,104,1,0,0,0,106,105,
        1,0,0,0,107,113,1,0,0,0,108,110,7,1,0,0,109,111,7,0,0,0,110,109,
        1,0,0,0,110,111,1,0,0,0,111,112,1,0,0,0,112,114,3,17,7,0,113,108,
        1,0,0,0,113,114,1,0,0,0,114,12,1,0,0,0,115,116,3,17,7,0,116,117,
        5,46,0,0,117,118,3,17,7,0,118,122,1,0,0,0,119,120,5,46,0,0,120,122,
        3,17,7,0,121,115,1,0,0,0,121,119,1,0,0,0,122,14,1,0,0,0,123,124,
        7,2,0,0,124,16,1,0,0,0,125,127,3,15,6,0,126,125,1,0,0,0,127,128,
        1,0,0,0,128,126,1,0,0,0,128,129,1,0,0,0,129,18,1,0,0,0,130,132,5,
        35,0,0,131,130,1,0,0,0,132,133,1,0,0,0,133,131,1,0,0,0,133,134,1,
        0,0,0,134,138,1,0,0,0,135,137,8,3,0,0,136,135,1,0,0,0,137,140,1,
        0,0,0,138,136,1,0,0,0,138,139,1,0,0,0,139,144,1,0,0,0,140,138,1,
        0,0,0,141,143,5,35,0,0,142,141,1,0,0,0,143,146,1,0,0,0,144,142,1,
        0,0,0,144,145,1,0,0,0,145,150,1,0,0,0,146,144,1,0,0,0,147,149,8,
        3,0,0,148,147,1,0,0,0,149,152,1,0,0,0,150,148,1,0,0,0,150,151,1,
        0,0,0,151,153,1,0,0,0,152,150,1,0,0,0,153,154,6,8,2,0,154,20,1,0,
        0,0,155,157,5,33,0,0,156,155,1,0,0,0,157,158,1,0,0,0,158,156,1,0,
        0,0,158,159,1,0,0,0,159,163,1,0,0,0,160,162,8,3,0,0,161,160,1,0,
        0,0,162,165,1,0,0,0,163,161,1,0,0,0,163,164,1,0,0,0,164,169,1,0,
        0,0,165,163,1,0,0,0,166,168,5,33,0,0,167,166,1,0,0,0,168,171,1,0,
        0,0,169,167,1,0,0,0,169,170,1,0,0,0,170,175,1,0,0,0,171,169,1,0,
        0,0,172,174,8,3,0,0,173,172,1,0,0,0,174,177,1,0,0,0,175,173,1,0,
        0,0,175,176,1,0,0,0,176,178,1,0,0,0,177,175,1,0,0,0,178,179,6,9,
        2,0,179,22,1,0,0,0,180,182,5,59,0,0,181,180,1,0,0,0,182,183,1,0,
        0,0,183,181,1,0,0,0,183,184,1,0,0,0,184,188,1,0,0,0,185,187,8,3,
        0,0,186,185,1,0,0,0,187,190,1,0,0,0,188,186,1,0,0,0,188,189,1,0,
        0,0,189,194,1,0,0,0,190,188,1,0,0,0,191,193,5,59,0,0,192,191,1,0,
        0,0,193,196,1,0,0,0,194,192,1,0,0,0,194,195,1,0,0,0,195,200,1,0,
        0,0,196,194,1,0,0,0,197,199,8,3,0,0,198,197,1,0,0,0,199,202,1,0,
        0,0,200,198,1,0,0,0,200,201,1,0,0,0,201,203,1,0,0,0,202,200,1,0,
        0,0,203,204,6,10,2,0,204,24,1,0,0,0,205,206,3,35,16,0,206,26,1,0,
        0,0,207,208,7,4,0,0,208,28,1,0,0,0,209,212,3,27,12,0,210,212,3,15,
        6,0,211,209,1,0,0,0,211,210,1,0,0,0,212,30,1,0,0,0,213,216,3,29,
        13,0,214,216,7,5,0,0,215,213,1,0,0,0,215,214,1,0,0,0,216,32,1,0,
        0,0,217,220,3,31,14,0,218,220,7,6,0,0,219,217,1,0,0,0,219,218,1,
        0,0,0,220,34,1,0,0,0,221,225,3,31,14,0,222,224,3,33,15,0,223,222,
        1,0,0,0,224,227,1,0,0,0,225,223,1,0,0,0,225,226,1,0,0,0,226,36,1,
        0,0,0,227,225,1,0,0,0,228,230,7,7,0,0,229,228,1,0,0,0,230,231,1,
        0,0,0,231,229,1,0,0,0,231,232,1,0,0,0,232,233,1,0,0,0,233,234,6,
        17,3,0,234,38,1,0,0,0,235,237,7,3,0,0,236,235,1,0,0,0,237,238,1,
        0,0,0,238,236,1,0,0,0,238,239,1,0,0,0,239,40,1,0,0,0,240,241,7,8,
        0,0,241,42,1,0,0,0,242,247,5,123,0,0,243,246,3,43,20,0,244,246,9,
        0,0,0,245,243,1,0,0,0,245,244,1,0,0,0,246,249,1,0,0,0,247,248,1,
        0,0,0,247,245,1,0,0,0,248,250,1,0,0,0,249,247,1,0,0,0,250,251,5,
        125,0,0,251,252,1,0,0,0,252,253,6,20,2,0,253,44,1,0,0,0,254,280,
        3,41,19,0,255,257,3,41,19,0,256,258,5,47,0,0,257,256,1,0,0,0,258,
        259,1,0,0,0,259,257,1,0,0,0,259,260,1,0,0,0,260,280,1,0,0,0,261,
        263,3,41,19,0,262,264,5,42,0,0,263,262,1,0,0,0,264,265,1,0,0,0,265,
        263,1,0,0,0,265,266,1,0,0,0,266,280,1,0,0,0,267,269,3,41,19,0,268,
        270,5,61,0,0,269,268,1,0,0,0,270,271,1,0,0,0,271,269,1,0,0,0,271,
        272,1,0,0,0,272,280,1,0,0,0,273,274,5,82,0,0,274,275,5,69,0,0,275,
        276,5,77,0,0,276,277,5,65,0,0,277,278,5,82,0,0,278,280,5,75,0,0,
        279,254,1,0,0,0,279,255,1,0,0,0,279,261,1,0,0,0,279,267,1,0,0,0,
        279,273,1,0,0,0,280,284,1,0,0,0,281,283,5,32,0,0,282,281,1,0,0,0,
        283,286,1,0,0,0,284,282,1,0,0,0,284,285,1,0,0,0,285,287,1,0,0,0,
        286,284,1,0,0,0,287,288,3,39,18,0,288,289,1,0,0,0,289,290,6,21,2,
        0,290,46,1,0,0,0,291,317,3,41,19,0,292,294,3,41,19,0,293,295,5,47,
        0,0,294,293,1,0,0,0,295,296,1,0,0,0,296,294,1,0,0,0,296,297,1,0,
        0,0,297,317,1,0,0,0,298,300,3,41,19,0,299,301,5,42,0,0,300,299,1,
        0,0,0,301,302,1,0,0,0,302,300,1,0,0,0,302,303,1,0,0,0,303,317,1,
        0,0,0,304,306,3,41,19,0,305,307,5,61,0,0,306,305,1,0,0,0,307,308,
        1,0,0,0,308,306,1,0,0,0,308,309,1,0,0,0,309,317,1,0,0,0,310,311,
        5,82,0,0,311,312,5,69,0,0,312,313,5,77,0,0,313,314,5,65,0,0,314,
        315,5,82,0,0,315,317,5,75,0,0,316,291,1,0,0,0,316,292,1,0,0,0,316,
        298,1,0,0,0,316,304,1,0,0,0,316,310,1,0,0,0,317,321,1,0,0,0,318,
        320,8,3,0,0,319,318,1,0,0,0,320,323,1,0,0,0,321,319,1,0,0,0,321,
        322,1,0,0,0,322,324,1,0,0,0,323,321,1,0,0,0,324,325,3,39,18,0,325,
        326,1,0,0,0,326,327,6,22,2,0,327,48,1,0,0,0,328,330,7,0,0,0,329,
        328,1,0,0,0,329,330,1,0,0,0,330,331,1,0,0,0,331,332,3,17,7,0,332,
        50,1,0,0,0,333,334,3,35,16,0,334,52,1,0,0,0,335,337,7,7,0,0,336,
        335,1,0,0,0,337,338,1,0,0,0,338,336,1,0,0,0,338,339,1,0,0,0,339,
        340,1,0,0,0,340,341,6,25,3,0,341,54,1,0,0,0,342,344,7,3,0,0,343,
        342,1,0,0,0,344,345,1,0,0,0,345,343,1,0,0,0,345,346,1,0,0,0,346,
        347,1,0,0,0,347,348,6,26,4,0,348,56,1,0,0,0,349,351,7,0,0,0,350,
        349,1,0,0,0,350,351,1,0,0,0,351,352,1,0,0,0,352,353,3,17,7,0,353,
        58,1,0,0,0,354,355,3,35,16,0,355,60,1,0,0,0,356,358,7,7,0,0,357,
        356,1,0,0,0,358,359,1,0,0,0,359,357,1,0,0,0,359,360,1,0,0,0,360,
        361,1,0,0,0,361,362,6,29,3,0,362,62,1,0,0,0,363,365,7,3,0,0,364,
        363,1,0,0,0,365,366,1,0,0,0,366,364,1,0,0,0,366,367,1,0,0,0,367,
        368,1,0,0,0,368,369,6,30,4,0,369,64,1,0,0,0,48,0,1,2,90,95,99,102,
        106,110,113,121,128,133,138,144,150,158,163,169,175,183,188,194,
        200,211,215,219,225,231,238,245,247,259,265,271,279,284,296,302,
        308,316,321,329,338,345,350,359,366,5,5,1,0,5,2,0,0,1,0,6,0,0,4,
        0,0
    ]

class PonderosaPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NT_MODE = 1
    AO_MODE = 2

    Noesy_type = 1
    Axis_order = 2
    Integer = 3
    Float = 4
    Real = 5
    SHARP_COMMENT = 6
    EXCLM_COMMENT = 7
    SMCLN_COMMENT = 8
    Simple_name = 9
    SPACE = 10
    RETURN = 11
    ENCLOSE_COMMENT = 12
    SECTION_COMMENT = 13
    LINE_COMMENT = 14
    Integer_NT = 15
    Simple_name_NT = 16
    SPACE_NT = 17
    RETURN_NT = 18
    Integer_AO = 19
    Simple_name_AO = 20
    SPACE_AO = 21
    RETURN_AO = 22

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "NT_MODE", "AO_MODE" ]

    literalNames = [ "<INVALID>",
            "'NOESYTYPE'", "'AXISORDER'" ]

    symbolicNames = [ "<INVALID>",
            "Noesy_type", "Axis_order", "Integer", "Float", "Real", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Simple_name", "SPACE", "RETURN", 
            "ENCLOSE_COMMENT", "SECTION_COMMENT", "LINE_COMMENT", "Integer_NT", 
            "Simple_name_NT", "SPACE_NT", "RETURN_NT", "Integer_AO", "Simple_name_AO", 
            "SPACE_AO", "RETURN_AO" ]

    ruleNames = [ "Noesy_type", "Axis_order", "Integer", "Float", "Real", 
                  "DEC_DOT_DEC", "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", 
                  "EXCLM_COMMENT", "SMCLN_COMMENT", "Simple_name", "ALPHA", 
                  "ALPHA_NUM", "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", 
                  "SPACE", "RETURN", "COMMENT_START_CHAR", "ENCLOSE_COMMENT", 
                  "SECTION_COMMENT", "LINE_COMMENT", "Integer_NT", "Simple_name_NT", 
                  "SPACE_NT", "RETURN_NT", "Integer_AO", "Simple_name_AO", 
                  "SPACE_AO", "RETURN_AO" ]

    grammarFileName = "PonderosaPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


