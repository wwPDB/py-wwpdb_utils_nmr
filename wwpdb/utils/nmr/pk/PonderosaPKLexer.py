# Generated from PonderosaPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,20,332,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,
        4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,
        12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,
        18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,
        25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,2,3,2,87,8,2,1,2,1,2,1,3,3,3,92,8,3,1,3,1,3,3,3,96,8,3,1,
        4,3,4,99,8,4,1,4,1,4,3,4,103,8,4,1,4,1,4,3,4,107,8,4,1,4,3,4,110,
        8,4,1,5,1,5,1,5,1,5,1,5,1,5,3,5,118,8,5,1,6,1,6,1,7,4,7,123,8,7,
        11,7,12,7,124,1,8,4,8,128,8,8,11,8,12,8,129,1,8,5,8,133,8,8,10,8,
        12,8,136,9,8,1,8,5,8,139,8,8,10,8,12,8,142,9,8,1,8,5,8,145,8,8,10,
        8,12,8,148,9,8,1,8,1,8,1,9,4,9,153,8,9,11,9,12,9,154,1,9,5,9,158,
        8,9,10,9,12,9,161,9,9,1,9,5,9,164,8,9,10,9,12,9,167,9,9,1,9,5,9,
        170,8,9,10,9,12,9,173,9,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,
        3,12,183,8,12,1,13,1,13,3,13,187,8,13,1,14,1,14,3,14,191,8,14,1,
        15,1,15,5,15,195,8,15,10,15,12,15,198,9,15,1,16,4,16,201,8,16,11,
        16,12,16,202,1,16,1,16,1,17,4,17,208,8,17,11,17,12,17,209,1,18,1,
        18,1,19,1,19,1,19,1,19,4,19,218,8,19,11,19,12,19,219,1,19,1,19,4,
        19,224,8,19,11,19,12,19,225,1,19,1,19,4,19,230,8,19,11,19,12,19,
        231,1,19,1,19,1,19,1,19,1,19,1,19,3,19,240,8,19,1,19,5,19,243,8,
        19,10,19,12,19,246,9,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,
        1,20,4,20,257,8,20,11,20,12,20,258,1,20,1,20,4,20,263,8,20,11,20,
        12,20,264,1,20,1,20,4,20,269,8,20,11,20,12,20,270,1,20,1,20,1,20,
        1,20,1,20,1,20,3,20,279,8,20,1,20,5,20,282,8,20,10,20,12,20,285,
        9,20,1,20,1,20,1,20,1,20,1,21,3,21,292,8,21,1,21,1,21,1,22,1,22,
        1,23,4,23,299,8,23,11,23,12,23,300,1,23,1,23,1,24,4,24,306,8,24,
        11,24,12,24,307,1,24,1,24,1,25,3,25,313,8,25,1,25,1,25,1,26,1,26,
        1,27,4,27,320,8,27,11,27,12,27,321,1,27,1,27,1,28,4,28,327,8,28,
        11,28,12,28,328,1,28,1,28,0,0,29,3,1,5,2,7,3,9,4,11,5,13,0,15,0,
        17,0,19,6,21,7,23,8,25,0,27,0,29,0,31,0,33,0,35,9,37,10,39,0,41,
        11,43,12,45,13,47,14,49,15,51,16,53,17,55,18,57,19,59,20,3,0,1,2,
        9,2,0,43,43,45,45,2,0,69,69,101,101,1,0,48,57,2,0,10,10,13,13,2,
        0,65,90,97,122,6,0,40,40,42,43,45,46,63,63,95,95,123,123,8,0,34,
        35,37,37,39,39,41,41,44,44,47,47,59,59,124,125,2,0,9,9,32,32,6,0,
        33,33,38,38,42,42,47,47,61,61,92,92,367,0,3,1,0,0,0,0,5,1,0,0,0,
        0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,
        23,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,1,
        45,1,0,0,0,1,47,1,0,0,0,1,49,1,0,0,0,1,51,1,0,0,0,2,53,1,0,0,0,2,
        55,1,0,0,0,2,57,1,0,0,0,2,59,1,0,0,0,3,61,1,0,0,0,5,73,1,0,0,0,7,
        86,1,0,0,0,9,91,1,0,0,0,11,98,1,0,0,0,13,117,1,0,0,0,15,119,1,0,
        0,0,17,122,1,0,0,0,19,127,1,0,0,0,21,152,1,0,0,0,23,176,1,0,0,0,
        25,178,1,0,0,0,27,182,1,0,0,0,29,186,1,0,0,0,31,190,1,0,0,0,33,192,
        1,0,0,0,35,200,1,0,0,0,37,207,1,0,0,0,39,211,1,0,0,0,41,239,1,0,
        0,0,43,278,1,0,0,0,45,291,1,0,0,0,47,295,1,0,0,0,49,298,1,0,0,0,
        51,305,1,0,0,0,53,312,1,0,0,0,55,316,1,0,0,0,57,319,1,0,0,0,59,326,
        1,0,0,0,61,62,5,78,0,0,62,63,5,79,0,0,63,64,5,69,0,0,64,65,5,83,
        0,0,65,66,5,89,0,0,66,67,5,84,0,0,67,68,5,89,0,0,68,69,5,80,0,0,
        69,70,5,69,0,0,70,71,1,0,0,0,71,72,6,0,0,0,72,4,1,0,0,0,73,74,5,
        65,0,0,74,75,5,88,0,0,75,76,5,73,0,0,76,77,5,83,0,0,77,78,5,79,0,
        0,78,79,5,82,0,0,79,80,5,68,0,0,80,81,5,69,0,0,81,82,5,82,0,0,82,
        83,1,0,0,0,83,84,6,1,1,0,84,6,1,0,0,0,85,87,7,0,0,0,86,85,1,0,0,
        0,86,87,1,0,0,0,87,88,1,0,0,0,88,89,3,17,7,0,89,8,1,0,0,0,90,92,
        7,0,0,0,91,90,1,0,0,0,91,92,1,0,0,0,92,95,1,0,0,0,93,96,3,17,7,0,
        94,96,3,13,5,0,95,93,1,0,0,0,95,94,1,0,0,0,96,10,1,0,0,0,97,99,7,
        0,0,0,98,97,1,0,0,0,98,99,1,0,0,0,99,102,1,0,0,0,100,103,3,17,7,
        0,101,103,3,13,5,0,102,100,1,0,0,0,102,101,1,0,0,0,103,109,1,0,0,
        0,104,106,7,1,0,0,105,107,7,0,0,0,106,105,1,0,0,0,106,107,1,0,0,
        0,107,108,1,0,0,0,108,110,3,17,7,0,109,104,1,0,0,0,109,110,1,0,0,
        0,110,12,1,0,0,0,111,112,3,17,7,0,112,113,5,46,0,0,113,114,3,17,
        7,0,114,118,1,0,0,0,115,116,5,46,0,0,116,118,3,17,7,0,117,111,1,
        0,0,0,117,115,1,0,0,0,118,14,1,0,0,0,119,120,7,2,0,0,120,16,1,0,
        0,0,121,123,3,15,6,0,122,121,1,0,0,0,123,124,1,0,0,0,124,122,1,0,
        0,0,124,125,1,0,0,0,125,18,1,0,0,0,126,128,5,33,0,0,127,126,1,0,
        0,0,128,129,1,0,0,0,129,127,1,0,0,0,129,130,1,0,0,0,130,134,1,0,
        0,0,131,133,8,3,0,0,132,131,1,0,0,0,133,136,1,0,0,0,134,132,1,0,
        0,0,134,135,1,0,0,0,135,140,1,0,0,0,136,134,1,0,0,0,137,139,5,33,
        0,0,138,137,1,0,0,0,139,142,1,0,0,0,140,138,1,0,0,0,140,141,1,0,
        0,0,141,146,1,0,0,0,142,140,1,0,0,0,143,145,8,3,0,0,144,143,1,0,
        0,0,145,148,1,0,0,0,146,144,1,0,0,0,146,147,1,0,0,0,147,149,1,0,
        0,0,148,146,1,0,0,0,149,150,6,8,2,0,150,20,1,0,0,0,151,153,5,59,
        0,0,152,151,1,0,0,0,153,154,1,0,0,0,154,152,1,0,0,0,154,155,1,0,
        0,0,155,159,1,0,0,0,156,158,8,3,0,0,157,156,1,0,0,0,158,161,1,0,
        0,0,159,157,1,0,0,0,159,160,1,0,0,0,160,165,1,0,0,0,161,159,1,0,
        0,0,162,164,5,59,0,0,163,162,1,0,0,0,164,167,1,0,0,0,165,163,1,0,
        0,0,165,166,1,0,0,0,166,171,1,0,0,0,167,165,1,0,0,0,168,170,8,3,
        0,0,169,168,1,0,0,0,170,173,1,0,0,0,171,169,1,0,0,0,171,172,1,0,
        0,0,172,174,1,0,0,0,173,171,1,0,0,0,174,175,6,9,2,0,175,22,1,0,0,
        0,176,177,3,33,15,0,177,24,1,0,0,0,178,179,7,4,0,0,179,26,1,0,0,
        0,180,183,3,25,11,0,181,183,3,15,6,0,182,180,1,0,0,0,182,181,1,0,
        0,0,183,28,1,0,0,0,184,187,3,27,12,0,185,187,7,5,0,0,186,184,1,0,
        0,0,186,185,1,0,0,0,187,30,1,0,0,0,188,191,3,29,13,0,189,191,7,6,
        0,0,190,188,1,0,0,0,190,189,1,0,0,0,191,32,1,0,0,0,192,196,3,29,
        13,0,193,195,3,31,14,0,194,193,1,0,0,0,195,198,1,0,0,0,196,194,1,
        0,0,0,196,197,1,0,0,0,197,34,1,0,0,0,198,196,1,0,0,0,199,201,7,7,
        0,0,200,199,1,0,0,0,201,202,1,0,0,0,202,200,1,0,0,0,202,203,1,0,
        0,0,203,204,1,0,0,0,204,205,6,16,3,0,205,36,1,0,0,0,206,208,7,3,
        0,0,207,206,1,0,0,0,208,209,1,0,0,0,209,207,1,0,0,0,209,210,1,0,
        0,0,210,38,1,0,0,0,211,212,7,8,0,0,212,40,1,0,0,0,213,240,5,35,0,
        0,214,240,3,39,18,0,215,217,3,39,18,0,216,218,5,47,0,0,217,216,1,
        0,0,0,218,219,1,0,0,0,219,217,1,0,0,0,219,220,1,0,0,0,220,240,1,
        0,0,0,221,223,3,39,18,0,222,224,5,42,0,0,223,222,1,0,0,0,224,225,
        1,0,0,0,225,223,1,0,0,0,225,226,1,0,0,0,226,240,1,0,0,0,227,229,
        3,39,18,0,228,230,5,61,0,0,229,228,1,0,0,0,230,231,1,0,0,0,231,229,
        1,0,0,0,231,232,1,0,0,0,232,240,1,0,0,0,233,234,5,82,0,0,234,235,
        5,69,0,0,235,236,5,77,0,0,236,237,5,65,0,0,237,238,5,82,0,0,238,
        240,5,75,0,0,239,213,1,0,0,0,239,214,1,0,0,0,239,215,1,0,0,0,239,
        221,1,0,0,0,239,227,1,0,0,0,239,233,1,0,0,0,240,244,1,0,0,0,241,
        243,5,32,0,0,242,241,1,0,0,0,243,246,1,0,0,0,244,242,1,0,0,0,244,
        245,1,0,0,0,245,247,1,0,0,0,246,244,1,0,0,0,247,248,3,37,17,0,248,
        249,1,0,0,0,249,250,6,19,2,0,250,42,1,0,0,0,251,252,5,35,0,0,252,
        279,5,32,0,0,253,279,3,39,18,0,254,256,3,39,18,0,255,257,5,47,0,
        0,256,255,1,0,0,0,257,258,1,0,0,0,258,256,1,0,0,0,258,259,1,0,0,
        0,259,279,1,0,0,0,260,262,3,39,18,0,261,263,5,42,0,0,262,261,1,0,
        0,0,263,264,1,0,0,0,264,262,1,0,0,0,264,265,1,0,0,0,265,279,1,0,
        0,0,266,268,3,39,18,0,267,269,5,61,0,0,268,267,1,0,0,0,269,270,1,
        0,0,0,270,268,1,0,0,0,270,271,1,0,0,0,271,279,1,0,0,0,272,273,5,
        82,0,0,273,274,5,69,0,0,274,275,5,77,0,0,275,276,5,65,0,0,276,277,
        5,82,0,0,277,279,5,75,0,0,278,251,1,0,0,0,278,253,1,0,0,0,278,254,
        1,0,0,0,278,260,1,0,0,0,278,266,1,0,0,0,278,272,1,0,0,0,279,283,
        1,0,0,0,280,282,8,3,0,0,281,280,1,0,0,0,282,285,1,0,0,0,283,281,
        1,0,0,0,283,284,1,0,0,0,284,286,1,0,0,0,285,283,1,0,0,0,286,287,
        3,37,17,0,287,288,1,0,0,0,288,289,6,20,2,0,289,44,1,0,0,0,290,292,
        7,0,0,0,291,290,1,0,0,0,291,292,1,0,0,0,292,293,1,0,0,0,293,294,
        3,17,7,0,294,46,1,0,0,0,295,296,3,33,15,0,296,48,1,0,0,0,297,299,
        7,7,0,0,298,297,1,0,0,0,299,300,1,0,0,0,300,298,1,0,0,0,300,301,
        1,0,0,0,301,302,1,0,0,0,302,303,6,23,3,0,303,50,1,0,0,0,304,306,
        7,3,0,0,305,304,1,0,0,0,306,307,1,0,0,0,307,305,1,0,0,0,307,308,
        1,0,0,0,308,309,1,0,0,0,309,310,6,24,4,0,310,52,1,0,0,0,311,313,
        7,0,0,0,312,311,1,0,0,0,312,313,1,0,0,0,313,314,1,0,0,0,314,315,
        3,17,7,0,315,54,1,0,0,0,316,317,3,33,15,0,317,56,1,0,0,0,318,320,
        7,7,0,0,319,318,1,0,0,0,320,321,1,0,0,0,321,319,1,0,0,0,321,322,
        1,0,0,0,322,323,1,0,0,0,323,324,6,27,3,0,324,58,1,0,0,0,325,327,
        7,3,0,0,326,325,1,0,0,0,327,328,1,0,0,0,328,326,1,0,0,0,328,329,
        1,0,0,0,329,330,1,0,0,0,330,331,6,28,4,0,331,60,1,0,0,0,42,0,1,2,
        86,91,95,98,102,106,109,117,124,129,134,140,146,154,159,165,171,
        182,186,190,196,202,209,219,225,231,239,244,258,264,270,278,283,
        291,300,307,312,321,328,5,5,1,0,5,2,0,0,1,0,6,0,0,4,0,0
    ]

class PonderosaPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NT_MODE = 1
    AO_MODE = 2

    Noesy_type = 1
    Axis_order = 2
    Integer = 3
    Float = 4
    Real = 5
    EXCLM_COMMENT = 6
    SMCLN_COMMENT = 7
    Simple_name = 8
    SPACE = 9
    RETURN = 10
    SECTION_COMMENT = 11
    LINE_COMMENT = 12
    Integer_NT = 13
    Simple_name_NT = 14
    SPACE_NT = 15
    RETURN_NT = 16
    Integer_AO = 17
    Simple_name_AO = 18
    SPACE_AO = 19
    RETURN_AO = 20

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "NT_MODE", "AO_MODE" ]

    literalNames = [ "<INVALID>",
            "'NOESYTYPE'", "'AXISORDER'" ]

    symbolicNames = [ "<INVALID>",
            "Noesy_type", "Axis_order", "Integer", "Float", "Real", "EXCLM_COMMENT", 
            "SMCLN_COMMENT", "Simple_name", "SPACE", "RETURN", "SECTION_COMMENT", 
            "LINE_COMMENT", "Integer_NT", "Simple_name_NT", "SPACE_NT", 
            "RETURN_NT", "Integer_AO", "Simple_name_AO", "SPACE_AO", "RETURN_AO" ]

    ruleNames = [ "Noesy_type", "Axis_order", "Integer", "Float", "Real", 
                  "DEC_DOT_DEC", "DEC_DIGIT", "DECIMAL", "EXCLM_COMMENT", 
                  "SMCLN_COMMENT", "Simple_name", "ALPHA", "ALPHA_NUM", 
                  "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", "SPACE", "RETURN", 
                  "COMMENT_START_CHAR", "SECTION_COMMENT", "LINE_COMMENT", 
                  "Integer_NT", "Simple_name_NT", "SPACE_NT", "RETURN_NT", 
                  "Integer_AO", "Simple_name_AO", "SPACE_AO", "RETURN_AO" ]

    grammarFileName = "PonderosaPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


