# Generated from SparkyPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,25,400,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,1,1,1,1,1,1,1,1,1,1,2,3,2,90,8,2,1,2,1,2,1,3,3,3,95,8,3,1,3,
        1,3,3,3,99,8,3,1,4,3,4,102,8,4,1,4,1,4,3,4,106,8,4,1,4,1,4,3,4,110,
        8,4,1,4,3,4,113,8,4,1,5,1,5,1,5,1,5,1,5,1,5,3,5,121,8,5,1,6,1,6,
        1,7,4,7,126,8,7,11,7,12,7,127,1,8,4,8,131,8,8,11,8,12,8,132,1,8,
        5,8,136,8,8,10,8,12,8,139,9,8,1,8,5,8,142,8,8,10,8,12,8,145,9,8,
        1,8,5,8,148,8,8,10,8,12,8,151,9,8,1,8,1,8,1,9,4,9,156,8,9,11,9,12,
        9,157,1,9,5,9,161,8,9,10,9,12,9,164,9,9,1,9,5,9,167,8,9,10,9,12,
        9,170,9,9,1,9,5,9,173,8,9,10,9,12,9,176,9,9,1,9,1,9,1,10,4,10,181,
        8,10,11,10,12,10,182,1,10,5,10,186,8,10,10,10,12,10,189,9,10,1,10,
        5,10,192,8,10,10,10,12,10,195,9,10,1,10,5,10,198,8,10,10,10,12,10,
        201,9,10,1,10,1,10,1,11,1,11,1,11,5,11,208,8,11,10,11,12,11,211,
        9,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,
        1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,3,16,235,8,16,
        1,17,1,17,3,17,239,8,17,1,18,1,18,3,18,243,8,18,1,19,1,19,5,19,247,
        8,19,10,19,12,19,250,9,19,1,20,4,20,253,8,20,11,20,12,20,254,1,20,
        1,20,1,21,4,21,260,8,21,11,21,12,21,261,1,22,1,22,1,22,5,22,267,
        8,22,10,22,12,22,270,9,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,4,23,
        279,8,23,11,23,12,23,280,1,23,1,23,4,23,285,8,23,11,23,12,23,286,
        1,23,1,23,4,23,291,8,23,11,23,12,23,292,1,23,1,23,1,23,1,23,1,23,
        1,23,3,23,301,8,23,1,23,5,23,304,8,23,10,23,12,23,307,9,23,1,23,
        1,23,1,23,1,23,1,24,1,24,1,24,4,24,316,8,24,11,24,12,24,317,1,24,
        1,24,4,24,322,8,24,11,24,12,24,323,1,24,1,24,4,24,328,8,24,11,24,
        12,24,329,1,24,1,24,1,24,1,24,1,24,1,24,3,24,338,8,24,1,24,5,24,
        341,8,24,10,24,12,24,344,9,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,
        1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,29,
        1,29,3,29,367,8,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,
        1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,4,32,388,8,32,
        11,32,12,32,389,1,32,1,32,1,33,4,33,395,8,33,11,33,12,33,396,1,33,
        1,33,1,268,0,34,2,1,4,2,6,3,8,4,10,5,12,0,14,0,16,0,18,6,20,7,22,
        8,24,0,26,9,28,10,30,11,32,0,34,0,36,0,38,0,40,0,42,12,44,13,46,
        14,48,15,50,16,52,17,54,18,56,19,58,20,60,21,62,22,64,23,66,24,68,
        25,2,0,1,10,2,0,43,43,45,45,2,0,69,69,101,101,1,0,48,57,2,0,10,10,
        13,13,4,0,38,38,44,44,46,47,59,59,2,0,65,90,97,122,4,0,35,35,42,
        43,63,63,95,95,2,0,34,34,39,39,2,0,9,9,32,32,5,0,33,33,35,35,38,
        38,59,59,92,92,438,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,
        0,0,10,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,26,1,0,0,
        0,0,28,1,0,0,0,0,30,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,
        0,0,48,1,0,0,0,0,50,1,0,0,0,1,52,1,0,0,0,1,54,1,0,0,0,1,56,1,0,0,
        0,1,58,1,0,0,0,1,60,1,0,0,0,1,62,1,0,0,0,1,64,1,0,0,0,1,66,1,0,0,
        0,1,68,1,0,0,0,2,70,1,0,0,0,4,83,1,0,0,0,6,89,1,0,0,0,8,94,1,0,0,
        0,10,101,1,0,0,0,12,120,1,0,0,0,14,122,1,0,0,0,16,125,1,0,0,0,18,
        130,1,0,0,0,20,155,1,0,0,0,22,180,1,0,0,0,24,204,1,0,0,0,26,212,
        1,0,0,0,28,216,1,0,0,0,30,222,1,0,0,0,32,230,1,0,0,0,34,234,1,0,
        0,0,36,238,1,0,0,0,38,242,1,0,0,0,40,244,1,0,0,0,42,252,1,0,0,0,
        44,259,1,0,0,0,46,263,1,0,0,0,48,300,1,0,0,0,50,337,1,0,0,0,52,349,
        1,0,0,0,54,352,1,0,0,0,56,355,1,0,0,0,58,358,1,0,0,0,60,366,1,0,
        0,0,62,375,1,0,0,0,64,382,1,0,0,0,66,387,1,0,0,0,68,394,1,0,0,0,
        70,71,5,65,0,0,71,72,5,115,0,0,72,73,5,115,0,0,73,74,5,105,0,0,74,
        75,5,103,0,0,75,76,5,110,0,0,76,77,5,109,0,0,77,78,5,101,0,0,78,
        79,5,110,0,0,79,80,5,116,0,0,80,81,1,0,0,0,81,82,6,0,0,0,82,3,1,
        0,0,0,83,84,5,119,0,0,84,85,5,49,0,0,85,86,1,0,0,0,86,87,6,1,0,0,
        87,5,1,0,0,0,88,90,7,0,0,0,89,88,1,0,0,0,89,90,1,0,0,0,90,91,1,0,
        0,0,91,92,3,16,7,0,92,7,1,0,0,0,93,95,7,0,0,0,94,93,1,0,0,0,94,95,
        1,0,0,0,95,98,1,0,0,0,96,99,3,16,7,0,97,99,3,12,5,0,98,96,1,0,0,
        0,98,97,1,0,0,0,99,9,1,0,0,0,100,102,7,0,0,0,101,100,1,0,0,0,101,
        102,1,0,0,0,102,105,1,0,0,0,103,106,3,16,7,0,104,106,3,12,5,0,105,
        103,1,0,0,0,105,104,1,0,0,0,106,112,1,0,0,0,107,109,7,1,0,0,108,
        110,7,0,0,0,109,108,1,0,0,0,109,110,1,0,0,0,110,111,1,0,0,0,111,
        113,3,16,7,0,112,107,1,0,0,0,112,113,1,0,0,0,113,11,1,0,0,0,114,
        115,3,16,7,0,115,116,5,46,0,0,116,117,3,16,7,0,117,121,1,0,0,0,118,
        119,5,46,0,0,119,121,3,16,7,0,120,114,1,0,0,0,120,118,1,0,0,0,121,
        13,1,0,0,0,122,123,7,2,0,0,123,15,1,0,0,0,124,126,3,14,6,0,125,124,
        1,0,0,0,126,127,1,0,0,0,127,125,1,0,0,0,127,128,1,0,0,0,128,17,1,
        0,0,0,129,131,5,35,0,0,130,129,1,0,0,0,131,132,1,0,0,0,132,130,1,
        0,0,0,132,133,1,0,0,0,133,137,1,0,0,0,134,136,8,3,0,0,135,134,1,
        0,0,0,136,139,1,0,0,0,137,135,1,0,0,0,137,138,1,0,0,0,138,143,1,
        0,0,0,139,137,1,0,0,0,140,142,5,35,0,0,141,140,1,0,0,0,142,145,1,
        0,0,0,143,141,1,0,0,0,143,144,1,0,0,0,144,149,1,0,0,0,145,143,1,
        0,0,0,146,148,8,3,0,0,147,146,1,0,0,0,148,151,1,0,0,0,149,147,1,
        0,0,0,149,150,1,0,0,0,150,152,1,0,0,0,151,149,1,0,0,0,152,153,6,
        8,1,0,153,19,1,0,0,0,154,156,5,33,0,0,155,154,1,0,0,0,156,157,1,
        0,0,0,157,155,1,0,0,0,157,158,1,0,0,0,158,162,1,0,0,0,159,161,8,
        3,0,0,160,159,1,0,0,0,161,164,1,0,0,0,162,160,1,0,0,0,162,163,1,
        0,0,0,163,168,1,0,0,0,164,162,1,0,0,0,165,167,5,33,0,0,166,165,1,
        0,0,0,167,170,1,0,0,0,168,166,1,0,0,0,168,169,1,0,0,0,169,174,1,
        0,0,0,170,168,1,0,0,0,171,173,8,3,0,0,172,171,1,0,0,0,173,176,1,
        0,0,0,174,172,1,0,0,0,174,175,1,0,0,0,175,177,1,0,0,0,176,174,1,
        0,0,0,177,178,6,9,1,0,178,21,1,0,0,0,179,181,5,59,0,0,180,179,1,
        0,0,0,181,182,1,0,0,0,182,180,1,0,0,0,182,183,1,0,0,0,183,187,1,
        0,0,0,184,186,8,3,0,0,185,184,1,0,0,0,186,189,1,0,0,0,187,185,1,
        0,0,0,187,188,1,0,0,0,188,193,1,0,0,0,189,187,1,0,0,0,190,192,5,
        59,0,0,191,190,1,0,0,0,192,195,1,0,0,0,193,191,1,0,0,0,193,194,1,
        0,0,0,194,199,1,0,0,0,195,193,1,0,0,0,196,198,8,3,0,0,197,196,1,
        0,0,0,198,201,1,0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,200,202,1,
        0,0,0,201,199,1,0,0,0,202,203,6,10,1,0,203,23,1,0,0,0,204,209,3,
        40,19,0,205,206,7,4,0,0,206,208,3,40,19,0,207,205,1,0,0,0,208,211,
        1,0,0,0,209,207,1,0,0,0,209,210,1,0,0,0,210,25,1,0,0,0,211,209,1,
        0,0,0,212,213,3,24,11,0,213,214,5,45,0,0,214,215,3,24,11,0,215,27,
        1,0,0,0,216,217,3,24,11,0,217,218,5,45,0,0,218,219,3,24,11,0,219,
        220,5,45,0,0,220,221,3,24,11,0,221,29,1,0,0,0,222,223,3,24,11,0,
        223,224,5,45,0,0,224,225,3,24,11,0,225,226,5,45,0,0,226,227,3,24,
        11,0,227,228,5,45,0,0,228,229,3,24,11,0,229,31,1,0,0,0,230,231,7,
        5,0,0,231,33,1,0,0,0,232,235,3,32,15,0,233,235,3,14,6,0,234,232,
        1,0,0,0,234,233,1,0,0,0,235,35,1,0,0,0,236,239,3,34,16,0,237,239,
        7,6,0,0,238,236,1,0,0,0,238,237,1,0,0,0,239,37,1,0,0,0,240,243,3,
        36,17,0,241,243,7,7,0,0,242,240,1,0,0,0,242,241,1,0,0,0,243,39,1,
        0,0,0,244,248,3,36,17,0,245,247,3,38,18,0,246,245,1,0,0,0,247,250,
        1,0,0,0,248,246,1,0,0,0,248,249,1,0,0,0,249,41,1,0,0,0,250,248,1,
        0,0,0,251,253,7,8,0,0,252,251,1,0,0,0,253,254,1,0,0,0,254,252,1,
        0,0,0,254,255,1,0,0,0,255,256,1,0,0,0,256,257,6,20,2,0,257,43,1,
        0,0,0,258,260,7,3,0,0,259,258,1,0,0,0,260,261,1,0,0,0,261,259,1,
        0,0,0,261,262,1,0,0,0,262,45,1,0,0,0,263,268,5,123,0,0,264,267,3,
        46,22,0,265,267,9,0,0,0,266,264,1,0,0,0,266,265,1,0,0,0,267,270,
        1,0,0,0,268,269,1,0,0,0,268,266,1,0,0,0,269,271,1,0,0,0,270,268,
        1,0,0,0,271,272,5,125,0,0,272,273,1,0,0,0,273,274,6,22,1,0,274,47,
        1,0,0,0,275,301,7,9,0,0,276,278,5,47,0,0,277,279,5,47,0,0,278,277,
        1,0,0,0,279,280,1,0,0,0,280,278,1,0,0,0,280,281,1,0,0,0,281,301,
        1,0,0,0,282,284,5,42,0,0,283,285,5,42,0,0,284,283,1,0,0,0,285,286,
        1,0,0,0,286,284,1,0,0,0,286,287,1,0,0,0,287,301,1,0,0,0,288,290,
        5,61,0,0,289,291,5,61,0,0,290,289,1,0,0,0,291,292,1,0,0,0,292,290,
        1,0,0,0,292,293,1,0,0,0,293,301,1,0,0,0,294,295,5,82,0,0,295,296,
        5,69,0,0,296,297,5,77,0,0,297,298,5,65,0,0,298,299,5,82,0,0,299,
        301,5,75,0,0,300,275,1,0,0,0,300,276,1,0,0,0,300,282,1,0,0,0,300,
        288,1,0,0,0,300,294,1,0,0,0,301,305,1,0,0,0,302,304,5,32,0,0,303,
        302,1,0,0,0,304,307,1,0,0,0,305,303,1,0,0,0,305,306,1,0,0,0,306,
        308,1,0,0,0,307,305,1,0,0,0,308,309,3,44,21,0,309,310,1,0,0,0,310,
        311,6,23,1,0,311,49,1,0,0,0,312,338,7,9,0,0,313,315,5,47,0,0,314,
        316,5,47,0,0,315,314,1,0,0,0,316,317,1,0,0,0,317,315,1,0,0,0,317,
        318,1,0,0,0,318,338,1,0,0,0,319,321,5,42,0,0,320,322,5,42,0,0,321,
        320,1,0,0,0,322,323,1,0,0,0,323,321,1,0,0,0,323,324,1,0,0,0,324,
        338,1,0,0,0,325,327,5,61,0,0,326,328,5,61,0,0,327,326,1,0,0,0,328,
        329,1,0,0,0,329,327,1,0,0,0,329,330,1,0,0,0,330,338,1,0,0,0,331,
        332,5,82,0,0,332,333,5,69,0,0,333,334,5,77,0,0,334,335,5,65,0,0,
        335,336,5,82,0,0,336,338,5,75,0,0,337,312,1,0,0,0,337,313,1,0,0,
        0,337,319,1,0,0,0,337,325,1,0,0,0,337,331,1,0,0,0,338,342,1,0,0,
        0,339,341,8,3,0,0,340,339,1,0,0,0,341,344,1,0,0,0,342,340,1,0,0,
        0,342,343,1,0,0,0,343,345,1,0,0,0,344,342,1,0,0,0,345,346,3,44,21,
        0,346,347,1,0,0,0,347,348,6,24,1,0,348,51,1,0,0,0,349,350,5,119,
        0,0,350,351,5,49,0,0,351,53,1,0,0,0,352,353,5,119,0,0,353,354,5,
        50,0,0,354,55,1,0,0,0,355,356,5,119,0,0,356,357,5,51,0,0,357,57,
        1,0,0,0,358,359,5,119,0,0,359,360,5,52,0,0,360,59,1,0,0,0,361,362,
        5,68,0,0,362,363,5,97,0,0,363,364,5,116,0,0,364,365,5,97,0,0,365,
        367,5,32,0,0,366,361,1,0,0,0,366,367,1,0,0,0,367,368,1,0,0,0,368,
        369,5,72,0,0,369,370,5,101,0,0,370,371,5,105,0,0,371,372,5,103,0,
        0,372,373,5,104,0,0,373,374,5,116,0,0,374,61,1,0,0,0,375,376,5,86,
        0,0,376,377,5,111,0,0,377,378,5,108,0,0,378,379,5,117,0,0,379,380,
        5,109,0,0,380,381,5,101,0,0,381,63,1,0,0,0,382,383,5,83,0,0,383,
        384,5,47,0,0,384,385,5,78,0,0,385,65,1,0,0,0,386,388,7,8,0,0,387,
        386,1,0,0,0,388,389,1,0,0,0,389,387,1,0,0,0,389,390,1,0,0,0,390,
        391,1,0,0,0,391,392,6,32,2,0,392,67,1,0,0,0,393,395,7,3,0,0,394,
        393,1,0,0,0,395,396,1,0,0,0,396,394,1,0,0,0,396,397,1,0,0,0,397,
        398,1,0,0,0,398,399,6,33,3,0,399,69,1,0,0,0,45,0,1,89,94,98,101,
        105,109,112,120,127,132,137,143,149,157,162,168,174,182,187,193,
        199,209,234,238,242,248,254,261,266,268,280,286,292,300,305,317,
        323,329,337,342,366,389,396,4,5,1,0,0,1,0,6,0,0,4,0,0
    ]

class SparkyPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LABEL_MODE = 1

    Assignment = 1
    W1 = 2
    Integer = 3
    Float = 4
    Real = 5
    SHARP_COMMENT = 6
    EXCLM_COMMENT = 7
    SMCLN_COMMENT = 8
    Assignment_2d_ex = 9
    Assignment_3d_ex = 10
    Assignment_4d_ex = 11
    SPACE = 12
    RETURN = 13
    ENCLOSE_COMMENT = 14
    SECTION_COMMENT = 15
    LINE_COMMENT = 16
    W1_LA = 17
    W2_LA = 18
    W3_LA = 19
    W4_LA = 20
    Height_LA = 21
    Volume_LA = 22
    S_N_LA = 23
    SPACE_LA = 24
    RETURN_LA = 25

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "LABEL_MODE" ]

    literalNames = [ "<INVALID>",
            "'Assignment'", "'w2'", "'w3'", "'w4'", "'Volume'", "'S/N'" ]

    symbolicNames = [ "<INVALID>",
            "Assignment", "W1", "Integer", "Float", "Real", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Assignment_2d_ex", "Assignment_3d_ex", 
            "Assignment_4d_ex", "SPACE", "RETURN", "ENCLOSE_COMMENT", "SECTION_COMMENT", 
            "LINE_COMMENT", "W1_LA", "W2_LA", "W3_LA", "W4_LA", "Height_LA", 
            "Volume_LA", "S_N_LA", "SPACE_LA", "RETURN_LA" ]

    ruleNames = [ "Assignment", "W1", "Integer", "Float", "Real", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", 
                  "SMCLN_COMMENT", "ASS_EACH_AXIS", "Assignment_2d_ex", 
                  "Assignment_3d_ex", "Assignment_4d_ex", "ALPHA", "ALPHA_NUM", 
                  "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", "SPACE", "RETURN", 
                  "ENCLOSE_COMMENT", "SECTION_COMMENT", "LINE_COMMENT", 
                  "W1_LA", "W2_LA", "W3_LA", "W4_LA", "Height_LA", "Volume_LA", 
                  "S_N_LA", "SPACE_LA", "RETURN_LA" ]

    grammarFileName = "SparkyPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


