# Generated from SparkyPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,26,416,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,1,1,1,1,1,1,1,1,1,1,2,3,2,90,8,2,1,2,1,2,1,3,3,3,95,8,3,1,3,
        1,3,3,3,99,8,3,1,4,3,4,102,8,4,1,4,1,4,3,4,106,8,4,1,4,1,4,3,4,110,
        8,4,1,4,3,4,113,8,4,1,5,1,5,1,5,1,5,1,5,1,5,3,5,121,8,5,1,6,1,6,
        1,7,4,7,126,8,7,11,7,12,7,127,1,8,4,8,131,8,8,11,8,12,8,132,1,8,
        5,8,136,8,8,10,8,12,8,139,9,8,1,8,5,8,142,8,8,10,8,12,8,145,9,8,
        1,8,5,8,148,8,8,10,8,12,8,151,9,8,1,8,1,8,1,9,4,9,156,8,9,11,9,12,
        9,157,1,9,5,9,161,8,9,10,9,12,9,164,9,9,1,9,5,9,167,8,9,10,9,12,
        9,170,9,9,1,9,5,9,173,8,9,10,9,12,9,176,9,9,1,9,1,9,1,10,4,10,181,
        8,10,11,10,12,10,182,1,10,5,10,186,8,10,10,10,12,10,189,9,10,1,10,
        5,10,192,8,10,10,10,12,10,195,9,10,1,10,5,10,198,8,10,10,10,12,10,
        201,9,10,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,
        1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,
        1,16,1,16,3,16,229,8,16,1,17,1,17,3,17,233,8,17,1,18,1,18,3,18,237,
        8,18,1,19,1,19,5,19,241,8,19,10,19,12,19,244,9,19,1,20,4,20,247,
        8,20,11,20,12,20,248,1,20,1,20,1,21,4,21,254,8,21,11,21,12,21,255,
        1,22,1,22,1,22,5,22,261,8,22,10,22,12,22,264,9,22,1,22,1,22,1,23,
        1,23,1,23,4,23,271,8,23,11,23,12,23,272,1,23,1,23,4,23,277,8,23,
        11,23,12,23,278,1,23,1,23,4,23,283,8,23,11,23,12,23,284,1,23,1,23,
        4,23,289,8,23,11,23,12,23,290,1,23,1,23,4,23,295,8,23,11,23,12,23,
        296,1,23,1,23,1,23,1,23,1,23,1,23,3,23,305,8,23,1,23,5,23,308,8,
        23,10,23,12,23,311,9,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,4,24,
        320,8,24,11,24,12,24,321,1,24,1,24,4,24,326,8,24,11,24,12,24,327,
        1,24,1,24,4,24,332,8,24,11,24,12,24,333,1,24,1,24,4,24,338,8,24,
        11,24,12,24,339,1,24,1,24,4,24,344,8,24,11,24,12,24,345,1,24,1,24,
        1,24,1,24,1,24,1,24,3,24,354,8,24,1,24,5,24,357,8,24,10,24,12,24,
        360,9,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,27,
        1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,3,29,383,8,29,
        1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,
        1,30,1,31,1,31,1,31,1,31,1,32,4,32,404,8,32,11,32,12,32,405,1,32,
        1,32,1,33,4,33,411,8,33,11,33,12,33,412,1,33,1,33,1,262,0,34,2,1,
        4,2,6,3,8,4,10,5,12,0,14,0,16,0,18,6,20,7,22,8,24,9,26,10,28,11,
        30,12,32,0,34,0,36,0,38,0,40,0,42,13,44,14,46,15,48,16,50,17,52,
        18,54,19,56,20,58,21,60,22,62,23,64,24,66,25,68,26,2,0,1,9,2,0,43,
        43,45,45,2,0,69,69,101,101,1,0,48,57,2,0,10,10,13,13,2,0,65,90,97,
        122,5,0,35,35,42,43,45,46,63,63,95,95,2,0,34,34,39,39,2,0,9,9,32,
        32,5,0,33,33,35,35,38,38,59,59,92,92,462,0,2,1,0,0,0,0,4,1,0,0,0,
        0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,
        22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,
        42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,1,
        52,1,0,0,0,1,54,1,0,0,0,1,56,1,0,0,0,1,58,1,0,0,0,1,60,1,0,0,0,1,
        62,1,0,0,0,1,64,1,0,0,0,1,66,1,0,0,0,1,68,1,0,0,0,2,70,1,0,0,0,4,
        83,1,0,0,0,6,89,1,0,0,0,8,94,1,0,0,0,10,101,1,0,0,0,12,120,1,0,0,
        0,14,122,1,0,0,0,16,125,1,0,0,0,18,130,1,0,0,0,20,155,1,0,0,0,22,
        180,1,0,0,0,24,204,1,0,0,0,26,208,1,0,0,0,28,214,1,0,0,0,30,222,
        1,0,0,0,32,224,1,0,0,0,34,228,1,0,0,0,36,232,1,0,0,0,38,236,1,0,
        0,0,40,238,1,0,0,0,42,246,1,0,0,0,44,253,1,0,0,0,46,257,1,0,0,0,
        48,304,1,0,0,0,50,353,1,0,0,0,52,365,1,0,0,0,54,368,1,0,0,0,56,371,
        1,0,0,0,58,374,1,0,0,0,60,382,1,0,0,0,62,391,1,0,0,0,64,398,1,0,
        0,0,66,403,1,0,0,0,68,410,1,0,0,0,70,71,5,65,0,0,71,72,5,115,0,0,
        72,73,5,115,0,0,73,74,5,105,0,0,74,75,5,103,0,0,75,76,5,110,0,0,
        76,77,5,109,0,0,77,78,5,101,0,0,78,79,5,110,0,0,79,80,5,116,0,0,
        80,81,1,0,0,0,81,82,6,0,0,0,82,3,1,0,0,0,83,84,5,119,0,0,84,85,5,
        49,0,0,85,86,1,0,0,0,86,87,6,1,0,0,87,5,1,0,0,0,88,90,7,0,0,0,89,
        88,1,0,0,0,89,90,1,0,0,0,90,91,1,0,0,0,91,92,3,16,7,0,92,7,1,0,0,
        0,93,95,7,0,0,0,94,93,1,0,0,0,94,95,1,0,0,0,95,98,1,0,0,0,96,99,
        3,16,7,0,97,99,3,12,5,0,98,96,1,0,0,0,98,97,1,0,0,0,99,9,1,0,0,0,
        100,102,7,0,0,0,101,100,1,0,0,0,101,102,1,0,0,0,102,105,1,0,0,0,
        103,106,3,16,7,0,104,106,3,12,5,0,105,103,1,0,0,0,105,104,1,0,0,
        0,106,112,1,0,0,0,107,109,7,1,0,0,108,110,7,0,0,0,109,108,1,0,0,
        0,109,110,1,0,0,0,110,111,1,0,0,0,111,113,3,16,7,0,112,107,1,0,0,
        0,112,113,1,0,0,0,113,11,1,0,0,0,114,115,3,16,7,0,115,116,5,46,0,
        0,116,117,3,16,7,0,117,121,1,0,0,0,118,119,5,46,0,0,119,121,3,16,
        7,0,120,114,1,0,0,0,120,118,1,0,0,0,121,13,1,0,0,0,122,123,7,2,0,
        0,123,15,1,0,0,0,124,126,3,14,6,0,125,124,1,0,0,0,126,127,1,0,0,
        0,127,125,1,0,0,0,127,128,1,0,0,0,128,17,1,0,0,0,129,131,5,35,0,
        0,130,129,1,0,0,0,131,132,1,0,0,0,132,130,1,0,0,0,132,133,1,0,0,
        0,133,137,1,0,0,0,134,136,8,3,0,0,135,134,1,0,0,0,136,139,1,0,0,
        0,137,135,1,0,0,0,137,138,1,0,0,0,138,143,1,0,0,0,139,137,1,0,0,
        0,140,142,5,35,0,0,141,140,1,0,0,0,142,145,1,0,0,0,143,141,1,0,0,
        0,143,144,1,0,0,0,144,149,1,0,0,0,145,143,1,0,0,0,146,148,8,3,0,
        0,147,146,1,0,0,0,148,151,1,0,0,0,149,147,1,0,0,0,149,150,1,0,0,
        0,150,152,1,0,0,0,151,149,1,0,0,0,152,153,6,8,1,0,153,19,1,0,0,0,
        154,156,5,33,0,0,155,154,1,0,0,0,156,157,1,0,0,0,157,155,1,0,0,0,
        157,158,1,0,0,0,158,162,1,0,0,0,159,161,8,3,0,0,160,159,1,0,0,0,
        161,164,1,0,0,0,162,160,1,0,0,0,162,163,1,0,0,0,163,168,1,0,0,0,
        164,162,1,0,0,0,165,167,5,33,0,0,166,165,1,0,0,0,167,170,1,0,0,0,
        168,166,1,0,0,0,168,169,1,0,0,0,169,174,1,0,0,0,170,168,1,0,0,0,
        171,173,8,3,0,0,172,171,1,0,0,0,173,176,1,0,0,0,174,172,1,0,0,0,
        174,175,1,0,0,0,175,177,1,0,0,0,176,174,1,0,0,0,177,178,6,9,1,0,
        178,21,1,0,0,0,179,181,5,59,0,0,180,179,1,0,0,0,181,182,1,0,0,0,
        182,180,1,0,0,0,182,183,1,0,0,0,183,187,1,0,0,0,184,186,8,3,0,0,
        185,184,1,0,0,0,186,189,1,0,0,0,187,185,1,0,0,0,187,188,1,0,0,0,
        188,193,1,0,0,0,189,187,1,0,0,0,190,192,5,59,0,0,191,190,1,0,0,0,
        192,195,1,0,0,0,193,191,1,0,0,0,193,194,1,0,0,0,194,199,1,0,0,0,
        195,193,1,0,0,0,196,198,8,3,0,0,197,196,1,0,0,0,198,201,1,0,0,0,
        199,197,1,0,0,0,199,200,1,0,0,0,200,202,1,0,0,0,201,199,1,0,0,0,
        202,203,6,10,1,0,203,23,1,0,0,0,204,205,3,40,19,0,205,206,5,45,0,
        0,206,207,3,40,19,0,207,25,1,0,0,0,208,209,3,40,19,0,209,210,5,45,
        0,0,210,211,3,40,19,0,211,212,5,45,0,0,212,213,3,40,19,0,213,27,
        1,0,0,0,214,215,3,40,19,0,215,216,5,45,0,0,216,217,3,40,19,0,217,
        218,5,45,0,0,218,219,3,40,19,0,219,220,5,45,0,0,220,221,3,40,19,
        0,221,29,1,0,0,0,222,223,3,40,19,0,223,31,1,0,0,0,224,225,7,4,0,
        0,225,33,1,0,0,0,226,229,3,32,15,0,227,229,3,14,6,0,228,226,1,0,
        0,0,228,227,1,0,0,0,229,35,1,0,0,0,230,233,3,34,16,0,231,233,7,5,
        0,0,232,230,1,0,0,0,232,231,1,0,0,0,233,37,1,0,0,0,234,237,3,36,
        17,0,235,237,7,6,0,0,236,234,1,0,0,0,236,235,1,0,0,0,237,39,1,0,
        0,0,238,242,3,36,17,0,239,241,3,38,18,0,240,239,1,0,0,0,241,244,
        1,0,0,0,242,240,1,0,0,0,242,243,1,0,0,0,243,41,1,0,0,0,244,242,1,
        0,0,0,245,247,7,7,0,0,246,245,1,0,0,0,247,248,1,0,0,0,248,246,1,
        0,0,0,248,249,1,0,0,0,249,250,1,0,0,0,250,251,6,20,2,0,251,43,1,
        0,0,0,252,254,7,3,0,0,253,252,1,0,0,0,254,255,1,0,0,0,255,253,1,
        0,0,0,255,256,1,0,0,0,256,45,1,0,0,0,257,262,5,123,0,0,258,261,3,
        8,3,0,259,261,3,40,19,0,260,258,1,0,0,0,260,259,1,0,0,0,261,264,
        1,0,0,0,262,263,1,0,0,0,262,260,1,0,0,0,263,265,1,0,0,0,264,262,
        1,0,0,0,265,266,5,125,0,0,266,47,1,0,0,0,267,305,7,8,0,0,268,270,
        5,47,0,0,269,271,5,47,0,0,270,269,1,0,0,0,271,272,1,0,0,0,272,270,
        1,0,0,0,272,273,1,0,0,0,273,305,1,0,0,0,274,276,5,42,0,0,275,277,
        5,42,0,0,276,275,1,0,0,0,277,278,1,0,0,0,278,276,1,0,0,0,278,279,
        1,0,0,0,279,305,1,0,0,0,280,282,5,45,0,0,281,283,5,45,0,0,282,281,
        1,0,0,0,283,284,1,0,0,0,284,282,1,0,0,0,284,285,1,0,0,0,285,305,
        1,0,0,0,286,288,5,43,0,0,287,289,5,43,0,0,288,287,1,0,0,0,289,290,
        1,0,0,0,290,288,1,0,0,0,290,291,1,0,0,0,291,305,1,0,0,0,292,294,
        5,61,0,0,293,295,5,61,0,0,294,293,1,0,0,0,295,296,1,0,0,0,296,294,
        1,0,0,0,296,297,1,0,0,0,297,305,1,0,0,0,298,299,5,82,0,0,299,300,
        5,69,0,0,300,301,5,77,0,0,301,302,5,65,0,0,302,303,5,82,0,0,303,
        305,5,75,0,0,304,267,1,0,0,0,304,268,1,0,0,0,304,274,1,0,0,0,304,
        280,1,0,0,0,304,286,1,0,0,0,304,292,1,0,0,0,304,298,1,0,0,0,305,
        309,1,0,0,0,306,308,5,32,0,0,307,306,1,0,0,0,308,311,1,0,0,0,309,
        307,1,0,0,0,309,310,1,0,0,0,310,312,1,0,0,0,311,309,1,0,0,0,312,
        313,3,44,21,0,313,314,1,0,0,0,314,315,6,23,1,0,315,49,1,0,0,0,316,
        354,7,8,0,0,317,319,5,47,0,0,318,320,5,47,0,0,319,318,1,0,0,0,320,
        321,1,0,0,0,321,319,1,0,0,0,321,322,1,0,0,0,322,354,1,0,0,0,323,
        325,5,42,0,0,324,326,5,42,0,0,325,324,1,0,0,0,326,327,1,0,0,0,327,
        325,1,0,0,0,327,328,1,0,0,0,328,354,1,0,0,0,329,331,5,45,0,0,330,
        332,5,45,0,0,331,330,1,0,0,0,332,333,1,0,0,0,333,331,1,0,0,0,333,
        334,1,0,0,0,334,354,1,0,0,0,335,337,5,43,0,0,336,338,5,43,0,0,337,
        336,1,0,0,0,338,339,1,0,0,0,339,337,1,0,0,0,339,340,1,0,0,0,340,
        354,1,0,0,0,341,343,5,61,0,0,342,344,5,61,0,0,343,342,1,0,0,0,344,
        345,1,0,0,0,345,343,1,0,0,0,345,346,1,0,0,0,346,354,1,0,0,0,347,
        348,5,82,0,0,348,349,5,69,0,0,349,350,5,77,0,0,350,351,5,65,0,0,
        351,352,5,82,0,0,352,354,5,75,0,0,353,316,1,0,0,0,353,317,1,0,0,
        0,353,323,1,0,0,0,353,329,1,0,0,0,353,335,1,0,0,0,353,341,1,0,0,
        0,353,347,1,0,0,0,354,358,1,0,0,0,355,357,8,3,0,0,356,355,1,0,0,
        0,357,360,1,0,0,0,358,356,1,0,0,0,358,359,1,0,0,0,359,361,1,0,0,
        0,360,358,1,0,0,0,361,362,3,44,21,0,362,363,1,0,0,0,363,364,6,24,
        1,0,364,51,1,0,0,0,365,366,5,119,0,0,366,367,5,49,0,0,367,53,1,0,
        0,0,368,369,5,119,0,0,369,370,5,50,0,0,370,55,1,0,0,0,371,372,5,
        119,0,0,372,373,5,51,0,0,373,57,1,0,0,0,374,375,5,119,0,0,375,376,
        5,52,0,0,376,59,1,0,0,0,377,378,5,68,0,0,378,379,5,97,0,0,379,380,
        5,116,0,0,380,381,5,97,0,0,381,383,5,32,0,0,382,377,1,0,0,0,382,
        383,1,0,0,0,383,384,1,0,0,0,384,385,5,72,0,0,385,386,5,101,0,0,386,
        387,5,105,0,0,387,388,5,103,0,0,388,389,5,104,0,0,389,390,5,116,
        0,0,390,61,1,0,0,0,391,392,5,86,0,0,392,393,5,111,0,0,393,394,5,
        108,0,0,394,395,5,117,0,0,395,396,5,109,0,0,396,397,5,101,0,0,397,
        63,1,0,0,0,398,399,5,83,0,0,399,400,5,47,0,0,400,401,5,78,0,0,401,
        65,1,0,0,0,402,404,7,7,0,0,403,402,1,0,0,0,404,405,1,0,0,0,405,403,
        1,0,0,0,405,406,1,0,0,0,406,407,1,0,0,0,407,408,6,32,2,0,408,67,
        1,0,0,0,409,411,7,3,0,0,410,409,1,0,0,0,411,412,1,0,0,0,412,410,
        1,0,0,0,412,413,1,0,0,0,413,414,1,0,0,0,414,415,6,33,3,0,415,69,
        1,0,0,0,48,0,1,89,94,98,101,105,109,112,120,127,132,137,143,149,
        157,162,168,174,182,187,193,199,228,232,236,242,248,255,260,262,
        272,278,284,290,296,304,309,321,327,333,339,345,353,358,382,405,
        412,4,5,1,0,0,1,0,6,0,0,4,0,0
    ]

class SparkyPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LABEL_MODE = 1

    Assignment = 1
    W1 = 2
    Integer = 3
    Float = 4
    Real = 5
    SHARP_COMMENT = 6
    EXCLM_COMMENT = 7
    SMCLN_COMMENT = 8
    Assignment_2d_ex = 9
    Assignment_3d_ex = 10
    Assignment_4d_ex = 11
    Simple_name = 12
    SPACE = 13
    RETURN = 14
    ENCLOSE_COMMENT = 15
    SECTION_COMMENT = 16
    LINE_COMMENT = 17
    W1_LA = 18
    W2_LA = 19
    W3_LA = 20
    W4_LA = 21
    Height_LA = 22
    Volume_LA = 23
    S_N_LA = 24
    SPACE_LA = 25
    RETURN_LA = 26

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "LABEL_MODE" ]

    literalNames = [ "<INVALID>",
            "'Assignment'", "'w2'", "'w3'", "'w4'", "'Volume'", "'S/N'" ]

    symbolicNames = [ "<INVALID>",
            "Assignment", "W1", "Integer", "Float", "Real", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Assignment_2d_ex", "Assignment_3d_ex", 
            "Assignment_4d_ex", "Simple_name", "SPACE", "RETURN", "ENCLOSE_COMMENT", 
            "SECTION_COMMENT", "LINE_COMMENT", "W1_LA", "W2_LA", "W3_LA", 
            "W4_LA", "Height_LA", "Volume_LA", "S_N_LA", "SPACE_LA", "RETURN_LA" ]

    ruleNames = [ "Assignment", "W1", "Integer", "Float", "Real", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", 
                  "SMCLN_COMMENT", "Assignment_2d_ex", "Assignment_3d_ex", 
                  "Assignment_4d_ex", "Simple_name", "ALPHA", "ALPHA_NUM", 
                  "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", "SPACE", "RETURN", 
                  "ENCLOSE_COMMENT", "SECTION_COMMENT", "LINE_COMMENT", 
                  "W1_LA", "W2_LA", "W3_LA", "W4_LA", "Height_LA", "Volume_LA", 
                  "S_N_LA", "SPACE_LA", "RETURN_LA" ]

    grammarFileName = "SparkyPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


