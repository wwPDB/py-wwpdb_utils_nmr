# Generated from SparkyPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,37,560,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
        7,45,2,46,7,46,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,
        0,109,8,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,3,2,119,8,2,1,2,1,2,1,
        3,3,3,124,8,3,1,3,1,3,3,3,128,8,3,1,4,3,4,131,8,4,1,4,1,4,3,4,135,
        8,4,1,4,1,4,3,4,139,8,4,1,4,3,4,142,8,4,1,5,1,5,1,5,1,5,1,5,1,5,
        3,5,150,8,5,1,6,1,6,1,7,4,7,155,8,7,11,7,12,7,156,1,8,4,8,160,8,
        8,11,8,12,8,161,1,8,5,8,165,8,8,10,8,12,8,168,9,8,1,8,5,8,171,8,
        8,10,8,12,8,174,9,8,1,8,5,8,177,8,8,10,8,12,8,180,9,8,1,8,1,8,1,
        9,4,9,185,8,9,11,9,12,9,186,1,9,5,9,190,8,9,10,9,12,9,193,9,9,1,
        9,5,9,196,8,9,10,9,12,9,199,9,9,1,9,5,9,202,8,9,10,9,12,9,205,9,
        9,1,9,1,9,1,10,4,10,210,8,10,11,10,12,10,211,1,10,5,10,215,8,10,
        10,10,12,10,218,9,10,1,10,5,10,221,8,10,10,10,12,10,224,9,10,1,10,
        5,10,227,8,10,10,10,12,10,230,9,10,1,10,1,10,1,11,1,11,1,11,5,11,
        237,8,11,10,11,12,11,240,9,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,
        1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
        1,16,1,16,1,17,1,17,3,17,266,8,17,1,18,1,18,3,18,270,8,18,1,19,1,
        19,3,19,274,8,19,1,20,1,20,5,20,278,8,20,10,20,12,20,281,9,20,1,
        21,4,21,284,8,21,11,21,12,21,285,1,21,1,21,1,22,4,22,291,8,22,11,
        22,12,22,292,1,23,1,23,1,24,1,24,1,24,5,24,300,8,24,10,24,12,24,
        303,9,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,4,25,312,8,25,11,25,
        12,25,313,1,25,1,25,4,25,318,8,25,11,25,12,25,319,1,25,1,25,4,25,
        324,8,25,11,25,12,25,325,1,25,1,25,1,25,1,25,1,25,1,25,3,25,334,
        8,25,1,25,5,25,337,8,25,10,25,12,25,340,9,25,1,25,1,25,1,25,1,25,
        1,26,1,26,1,26,4,26,349,8,26,11,26,12,26,350,1,26,1,26,4,26,355,
        8,26,11,26,12,26,356,1,26,1,26,4,26,361,8,26,11,26,12,26,362,1,26,
        1,26,1,26,1,26,1,26,1,26,3,26,371,8,26,1,26,5,26,374,8,26,10,26,
        12,26,377,9,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,
        1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,
        1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,
        1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,
        1,35,1,35,1,35,1,35,1,35,1,35,1,35,3,35,435,8,35,1,36,1,36,1,36,
        1,36,1,36,3,36,442,8,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
        3,36,452,8,36,1,36,1,36,1,36,1,36,3,36,458,8,36,1,37,1,37,1,37,1,
        37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,
        39,1,39,1,39,1,39,1,39,3,39,481,8,39,1,40,1,40,1,40,1,40,1,40,1,
        40,1,40,1,40,1,40,1,40,3,40,493,8,40,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,3,41,505,8,41,1,42,1,42,1,42,1,42,1,42,1,
        42,1,42,1,42,1,42,1,42,3,42,517,8,42,1,43,1,43,1,43,1,43,1,43,1,
        43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,3,43,535,8,
        43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,3,44,545,8,44,1,45,4,
        45,548,8,45,11,45,12,45,549,1,45,1,45,1,46,4,46,555,8,46,11,46,12,
        46,556,1,46,1,46,1,301,0,47,2,1,4,2,6,3,8,4,10,5,12,0,14,0,16,0,
        18,6,20,7,22,8,24,0,26,9,28,10,30,11,32,12,34,0,36,0,38,0,40,0,42,
        0,44,13,46,14,48,0,50,15,52,16,54,17,56,18,58,19,60,20,62,21,64,
        22,66,23,68,24,70,25,72,26,74,27,76,28,78,29,80,30,82,31,84,32,86,
        33,88,34,90,35,92,36,94,37,2,0,1,10,2,0,43,43,45,45,2,0,69,69,101,
        101,1,0,48,57,2,0,10,10,13,13,4,0,38,38,44,44,46,47,58,59,2,0,65,
        90,97,122,4,0,42,43,45,45,63,63,95,95,3,0,34,35,37,37,39,39,2,0,
        9,9,32,32,8,0,33,33,35,35,38,38,42,42,47,47,59,59,61,61,92,92,607,
        0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,18,
        1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,
        1,0,0,0,0,32,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,50,1,0,0,0,0,52,
        1,0,0,0,0,54,1,0,0,0,1,56,1,0,0,0,1,58,1,0,0,0,1,60,1,0,0,0,1,62,
        1,0,0,0,1,64,1,0,0,0,1,66,1,0,0,0,1,68,1,0,0,0,1,70,1,0,0,0,1,72,
        1,0,0,0,1,74,1,0,0,0,1,76,1,0,0,0,1,78,1,0,0,0,1,80,1,0,0,0,1,82,
        1,0,0,0,1,84,1,0,0,0,1,86,1,0,0,0,1,88,1,0,0,0,1,90,1,0,0,0,1,92,
        1,0,0,0,1,94,1,0,0,0,2,96,1,0,0,0,4,112,1,0,0,0,6,118,1,0,0,0,8,
        123,1,0,0,0,10,130,1,0,0,0,12,149,1,0,0,0,14,151,1,0,0,0,16,154,
        1,0,0,0,18,159,1,0,0,0,20,184,1,0,0,0,22,209,1,0,0,0,24,233,1,0,
        0,0,26,241,1,0,0,0,28,245,1,0,0,0,30,251,1,0,0,0,32,259,1,0,0,0,
        34,261,1,0,0,0,36,265,1,0,0,0,38,269,1,0,0,0,40,273,1,0,0,0,42,275,
        1,0,0,0,44,283,1,0,0,0,46,290,1,0,0,0,48,294,1,0,0,0,50,296,1,0,
        0,0,52,333,1,0,0,0,54,370,1,0,0,0,56,382,1,0,0,0,58,385,1,0,0,0,
        60,388,1,0,0,0,62,391,1,0,0,0,64,394,1,0,0,0,66,401,1,0,0,0,68,408,
        1,0,0,0,70,415,1,0,0,0,72,422,1,0,0,0,74,457,1,0,0,0,76,459,1,0,
        0,0,78,466,1,0,0,0,80,480,1,0,0,0,82,492,1,0,0,0,84,504,1,0,0,0,
        86,516,1,0,0,0,88,534,1,0,0,0,90,544,1,0,0,0,92,547,1,0,0,0,94,554,
        1,0,0,0,96,97,5,65,0,0,97,98,5,115,0,0,98,99,5,115,0,0,99,100,5,
        105,0,0,100,101,5,103,0,0,101,102,5,110,0,0,102,103,5,109,0,0,103,
        104,5,101,0,0,104,105,5,110,0,0,105,106,5,116,0,0,106,108,1,0,0,
        0,107,109,5,115,0,0,108,107,1,0,0,0,108,109,1,0,0,0,109,110,1,0,
        0,0,110,111,6,0,0,0,111,3,1,0,0,0,112,113,5,119,0,0,113,114,5,49,
        0,0,114,115,1,0,0,0,115,116,6,1,0,0,116,5,1,0,0,0,117,119,7,0,0,
        0,118,117,1,0,0,0,118,119,1,0,0,0,119,120,1,0,0,0,120,121,3,16,7,
        0,121,7,1,0,0,0,122,124,7,0,0,0,123,122,1,0,0,0,123,124,1,0,0,0,
        124,127,1,0,0,0,125,128,3,16,7,0,126,128,3,12,5,0,127,125,1,0,0,
        0,127,126,1,0,0,0,128,9,1,0,0,0,129,131,7,0,0,0,130,129,1,0,0,0,
        130,131,1,0,0,0,131,134,1,0,0,0,132,135,3,16,7,0,133,135,3,12,5,
        0,134,132,1,0,0,0,134,133,1,0,0,0,135,141,1,0,0,0,136,138,7,1,0,
        0,137,139,7,0,0,0,138,137,1,0,0,0,138,139,1,0,0,0,139,140,1,0,0,
        0,140,142,3,16,7,0,141,136,1,0,0,0,141,142,1,0,0,0,142,11,1,0,0,
        0,143,144,3,16,7,0,144,145,5,46,0,0,145,146,3,16,7,0,146,150,1,0,
        0,0,147,148,5,46,0,0,148,150,3,16,7,0,149,143,1,0,0,0,149,147,1,
        0,0,0,150,13,1,0,0,0,151,152,7,2,0,0,152,15,1,0,0,0,153,155,3,14,
        6,0,154,153,1,0,0,0,155,156,1,0,0,0,156,154,1,0,0,0,156,157,1,0,
        0,0,157,17,1,0,0,0,158,160,5,35,0,0,159,158,1,0,0,0,160,161,1,0,
        0,0,161,159,1,0,0,0,161,162,1,0,0,0,162,166,1,0,0,0,163,165,8,3,
        0,0,164,163,1,0,0,0,165,168,1,0,0,0,166,164,1,0,0,0,166,167,1,0,
        0,0,167,172,1,0,0,0,168,166,1,0,0,0,169,171,5,35,0,0,170,169,1,0,
        0,0,171,174,1,0,0,0,172,170,1,0,0,0,172,173,1,0,0,0,173,178,1,0,
        0,0,174,172,1,0,0,0,175,177,8,3,0,0,176,175,1,0,0,0,177,180,1,0,
        0,0,178,176,1,0,0,0,178,179,1,0,0,0,179,181,1,0,0,0,180,178,1,0,
        0,0,181,182,6,8,1,0,182,19,1,0,0,0,183,185,5,33,0,0,184,183,1,0,
        0,0,185,186,1,0,0,0,186,184,1,0,0,0,186,187,1,0,0,0,187,191,1,0,
        0,0,188,190,8,3,0,0,189,188,1,0,0,0,190,193,1,0,0,0,191,189,1,0,
        0,0,191,192,1,0,0,0,192,197,1,0,0,0,193,191,1,0,0,0,194,196,5,33,
        0,0,195,194,1,0,0,0,196,199,1,0,0,0,197,195,1,0,0,0,197,198,1,0,
        0,0,198,203,1,0,0,0,199,197,1,0,0,0,200,202,8,3,0,0,201,200,1,0,
        0,0,202,205,1,0,0,0,203,201,1,0,0,0,203,204,1,0,0,0,204,206,1,0,
        0,0,205,203,1,0,0,0,206,207,6,9,1,0,207,21,1,0,0,0,208,210,5,59,
        0,0,209,208,1,0,0,0,210,211,1,0,0,0,211,209,1,0,0,0,211,212,1,0,
        0,0,212,216,1,0,0,0,213,215,8,3,0,0,214,213,1,0,0,0,215,218,1,0,
        0,0,216,214,1,0,0,0,216,217,1,0,0,0,217,222,1,0,0,0,218,216,1,0,
        0,0,219,221,5,59,0,0,220,219,1,0,0,0,221,224,1,0,0,0,222,220,1,0,
        0,0,222,223,1,0,0,0,223,228,1,0,0,0,224,222,1,0,0,0,225,227,8,3,
        0,0,226,225,1,0,0,0,227,230,1,0,0,0,228,226,1,0,0,0,228,229,1,0,
        0,0,229,231,1,0,0,0,230,228,1,0,0,0,231,232,6,10,1,0,232,23,1,0,
        0,0,233,238,3,42,20,0,234,235,7,4,0,0,235,237,3,42,20,0,236,234,
        1,0,0,0,237,240,1,0,0,0,238,236,1,0,0,0,238,239,1,0,0,0,239,25,1,
        0,0,0,240,238,1,0,0,0,241,242,3,24,11,0,242,243,5,45,0,0,243,244,
        3,24,11,0,244,27,1,0,0,0,245,246,3,24,11,0,246,247,5,45,0,0,247,
        248,3,24,11,0,248,249,5,45,0,0,249,250,3,24,11,0,250,29,1,0,0,0,
        251,252,3,24,11,0,252,253,5,45,0,0,253,254,3,24,11,0,254,255,5,45,
        0,0,255,256,3,24,11,0,256,257,5,45,0,0,257,258,3,24,11,0,258,31,
        1,0,0,0,259,260,3,42,20,0,260,33,1,0,0,0,261,262,7,5,0,0,262,35,
        1,0,0,0,263,266,3,34,16,0,264,266,3,14,6,0,265,263,1,0,0,0,265,264,
        1,0,0,0,266,37,1,0,0,0,267,270,3,36,17,0,268,270,7,6,0,0,269,267,
        1,0,0,0,269,268,1,0,0,0,270,39,1,0,0,0,271,274,3,38,18,0,272,274,
        7,7,0,0,273,271,1,0,0,0,273,272,1,0,0,0,274,41,1,0,0,0,275,279,3,
        38,18,0,276,278,3,40,19,0,277,276,1,0,0,0,278,281,1,0,0,0,279,277,
        1,0,0,0,279,280,1,0,0,0,280,43,1,0,0,0,281,279,1,0,0,0,282,284,7,
        8,0,0,283,282,1,0,0,0,284,285,1,0,0,0,285,283,1,0,0,0,285,286,1,
        0,0,0,286,287,1,0,0,0,287,288,6,21,2,0,288,45,1,0,0,0,289,291,7,
        3,0,0,290,289,1,0,0,0,291,292,1,0,0,0,292,290,1,0,0,0,292,293,1,
        0,0,0,293,47,1,0,0,0,294,295,7,9,0,0,295,49,1,0,0,0,296,301,5,123,
        0,0,297,300,3,50,24,0,298,300,9,0,0,0,299,297,1,0,0,0,299,298,1,
        0,0,0,300,303,1,0,0,0,301,302,1,0,0,0,301,299,1,0,0,0,302,304,1,
        0,0,0,303,301,1,0,0,0,304,305,5,125,0,0,305,306,1,0,0,0,306,307,
        6,24,1,0,307,51,1,0,0,0,308,334,3,48,23,0,309,311,3,48,23,0,310,
        312,5,47,0,0,311,310,1,0,0,0,312,313,1,0,0,0,313,311,1,0,0,0,313,
        314,1,0,0,0,314,334,1,0,0,0,315,317,3,48,23,0,316,318,5,42,0,0,317,
        316,1,0,0,0,318,319,1,0,0,0,319,317,1,0,0,0,319,320,1,0,0,0,320,
        334,1,0,0,0,321,323,3,48,23,0,322,324,5,61,0,0,323,322,1,0,0,0,324,
        325,1,0,0,0,325,323,1,0,0,0,325,326,1,0,0,0,326,334,1,0,0,0,327,
        328,5,82,0,0,328,329,5,69,0,0,329,330,5,77,0,0,330,331,5,65,0,0,
        331,332,5,82,0,0,332,334,5,75,0,0,333,308,1,0,0,0,333,309,1,0,0,
        0,333,315,1,0,0,0,333,321,1,0,0,0,333,327,1,0,0,0,334,338,1,0,0,
        0,335,337,5,32,0,0,336,335,1,0,0,0,337,340,1,0,0,0,338,336,1,0,0,
        0,338,339,1,0,0,0,339,341,1,0,0,0,340,338,1,0,0,0,341,342,3,46,22,
        0,342,343,1,0,0,0,343,344,6,25,1,0,344,53,1,0,0,0,345,371,3,48,23,
        0,346,348,3,48,23,0,347,349,5,47,0,0,348,347,1,0,0,0,349,350,1,0,
        0,0,350,348,1,0,0,0,350,351,1,0,0,0,351,371,1,0,0,0,352,354,3,48,
        23,0,353,355,5,42,0,0,354,353,1,0,0,0,355,356,1,0,0,0,356,354,1,
        0,0,0,356,357,1,0,0,0,357,371,1,0,0,0,358,360,3,48,23,0,359,361,
        5,61,0,0,360,359,1,0,0,0,361,362,1,0,0,0,362,360,1,0,0,0,362,363,
        1,0,0,0,363,371,1,0,0,0,364,365,5,82,0,0,365,366,5,69,0,0,366,367,
        5,77,0,0,367,368,5,65,0,0,368,369,5,82,0,0,369,371,5,75,0,0,370,
        345,1,0,0,0,370,346,1,0,0,0,370,352,1,0,0,0,370,358,1,0,0,0,370,
        364,1,0,0,0,371,375,1,0,0,0,372,374,8,3,0,0,373,372,1,0,0,0,374,
        377,1,0,0,0,375,373,1,0,0,0,375,376,1,0,0,0,376,378,1,0,0,0,377,
        375,1,0,0,0,378,379,3,46,22,0,379,380,1,0,0,0,380,381,6,26,1,0,381,
        55,1,0,0,0,382,383,5,119,0,0,383,384,5,49,0,0,384,57,1,0,0,0,385,
        386,5,119,0,0,386,387,5,50,0,0,387,59,1,0,0,0,388,389,5,119,0,0,
        389,390,5,51,0,0,390,61,1,0,0,0,391,392,5,119,0,0,392,393,5,52,0,
        0,393,63,1,0,0,0,394,395,5,68,0,0,395,396,5,101,0,0,396,397,5,118,
        0,0,397,398,5,32,0,0,398,399,5,119,0,0,399,400,5,49,0,0,400,65,1,
        0,0,0,401,402,5,68,0,0,402,403,5,101,0,0,403,404,5,118,0,0,404,405,
        5,32,0,0,405,406,5,119,0,0,406,407,5,50,0,0,407,67,1,0,0,0,408,409,
        5,68,0,0,409,410,5,101,0,0,410,411,5,118,0,0,411,412,5,32,0,0,412,
        413,5,119,0,0,413,414,5,51,0,0,414,69,1,0,0,0,415,416,5,68,0,0,416,
        417,5,101,0,0,417,418,5,118,0,0,418,419,5,32,0,0,419,420,5,119,0,
        0,420,421,5,52,0,0,421,71,1,0,0,0,422,423,5,70,0,0,423,424,5,105,
        0,0,424,425,5,116,0,0,425,426,5,32,0,0,426,427,5,72,0,0,427,428,
        5,101,0,0,428,429,5,105,0,0,429,430,5,103,0,0,430,431,5,104,0,0,
        431,432,5,116,0,0,432,434,1,0,0,0,433,435,5,115,0,0,434,433,1,0,
        0,0,434,435,1,0,0,0,435,73,1,0,0,0,436,437,5,68,0,0,437,438,5,97,
        0,0,438,439,5,116,0,0,439,440,5,97,0,0,440,442,5,32,0,0,441,436,
        1,0,0,0,441,442,1,0,0,0,442,443,1,0,0,0,443,444,5,72,0,0,444,445,
        5,101,0,0,445,446,5,105,0,0,446,447,5,103,0,0,447,448,5,104,0,0,
        448,449,5,116,0,0,449,451,1,0,0,0,450,452,5,115,0,0,451,450,1,0,
        0,0,451,452,1,0,0,0,452,458,1,0,0,0,453,454,5,68,0,0,454,455,5,97,
        0,0,455,456,5,116,0,0,456,458,5,97,0,0,457,441,1,0,0,0,457,453,1,
        0,0,0,458,75,1,0,0,0,459,460,5,86,0,0,460,461,5,111,0,0,461,462,
        5,108,0,0,462,463,5,117,0,0,463,464,5,109,0,0,464,465,5,101,0,0,
        465,77,1,0,0,0,466,467,5,83,0,0,467,468,5,47,0,0,468,469,5,78,0,
        0,469,79,1,0,0,0,470,471,5,65,0,0,471,472,5,116,0,0,472,473,5,111,
        0,0,473,474,5,109,0,0,474,481,5,49,0,0,475,476,5,65,0,0,476,477,
        5,84,0,0,477,478,5,79,0,0,478,479,5,77,0,0,479,481,5,49,0,0,480,
        470,1,0,0,0,480,475,1,0,0,0,481,81,1,0,0,0,482,483,5,65,0,0,483,
        484,5,116,0,0,484,485,5,111,0,0,485,486,5,109,0,0,486,493,5,50,0,
        0,487,488,5,65,0,0,488,489,5,84,0,0,489,490,5,79,0,0,490,491,5,77,
        0,0,491,493,5,50,0,0,492,482,1,0,0,0,492,487,1,0,0,0,493,83,1,0,
        0,0,494,495,5,65,0,0,495,496,5,116,0,0,496,497,5,111,0,0,497,498,
        5,109,0,0,498,505,5,51,0,0,499,500,5,65,0,0,500,501,5,84,0,0,501,
        502,5,79,0,0,502,503,5,77,0,0,503,505,5,51,0,0,504,494,1,0,0,0,504,
        499,1,0,0,0,505,85,1,0,0,0,506,507,5,65,0,0,507,508,5,116,0,0,508,
        509,5,111,0,0,509,510,5,109,0,0,510,517,5,52,0,0,511,512,5,65,0,
        0,512,513,5,84,0,0,513,514,5,79,0,0,514,515,5,77,0,0,515,517,5,52,
        0,0,516,506,1,0,0,0,516,511,1,0,0,0,517,87,1,0,0,0,518,519,5,68,
        0,0,519,520,5,105,0,0,520,521,5,115,0,0,521,522,5,116,0,0,522,523,
        5,97,0,0,523,524,5,110,0,0,524,525,5,99,0,0,525,535,5,101,0,0,526,
        527,5,68,0,0,527,528,5,73,0,0,528,529,5,83,0,0,529,530,5,84,0,0,
        530,531,5,65,0,0,531,532,5,78,0,0,532,533,5,67,0,0,533,535,5,69,
        0,0,534,518,1,0,0,0,534,526,1,0,0,0,535,89,1,0,0,0,536,537,5,78,
        0,0,537,538,5,111,0,0,538,539,5,116,0,0,539,545,5,101,0,0,540,541,
        5,78,0,0,541,542,5,79,0,0,542,543,5,84,0,0,543,545,5,69,0,0,544,
        536,1,0,0,0,544,540,1,0,0,0,545,91,1,0,0,0,546,548,7,8,0,0,547,546,
        1,0,0,0,548,549,1,0,0,0,549,547,1,0,0,0,549,550,1,0,0,0,550,551,
        1,0,0,0,551,552,6,45,2,0,552,93,1,0,0,0,553,555,7,3,0,0,554,553,
        1,0,0,0,555,556,1,0,0,0,556,554,1,0,0,0,556,557,1,0,0,0,557,558,
        1,0,0,0,558,559,6,46,3,0,559,95,1,0,0,0,55,0,1,108,118,123,127,130,
        134,138,141,149,156,161,166,172,178,186,191,197,203,211,216,222,
        228,238,265,269,273,279,285,292,299,301,313,319,325,333,338,350,
        356,362,370,375,434,441,451,457,480,492,504,516,534,544,549,556,
        4,5,1,0,0,1,0,6,0,0,4,0,0
    ]

class SparkyPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LABEL_MODE = 1

    Assignment = 1
    W1 = 2
    Integer = 3
    Float = 4
    Real = 5
    SHARP_COMMENT = 6
    EXCLM_COMMENT = 7
    SMCLN_COMMENT = 8
    Assignment_2d_ex = 9
    Assignment_3d_ex = 10
    Assignment_4d_ex = 11
    Simple_name = 12
    SPACE = 13
    RETURN = 14
    ENCLOSE_COMMENT = 15
    SECTION_COMMENT = 16
    LINE_COMMENT = 17
    W1_LA = 18
    W2_LA = 19
    W3_LA = 20
    W4_LA = 21
    Dev_w1_LA = 22
    Dev_w2_LA = 23
    Dev_w3_LA = 24
    Dev_w4_LA = 25
    Dummy_H_LA = 26
    Height_LA = 27
    Volume_LA = 28
    S_N_LA = 29
    Atom1_LA = 30
    Atom2_LA = 31
    Atom3_LA = 32
    Atom4_LA = 33
    Distance_LA = 34
    Note_LA = 35
    SPACE_LA = 36
    RETURN_LA = 37

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "LABEL_MODE" ]

    literalNames = [ "<INVALID>",
            "'w2'", "'w3'", "'w4'", "'Dev w1'", "'Dev w2'", "'Dev w3'", 
            "'Dev w4'", "'Volume'", "'S/N'" ]

    symbolicNames = [ "<INVALID>",
            "Assignment", "W1", "Integer", "Float", "Real", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Assignment_2d_ex", "Assignment_3d_ex", 
            "Assignment_4d_ex", "Simple_name", "SPACE", "RETURN", "ENCLOSE_COMMENT", 
            "SECTION_COMMENT", "LINE_COMMENT", "W1_LA", "W2_LA", "W3_LA", 
            "W4_LA", "Dev_w1_LA", "Dev_w2_LA", "Dev_w3_LA", "Dev_w4_LA", 
            "Dummy_H_LA", "Height_LA", "Volume_LA", "S_N_LA", "Atom1_LA", 
            "Atom2_LA", "Atom3_LA", "Atom4_LA", "Distance_LA", "Note_LA", 
            "SPACE_LA", "RETURN_LA" ]

    ruleNames = [ "Assignment", "W1", "Integer", "Float", "Real", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", 
                  "SMCLN_COMMENT", "ASS_EACH_AXIS", "Assignment_2d_ex", 
                  "Assignment_3d_ex", "Assignment_4d_ex", "Simple_name", 
                  "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", 
                  "SPACE", "RETURN", "COMMENT_START_CHAR", "ENCLOSE_COMMENT", 
                  "SECTION_COMMENT", "LINE_COMMENT", "W1_LA", "W2_LA", "W3_LA", 
                  "W4_LA", "Dev_w1_LA", "Dev_w2_LA", "Dev_w3_LA", "Dev_w4_LA", 
                  "Dummy_H_LA", "Height_LA", "Volume_LA", "S_N_LA", "Atom1_LA", 
                  "Atom2_LA", "Atom3_LA", "Atom4_LA", "Distance_LA", "Note_LA", 
                  "SPACE_LA", "RETURN_LA" ]

    grammarFileName = "SparkyPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


