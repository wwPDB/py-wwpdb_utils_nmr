# Generated from SparkyPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,32,498,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,3,0,99,8,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,3,2,109,
        8,2,1,2,1,2,1,3,3,3,114,8,3,1,3,1,3,3,3,118,8,3,1,4,3,4,121,8,4,
        1,4,1,4,3,4,125,8,4,1,4,1,4,3,4,129,8,4,1,4,3,4,132,8,4,1,5,1,5,
        1,5,1,5,1,5,1,5,3,5,140,8,5,1,6,1,6,1,7,4,7,145,8,7,11,7,12,7,146,
        1,8,4,8,150,8,8,11,8,12,8,151,1,8,5,8,155,8,8,10,8,12,8,158,9,8,
        1,8,5,8,161,8,8,10,8,12,8,164,9,8,1,8,5,8,167,8,8,10,8,12,8,170,
        9,8,1,8,1,8,1,9,4,9,175,8,9,11,9,12,9,176,1,9,5,9,180,8,9,10,9,12,
        9,183,9,9,1,9,5,9,186,8,9,10,9,12,9,189,9,9,1,9,5,9,192,8,9,10,9,
        12,9,195,9,9,1,9,1,9,1,10,4,10,200,8,10,11,10,12,10,201,1,10,5,10,
        205,8,10,10,10,12,10,208,9,10,1,10,5,10,211,8,10,10,10,12,10,214,
        9,10,1,10,5,10,217,8,10,10,10,12,10,220,9,10,1,10,1,10,1,11,1,11,
        1,11,5,11,227,8,11,10,11,12,11,230,9,11,1,12,1,12,1,12,1,12,1,13,
        1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
        1,15,1,15,1,16,1,16,1,17,1,17,3,17,256,8,17,1,18,1,18,3,18,260,8,
        18,1,19,1,19,3,19,264,8,19,1,20,1,20,5,20,268,8,20,10,20,12,20,271,
        9,20,1,21,4,21,274,8,21,11,21,12,21,275,1,21,1,21,1,22,4,22,281,
        8,22,11,22,12,22,282,1,23,1,23,1,24,1,24,1,24,5,24,290,8,24,10,24,
        12,24,293,9,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,4,25,302,8,25,
        11,25,12,25,303,1,25,1,25,4,25,308,8,25,11,25,12,25,309,1,25,1,25,
        4,25,314,8,25,11,25,12,25,315,1,25,1,25,1,25,1,25,1,25,1,25,3,25,
        324,8,25,1,25,5,25,327,8,25,10,25,12,25,330,9,25,1,25,1,25,1,25,
        1,25,1,26,1,26,1,26,4,26,339,8,26,11,26,12,26,340,1,26,1,26,4,26,
        345,8,26,11,26,12,26,346,1,26,1,26,4,26,351,8,26,11,26,12,26,352,
        1,26,1,26,1,26,1,26,1,26,1,26,3,26,361,8,26,1,26,5,26,364,8,26,10,
        26,12,26,367,9,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,
        28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,
        31,1,31,1,31,1,31,1,31,1,31,3,31,397,8,31,1,32,1,32,1,32,1,32,1,
        32,3,32,404,8,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,3,32,414,
        8,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,
        1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,3,35,437,8,35,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,449,8,36,1,37,
        1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,3,37,461,8,37,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,3,38,473,8,38,1,39,
        1,39,1,39,1,39,1,39,1,39,1,39,1,39,3,39,483,8,39,1,40,4,40,486,8,
        40,11,40,12,40,487,1,40,1,40,1,41,4,41,493,8,41,11,41,12,41,494,
        1,41,1,41,1,291,0,42,2,1,4,2,6,3,8,4,10,5,12,0,14,0,16,0,18,6,20,
        7,22,8,24,0,26,9,28,10,30,11,32,12,34,0,36,0,38,0,40,0,42,0,44,13,
        46,14,48,0,50,15,52,16,54,17,56,18,58,19,60,20,62,21,64,22,66,23,
        68,24,70,25,72,26,74,27,76,28,78,29,80,30,82,31,84,32,2,0,1,10,2,
        0,43,43,45,45,2,0,69,69,101,101,1,0,48,57,2,0,10,10,13,13,4,0,38,
        38,44,44,46,47,58,59,2,0,65,90,97,122,4,0,42,43,45,45,63,63,95,95,
        3,0,34,35,37,37,39,39,2,0,9,9,32,32,8,0,33,33,35,35,38,38,42,42,
        47,47,59,59,61,61,92,92,543,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,
        0,8,1,0,0,0,0,10,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,
        0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,44,1,0,0,0,
        0,46,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,1,56,1,0,0,0,
        1,58,1,0,0,0,1,60,1,0,0,0,1,62,1,0,0,0,1,64,1,0,0,0,1,66,1,0,0,0,
        1,68,1,0,0,0,1,70,1,0,0,0,1,72,1,0,0,0,1,74,1,0,0,0,1,76,1,0,0,0,
        1,78,1,0,0,0,1,80,1,0,0,0,1,82,1,0,0,0,1,84,1,0,0,0,2,86,1,0,0,0,
        4,102,1,0,0,0,6,108,1,0,0,0,8,113,1,0,0,0,10,120,1,0,0,0,12,139,
        1,0,0,0,14,141,1,0,0,0,16,144,1,0,0,0,18,149,1,0,0,0,20,174,1,0,
        0,0,22,199,1,0,0,0,24,223,1,0,0,0,26,231,1,0,0,0,28,235,1,0,0,0,
        30,241,1,0,0,0,32,249,1,0,0,0,34,251,1,0,0,0,36,255,1,0,0,0,38,259,
        1,0,0,0,40,263,1,0,0,0,42,265,1,0,0,0,44,273,1,0,0,0,46,280,1,0,
        0,0,48,284,1,0,0,0,50,286,1,0,0,0,52,323,1,0,0,0,54,360,1,0,0,0,
        56,372,1,0,0,0,58,375,1,0,0,0,60,378,1,0,0,0,62,381,1,0,0,0,64,384,
        1,0,0,0,66,403,1,0,0,0,68,415,1,0,0,0,70,422,1,0,0,0,72,436,1,0,
        0,0,74,448,1,0,0,0,76,460,1,0,0,0,78,472,1,0,0,0,80,482,1,0,0,0,
        82,485,1,0,0,0,84,492,1,0,0,0,86,87,5,65,0,0,87,88,5,115,0,0,88,
        89,5,115,0,0,89,90,5,105,0,0,90,91,5,103,0,0,91,92,5,110,0,0,92,
        93,5,109,0,0,93,94,5,101,0,0,94,95,5,110,0,0,95,96,5,116,0,0,96,
        98,1,0,0,0,97,99,5,115,0,0,98,97,1,0,0,0,98,99,1,0,0,0,99,100,1,
        0,0,0,100,101,6,0,0,0,101,3,1,0,0,0,102,103,5,119,0,0,103,104,5,
        49,0,0,104,105,1,0,0,0,105,106,6,1,0,0,106,5,1,0,0,0,107,109,7,0,
        0,0,108,107,1,0,0,0,108,109,1,0,0,0,109,110,1,0,0,0,110,111,3,16,
        7,0,111,7,1,0,0,0,112,114,7,0,0,0,113,112,1,0,0,0,113,114,1,0,0,
        0,114,117,1,0,0,0,115,118,3,16,7,0,116,118,3,12,5,0,117,115,1,0,
        0,0,117,116,1,0,0,0,118,9,1,0,0,0,119,121,7,0,0,0,120,119,1,0,0,
        0,120,121,1,0,0,0,121,124,1,0,0,0,122,125,3,16,7,0,123,125,3,12,
        5,0,124,122,1,0,0,0,124,123,1,0,0,0,125,131,1,0,0,0,126,128,7,1,
        0,0,127,129,7,0,0,0,128,127,1,0,0,0,128,129,1,0,0,0,129,130,1,0,
        0,0,130,132,3,16,7,0,131,126,1,0,0,0,131,132,1,0,0,0,132,11,1,0,
        0,0,133,134,3,16,7,0,134,135,5,46,0,0,135,136,3,16,7,0,136,140,1,
        0,0,0,137,138,5,46,0,0,138,140,3,16,7,0,139,133,1,0,0,0,139,137,
        1,0,0,0,140,13,1,0,0,0,141,142,7,2,0,0,142,15,1,0,0,0,143,145,3,
        14,6,0,144,143,1,0,0,0,145,146,1,0,0,0,146,144,1,0,0,0,146,147,1,
        0,0,0,147,17,1,0,0,0,148,150,5,35,0,0,149,148,1,0,0,0,150,151,1,
        0,0,0,151,149,1,0,0,0,151,152,1,0,0,0,152,156,1,0,0,0,153,155,8,
        3,0,0,154,153,1,0,0,0,155,158,1,0,0,0,156,154,1,0,0,0,156,157,1,
        0,0,0,157,162,1,0,0,0,158,156,1,0,0,0,159,161,5,35,0,0,160,159,1,
        0,0,0,161,164,1,0,0,0,162,160,1,0,0,0,162,163,1,0,0,0,163,168,1,
        0,0,0,164,162,1,0,0,0,165,167,8,3,0,0,166,165,1,0,0,0,167,170,1,
        0,0,0,168,166,1,0,0,0,168,169,1,0,0,0,169,171,1,0,0,0,170,168,1,
        0,0,0,171,172,6,8,1,0,172,19,1,0,0,0,173,175,5,33,0,0,174,173,1,
        0,0,0,175,176,1,0,0,0,176,174,1,0,0,0,176,177,1,0,0,0,177,181,1,
        0,0,0,178,180,8,3,0,0,179,178,1,0,0,0,180,183,1,0,0,0,181,179,1,
        0,0,0,181,182,1,0,0,0,182,187,1,0,0,0,183,181,1,0,0,0,184,186,5,
        33,0,0,185,184,1,0,0,0,186,189,1,0,0,0,187,185,1,0,0,0,187,188,1,
        0,0,0,188,193,1,0,0,0,189,187,1,0,0,0,190,192,8,3,0,0,191,190,1,
        0,0,0,192,195,1,0,0,0,193,191,1,0,0,0,193,194,1,0,0,0,194,196,1,
        0,0,0,195,193,1,0,0,0,196,197,6,9,1,0,197,21,1,0,0,0,198,200,5,59,
        0,0,199,198,1,0,0,0,200,201,1,0,0,0,201,199,1,0,0,0,201,202,1,0,
        0,0,202,206,1,0,0,0,203,205,8,3,0,0,204,203,1,0,0,0,205,208,1,0,
        0,0,206,204,1,0,0,0,206,207,1,0,0,0,207,212,1,0,0,0,208,206,1,0,
        0,0,209,211,5,59,0,0,210,209,1,0,0,0,211,214,1,0,0,0,212,210,1,0,
        0,0,212,213,1,0,0,0,213,218,1,0,0,0,214,212,1,0,0,0,215,217,8,3,
        0,0,216,215,1,0,0,0,217,220,1,0,0,0,218,216,1,0,0,0,218,219,1,0,
        0,0,219,221,1,0,0,0,220,218,1,0,0,0,221,222,6,10,1,0,222,23,1,0,
        0,0,223,228,3,42,20,0,224,225,7,4,0,0,225,227,3,42,20,0,226,224,
        1,0,0,0,227,230,1,0,0,0,228,226,1,0,0,0,228,229,1,0,0,0,229,25,1,
        0,0,0,230,228,1,0,0,0,231,232,3,24,11,0,232,233,5,45,0,0,233,234,
        3,24,11,0,234,27,1,0,0,0,235,236,3,24,11,0,236,237,5,45,0,0,237,
        238,3,24,11,0,238,239,5,45,0,0,239,240,3,24,11,0,240,29,1,0,0,0,
        241,242,3,24,11,0,242,243,5,45,0,0,243,244,3,24,11,0,244,245,5,45,
        0,0,245,246,3,24,11,0,246,247,5,45,0,0,247,248,3,24,11,0,248,31,
        1,0,0,0,249,250,3,42,20,0,250,33,1,0,0,0,251,252,7,5,0,0,252,35,
        1,0,0,0,253,256,3,34,16,0,254,256,3,14,6,0,255,253,1,0,0,0,255,254,
        1,0,0,0,256,37,1,0,0,0,257,260,3,36,17,0,258,260,7,6,0,0,259,257,
        1,0,0,0,259,258,1,0,0,0,260,39,1,0,0,0,261,264,3,38,18,0,262,264,
        7,7,0,0,263,261,1,0,0,0,263,262,1,0,0,0,264,41,1,0,0,0,265,269,3,
        38,18,0,266,268,3,40,19,0,267,266,1,0,0,0,268,271,1,0,0,0,269,267,
        1,0,0,0,269,270,1,0,0,0,270,43,1,0,0,0,271,269,1,0,0,0,272,274,7,
        8,0,0,273,272,1,0,0,0,274,275,1,0,0,0,275,273,1,0,0,0,275,276,1,
        0,0,0,276,277,1,0,0,0,277,278,6,21,2,0,278,45,1,0,0,0,279,281,7,
        3,0,0,280,279,1,0,0,0,281,282,1,0,0,0,282,280,1,0,0,0,282,283,1,
        0,0,0,283,47,1,0,0,0,284,285,7,9,0,0,285,49,1,0,0,0,286,291,5,123,
        0,0,287,290,3,50,24,0,288,290,9,0,0,0,289,287,1,0,0,0,289,288,1,
        0,0,0,290,293,1,0,0,0,291,292,1,0,0,0,291,289,1,0,0,0,292,294,1,
        0,0,0,293,291,1,0,0,0,294,295,5,125,0,0,295,296,1,0,0,0,296,297,
        6,24,1,0,297,51,1,0,0,0,298,324,3,48,23,0,299,301,3,48,23,0,300,
        302,5,47,0,0,301,300,1,0,0,0,302,303,1,0,0,0,303,301,1,0,0,0,303,
        304,1,0,0,0,304,324,1,0,0,0,305,307,3,48,23,0,306,308,5,42,0,0,307,
        306,1,0,0,0,308,309,1,0,0,0,309,307,1,0,0,0,309,310,1,0,0,0,310,
        324,1,0,0,0,311,313,3,48,23,0,312,314,5,61,0,0,313,312,1,0,0,0,314,
        315,1,0,0,0,315,313,1,0,0,0,315,316,1,0,0,0,316,324,1,0,0,0,317,
        318,5,82,0,0,318,319,5,69,0,0,319,320,5,77,0,0,320,321,5,65,0,0,
        321,322,5,82,0,0,322,324,5,75,0,0,323,298,1,0,0,0,323,299,1,0,0,
        0,323,305,1,0,0,0,323,311,1,0,0,0,323,317,1,0,0,0,324,328,1,0,0,
        0,325,327,5,32,0,0,326,325,1,0,0,0,327,330,1,0,0,0,328,326,1,0,0,
        0,328,329,1,0,0,0,329,331,1,0,0,0,330,328,1,0,0,0,331,332,3,46,22,
        0,332,333,1,0,0,0,333,334,6,25,1,0,334,53,1,0,0,0,335,361,3,48,23,
        0,336,338,3,48,23,0,337,339,5,47,0,0,338,337,1,0,0,0,339,340,1,0,
        0,0,340,338,1,0,0,0,340,341,1,0,0,0,341,361,1,0,0,0,342,344,3,48,
        23,0,343,345,5,42,0,0,344,343,1,0,0,0,345,346,1,0,0,0,346,344,1,
        0,0,0,346,347,1,0,0,0,347,361,1,0,0,0,348,350,3,48,23,0,349,351,
        5,61,0,0,350,349,1,0,0,0,351,352,1,0,0,0,352,350,1,0,0,0,352,353,
        1,0,0,0,353,361,1,0,0,0,354,355,5,82,0,0,355,356,5,69,0,0,356,357,
        5,77,0,0,357,358,5,65,0,0,358,359,5,82,0,0,359,361,5,75,0,0,360,
        335,1,0,0,0,360,336,1,0,0,0,360,342,1,0,0,0,360,348,1,0,0,0,360,
        354,1,0,0,0,361,365,1,0,0,0,362,364,8,3,0,0,363,362,1,0,0,0,364,
        367,1,0,0,0,365,363,1,0,0,0,365,366,1,0,0,0,366,368,1,0,0,0,367,
        365,1,0,0,0,368,369,3,46,22,0,369,370,1,0,0,0,370,371,6,26,1,0,371,
        55,1,0,0,0,372,373,5,119,0,0,373,374,5,49,0,0,374,57,1,0,0,0,375,
        376,5,119,0,0,376,377,5,50,0,0,377,59,1,0,0,0,378,379,5,119,0,0,
        379,380,5,51,0,0,380,61,1,0,0,0,381,382,5,119,0,0,382,383,5,52,0,
        0,383,63,1,0,0,0,384,385,5,70,0,0,385,386,5,105,0,0,386,387,5,116,
        0,0,387,388,5,32,0,0,388,389,5,72,0,0,389,390,5,101,0,0,390,391,
        5,105,0,0,391,392,5,103,0,0,392,393,5,104,0,0,393,394,5,116,0,0,
        394,396,1,0,0,0,395,397,5,115,0,0,396,395,1,0,0,0,396,397,1,0,0,
        0,397,65,1,0,0,0,398,399,5,68,0,0,399,400,5,97,0,0,400,401,5,116,
        0,0,401,402,5,97,0,0,402,404,5,32,0,0,403,398,1,0,0,0,403,404,1,
        0,0,0,404,405,1,0,0,0,405,406,5,72,0,0,406,407,5,101,0,0,407,408,
        5,105,0,0,408,409,5,103,0,0,409,410,5,104,0,0,410,411,5,116,0,0,
        411,413,1,0,0,0,412,414,5,115,0,0,413,412,1,0,0,0,413,414,1,0,0,
        0,414,67,1,0,0,0,415,416,5,86,0,0,416,417,5,111,0,0,417,418,5,108,
        0,0,418,419,5,117,0,0,419,420,5,109,0,0,420,421,5,101,0,0,421,69,
        1,0,0,0,422,423,5,83,0,0,423,424,5,47,0,0,424,425,5,78,0,0,425,71,
        1,0,0,0,426,427,5,65,0,0,427,428,5,116,0,0,428,429,5,111,0,0,429,
        430,5,109,0,0,430,437,5,49,0,0,431,432,5,65,0,0,432,433,5,84,0,0,
        433,434,5,79,0,0,434,435,5,77,0,0,435,437,5,49,0,0,436,426,1,0,0,
        0,436,431,1,0,0,0,437,73,1,0,0,0,438,439,5,65,0,0,439,440,5,116,
        0,0,440,441,5,111,0,0,441,442,5,109,0,0,442,449,5,50,0,0,443,444,
        5,65,0,0,444,445,5,84,0,0,445,446,5,79,0,0,446,447,5,77,0,0,447,
        449,5,50,0,0,448,438,1,0,0,0,448,443,1,0,0,0,449,75,1,0,0,0,450,
        451,5,65,0,0,451,452,5,116,0,0,452,453,5,111,0,0,453,454,5,109,0,
        0,454,461,5,51,0,0,455,456,5,65,0,0,456,457,5,84,0,0,457,458,5,79,
        0,0,458,459,5,77,0,0,459,461,5,51,0,0,460,450,1,0,0,0,460,455,1,
        0,0,0,461,77,1,0,0,0,462,463,5,65,0,0,463,464,5,116,0,0,464,465,
        5,111,0,0,465,466,5,109,0,0,466,473,5,52,0,0,467,468,5,65,0,0,468,
        469,5,84,0,0,469,470,5,79,0,0,470,471,5,77,0,0,471,473,5,52,0,0,
        472,462,1,0,0,0,472,467,1,0,0,0,473,79,1,0,0,0,474,475,5,78,0,0,
        475,476,5,111,0,0,476,477,5,116,0,0,477,483,5,101,0,0,478,479,5,
        78,0,0,479,480,5,79,0,0,480,481,5,84,0,0,481,483,5,69,0,0,482,474,
        1,0,0,0,482,478,1,0,0,0,483,81,1,0,0,0,484,486,7,8,0,0,485,484,1,
        0,0,0,486,487,1,0,0,0,487,485,1,0,0,0,487,488,1,0,0,0,488,489,1,
        0,0,0,489,490,6,40,2,0,490,83,1,0,0,0,491,493,7,3,0,0,492,491,1,
        0,0,0,493,494,1,0,0,0,494,492,1,0,0,0,494,495,1,0,0,0,495,496,1,
        0,0,0,496,497,6,41,3,0,497,85,1,0,0,0,53,0,1,98,108,113,117,120,
        124,128,131,139,146,151,156,162,168,176,181,187,193,201,206,212,
        218,228,255,259,263,269,275,282,289,291,303,309,315,323,328,340,
        346,352,360,365,396,403,413,436,448,460,472,482,487,494,4,5,1,0,
        0,1,0,6,0,0,4,0,0
    ]

class SparkyPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LABEL_MODE = 1

    Assignment = 1
    W1 = 2
    Integer = 3
    Float = 4
    Real = 5
    SHARP_COMMENT = 6
    EXCLM_COMMENT = 7
    SMCLN_COMMENT = 8
    Assignment_2d_ex = 9
    Assignment_3d_ex = 10
    Assignment_4d_ex = 11
    Simple_name = 12
    SPACE = 13
    RETURN = 14
    ENCLOSE_COMMENT = 15
    SECTION_COMMENT = 16
    LINE_COMMENT = 17
    W1_LA = 18
    W2_LA = 19
    W3_LA = 20
    W4_LA = 21
    Dummy_H_LA = 22
    Height_LA = 23
    Volume_LA = 24
    S_N_LA = 25
    Atom1_LA = 26
    Atom2_LA = 27
    Atom3_LA = 28
    Atom4_LA = 29
    Note_LA = 30
    SPACE_LA = 31
    RETURN_LA = 32

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "LABEL_MODE" ]

    literalNames = [ "<INVALID>",
            "'w2'", "'w3'", "'w4'", "'Volume'", "'S/N'" ]

    symbolicNames = [ "<INVALID>",
            "Assignment", "W1", "Integer", "Float", "Real", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Assignment_2d_ex", "Assignment_3d_ex", 
            "Assignment_4d_ex", "Simple_name", "SPACE", "RETURN", "ENCLOSE_COMMENT", 
            "SECTION_COMMENT", "LINE_COMMENT", "W1_LA", "W2_LA", "W3_LA", 
            "W4_LA", "Dummy_H_LA", "Height_LA", "Volume_LA", "S_N_LA", "Atom1_LA", 
            "Atom2_LA", "Atom3_LA", "Atom4_LA", "Note_LA", "SPACE_LA", "RETURN_LA" ]

    ruleNames = [ "Assignment", "W1", "Integer", "Float", "Real", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", 
                  "SMCLN_COMMENT", "ASS_EACH_AXIS", "Assignment_2d_ex", 
                  "Assignment_3d_ex", "Assignment_4d_ex", "Simple_name", 
                  "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", 
                  "SPACE", "RETURN", "COMMENT_START_CHAR", "ENCLOSE_COMMENT", 
                  "SECTION_COMMENT", "LINE_COMMENT", "W1_LA", "W2_LA", "W3_LA", 
                  "W4_LA", "Dummy_H_LA", "Height_LA", "Volume_LA", "S_N_LA", 
                  "Atom1_LA", "Atom2_LA", "Atom3_LA", "Atom4_LA", "Note_LA", 
                  "SPACE_LA", "RETURN_LA" ]

    grammarFileName = "SparkyPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


