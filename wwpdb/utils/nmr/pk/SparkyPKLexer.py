# Generated from SparkyPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,26,404,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,3,2,92,8,2,1,2,1,2,1,3,3,3,97,
        8,3,1,3,1,3,3,3,101,8,3,1,4,3,4,104,8,4,1,4,1,4,3,4,108,8,4,1,4,
        1,4,3,4,112,8,4,1,4,3,4,115,8,4,1,5,1,5,1,5,1,5,1,5,1,5,3,5,123,
        8,5,1,6,1,6,1,7,4,7,128,8,7,11,7,12,7,129,1,8,4,8,133,8,8,11,8,12,
        8,134,1,8,5,8,138,8,8,10,8,12,8,141,9,8,1,8,5,8,144,8,8,10,8,12,
        8,147,9,8,1,8,5,8,150,8,8,10,8,12,8,153,9,8,1,8,1,8,1,9,4,9,158,
        8,9,11,9,12,9,159,1,9,5,9,163,8,9,10,9,12,9,166,9,9,1,9,5,9,169,
        8,9,10,9,12,9,172,9,9,1,9,5,9,175,8,9,10,9,12,9,178,9,9,1,9,1,9,
        1,10,4,10,183,8,10,11,10,12,10,184,1,10,5,10,188,8,10,10,10,12,10,
        191,9,10,1,10,5,10,194,8,10,10,10,12,10,197,9,10,1,10,5,10,200,8,
        10,10,10,12,10,203,9,10,1,10,1,10,1,11,1,11,1,11,5,11,210,8,11,10,
        11,12,11,213,9,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,
        13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,
        17,1,17,3,17,239,8,17,1,18,1,18,3,18,243,8,18,1,19,1,19,3,19,247,
        8,19,1,20,1,20,5,20,251,8,20,10,20,12,20,254,9,20,1,21,4,21,257,
        8,21,11,21,12,21,258,1,21,1,21,1,22,4,22,264,8,22,11,22,12,22,265,
        1,23,1,23,1,23,5,23,271,8,23,10,23,12,23,274,9,23,1,23,1,23,1,23,
        1,23,1,24,1,24,1,24,4,24,283,8,24,11,24,12,24,284,1,24,1,24,4,24,
        289,8,24,11,24,12,24,290,1,24,1,24,4,24,295,8,24,11,24,12,24,296,
        1,24,1,24,1,24,1,24,1,24,1,24,3,24,305,8,24,1,24,5,24,308,8,24,10,
        24,12,24,311,9,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,4,25,320,8,
        25,11,25,12,25,321,1,25,1,25,4,25,326,8,25,11,25,12,25,327,1,25,
        1,25,4,25,332,8,25,11,25,12,25,333,1,25,1,25,1,25,1,25,1,25,1,25,
        3,25,342,8,25,1,25,5,25,345,8,25,10,25,12,25,348,9,25,1,25,1,25,
        1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,
        1,29,1,30,1,30,1,30,1,30,1,30,3,30,371,8,30,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,
        1,32,1,33,4,33,392,8,33,11,33,12,33,393,1,33,1,33,1,34,4,34,399,
        8,34,11,34,12,34,400,1,34,1,34,1,272,0,35,2,1,4,2,6,3,8,4,10,5,12,
        0,14,0,16,0,18,6,20,7,22,8,24,0,26,9,28,10,30,11,32,12,34,0,36,0,
        38,0,40,0,42,0,44,13,46,14,48,15,50,16,52,17,54,18,56,19,58,20,60,
        21,62,22,64,23,66,24,68,25,70,26,2,0,1,10,2,0,43,43,45,45,2,0,69,
        69,101,101,1,0,48,57,2,0,10,10,13,13,4,0,38,38,44,44,46,47,58,59,
        2,0,65,90,97,122,4,0,42,43,45,45,63,63,95,95,3,0,34,35,37,37,39,
        39,2,0,9,9,32,32,5,0,33,33,35,35,38,38,59,59,92,92,442,0,2,1,0,0,
        0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,18,1,0,0,0,
        0,20,1,0,0,0,0,22,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,
        0,32,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,
        0,52,1,0,0,0,1,54,1,0,0,0,1,56,1,0,0,0,1,58,1,0,0,0,1,60,1,0,0,0,
        1,62,1,0,0,0,1,64,1,0,0,0,1,66,1,0,0,0,1,68,1,0,0,0,1,70,1,0,0,0,
        2,72,1,0,0,0,4,85,1,0,0,0,6,91,1,0,0,0,8,96,1,0,0,0,10,103,1,0,0,
        0,12,122,1,0,0,0,14,124,1,0,0,0,16,127,1,0,0,0,18,132,1,0,0,0,20,
        157,1,0,0,0,22,182,1,0,0,0,24,206,1,0,0,0,26,214,1,0,0,0,28,218,
        1,0,0,0,30,224,1,0,0,0,32,232,1,0,0,0,34,234,1,0,0,0,36,238,1,0,
        0,0,38,242,1,0,0,0,40,246,1,0,0,0,42,248,1,0,0,0,44,256,1,0,0,0,
        46,263,1,0,0,0,48,267,1,0,0,0,50,304,1,0,0,0,52,341,1,0,0,0,54,353,
        1,0,0,0,56,356,1,0,0,0,58,359,1,0,0,0,60,362,1,0,0,0,62,370,1,0,
        0,0,64,379,1,0,0,0,66,386,1,0,0,0,68,391,1,0,0,0,70,398,1,0,0,0,
        72,73,5,65,0,0,73,74,5,115,0,0,74,75,5,115,0,0,75,76,5,105,0,0,76,
        77,5,103,0,0,77,78,5,110,0,0,78,79,5,109,0,0,79,80,5,101,0,0,80,
        81,5,110,0,0,81,82,5,116,0,0,82,83,1,0,0,0,83,84,6,0,0,0,84,3,1,
        0,0,0,85,86,5,119,0,0,86,87,5,49,0,0,87,88,1,0,0,0,88,89,6,1,0,0,
        89,5,1,0,0,0,90,92,7,0,0,0,91,90,1,0,0,0,91,92,1,0,0,0,92,93,1,0,
        0,0,93,94,3,16,7,0,94,7,1,0,0,0,95,97,7,0,0,0,96,95,1,0,0,0,96,97,
        1,0,0,0,97,100,1,0,0,0,98,101,3,16,7,0,99,101,3,12,5,0,100,98,1,
        0,0,0,100,99,1,0,0,0,101,9,1,0,0,0,102,104,7,0,0,0,103,102,1,0,0,
        0,103,104,1,0,0,0,104,107,1,0,0,0,105,108,3,16,7,0,106,108,3,12,
        5,0,107,105,1,0,0,0,107,106,1,0,0,0,108,114,1,0,0,0,109,111,7,1,
        0,0,110,112,7,0,0,0,111,110,1,0,0,0,111,112,1,0,0,0,112,113,1,0,
        0,0,113,115,3,16,7,0,114,109,1,0,0,0,114,115,1,0,0,0,115,11,1,0,
        0,0,116,117,3,16,7,0,117,118,5,46,0,0,118,119,3,16,7,0,119,123,1,
        0,0,0,120,121,5,46,0,0,121,123,3,16,7,0,122,116,1,0,0,0,122,120,
        1,0,0,0,123,13,1,0,0,0,124,125,7,2,0,0,125,15,1,0,0,0,126,128,3,
        14,6,0,127,126,1,0,0,0,128,129,1,0,0,0,129,127,1,0,0,0,129,130,1,
        0,0,0,130,17,1,0,0,0,131,133,5,35,0,0,132,131,1,0,0,0,133,134,1,
        0,0,0,134,132,1,0,0,0,134,135,1,0,0,0,135,139,1,0,0,0,136,138,8,
        3,0,0,137,136,1,0,0,0,138,141,1,0,0,0,139,137,1,0,0,0,139,140,1,
        0,0,0,140,145,1,0,0,0,141,139,1,0,0,0,142,144,5,35,0,0,143,142,1,
        0,0,0,144,147,1,0,0,0,145,143,1,0,0,0,145,146,1,0,0,0,146,151,1,
        0,0,0,147,145,1,0,0,0,148,150,8,3,0,0,149,148,1,0,0,0,150,153,1,
        0,0,0,151,149,1,0,0,0,151,152,1,0,0,0,152,154,1,0,0,0,153,151,1,
        0,0,0,154,155,6,8,1,0,155,19,1,0,0,0,156,158,5,33,0,0,157,156,1,
        0,0,0,158,159,1,0,0,0,159,157,1,0,0,0,159,160,1,0,0,0,160,164,1,
        0,0,0,161,163,8,3,0,0,162,161,1,0,0,0,163,166,1,0,0,0,164,162,1,
        0,0,0,164,165,1,0,0,0,165,170,1,0,0,0,166,164,1,0,0,0,167,169,5,
        33,0,0,168,167,1,0,0,0,169,172,1,0,0,0,170,168,1,0,0,0,170,171,1,
        0,0,0,171,176,1,0,0,0,172,170,1,0,0,0,173,175,8,3,0,0,174,173,1,
        0,0,0,175,178,1,0,0,0,176,174,1,0,0,0,176,177,1,0,0,0,177,179,1,
        0,0,0,178,176,1,0,0,0,179,180,6,9,1,0,180,21,1,0,0,0,181,183,5,59,
        0,0,182,181,1,0,0,0,183,184,1,0,0,0,184,182,1,0,0,0,184,185,1,0,
        0,0,185,189,1,0,0,0,186,188,8,3,0,0,187,186,1,0,0,0,188,191,1,0,
        0,0,189,187,1,0,0,0,189,190,1,0,0,0,190,195,1,0,0,0,191,189,1,0,
        0,0,192,194,5,59,0,0,193,192,1,0,0,0,194,197,1,0,0,0,195,193,1,0,
        0,0,195,196,1,0,0,0,196,201,1,0,0,0,197,195,1,0,0,0,198,200,8,3,
        0,0,199,198,1,0,0,0,200,203,1,0,0,0,201,199,1,0,0,0,201,202,1,0,
        0,0,202,204,1,0,0,0,203,201,1,0,0,0,204,205,6,10,1,0,205,23,1,0,
        0,0,206,211,3,42,20,0,207,208,7,4,0,0,208,210,3,42,20,0,209,207,
        1,0,0,0,210,213,1,0,0,0,211,209,1,0,0,0,211,212,1,0,0,0,212,25,1,
        0,0,0,213,211,1,0,0,0,214,215,3,24,11,0,215,216,5,45,0,0,216,217,
        3,24,11,0,217,27,1,0,0,0,218,219,3,24,11,0,219,220,5,45,0,0,220,
        221,3,24,11,0,221,222,5,45,0,0,222,223,3,24,11,0,223,29,1,0,0,0,
        224,225,3,24,11,0,225,226,5,45,0,0,226,227,3,24,11,0,227,228,5,45,
        0,0,228,229,3,24,11,0,229,230,5,45,0,0,230,231,3,24,11,0,231,31,
        1,0,0,0,232,233,3,42,20,0,233,33,1,0,0,0,234,235,7,5,0,0,235,35,
        1,0,0,0,236,239,3,34,16,0,237,239,3,14,6,0,238,236,1,0,0,0,238,237,
        1,0,0,0,239,37,1,0,0,0,240,243,3,36,17,0,241,243,7,6,0,0,242,240,
        1,0,0,0,242,241,1,0,0,0,243,39,1,0,0,0,244,247,3,38,18,0,245,247,
        7,7,0,0,246,244,1,0,0,0,246,245,1,0,0,0,247,41,1,0,0,0,248,252,3,
        38,18,0,249,251,3,40,19,0,250,249,1,0,0,0,251,254,1,0,0,0,252,250,
        1,0,0,0,252,253,1,0,0,0,253,43,1,0,0,0,254,252,1,0,0,0,255,257,7,
        8,0,0,256,255,1,0,0,0,257,258,1,0,0,0,258,256,1,0,0,0,258,259,1,
        0,0,0,259,260,1,0,0,0,260,261,6,21,2,0,261,45,1,0,0,0,262,264,7,
        3,0,0,263,262,1,0,0,0,264,265,1,0,0,0,265,263,1,0,0,0,265,266,1,
        0,0,0,266,47,1,0,0,0,267,272,5,123,0,0,268,271,3,48,23,0,269,271,
        9,0,0,0,270,268,1,0,0,0,270,269,1,0,0,0,271,274,1,0,0,0,272,273,
        1,0,0,0,272,270,1,0,0,0,273,275,1,0,0,0,274,272,1,0,0,0,275,276,
        5,125,0,0,276,277,1,0,0,0,277,278,6,23,1,0,278,49,1,0,0,0,279,305,
        7,9,0,0,280,282,5,47,0,0,281,283,5,47,0,0,282,281,1,0,0,0,283,284,
        1,0,0,0,284,282,1,0,0,0,284,285,1,0,0,0,285,305,1,0,0,0,286,288,
        5,42,0,0,287,289,5,42,0,0,288,287,1,0,0,0,289,290,1,0,0,0,290,288,
        1,0,0,0,290,291,1,0,0,0,291,305,1,0,0,0,292,294,5,61,0,0,293,295,
        5,61,0,0,294,293,1,0,0,0,295,296,1,0,0,0,296,294,1,0,0,0,296,297,
        1,0,0,0,297,305,1,0,0,0,298,299,5,82,0,0,299,300,5,69,0,0,300,301,
        5,77,0,0,301,302,5,65,0,0,302,303,5,82,0,0,303,305,5,75,0,0,304,
        279,1,0,0,0,304,280,1,0,0,0,304,286,1,0,0,0,304,292,1,0,0,0,304,
        298,1,0,0,0,305,309,1,0,0,0,306,308,5,32,0,0,307,306,1,0,0,0,308,
        311,1,0,0,0,309,307,1,0,0,0,309,310,1,0,0,0,310,312,1,0,0,0,311,
        309,1,0,0,0,312,313,3,46,22,0,313,314,1,0,0,0,314,315,6,24,1,0,315,
        51,1,0,0,0,316,342,7,9,0,0,317,319,5,47,0,0,318,320,5,47,0,0,319,
        318,1,0,0,0,320,321,1,0,0,0,321,319,1,0,0,0,321,322,1,0,0,0,322,
        342,1,0,0,0,323,325,5,42,0,0,324,326,5,42,0,0,325,324,1,0,0,0,326,
        327,1,0,0,0,327,325,1,0,0,0,327,328,1,0,0,0,328,342,1,0,0,0,329,
        331,5,61,0,0,330,332,5,61,0,0,331,330,1,0,0,0,332,333,1,0,0,0,333,
        331,1,0,0,0,333,334,1,0,0,0,334,342,1,0,0,0,335,336,5,82,0,0,336,
        337,5,69,0,0,337,338,5,77,0,0,338,339,5,65,0,0,339,340,5,82,0,0,
        340,342,5,75,0,0,341,316,1,0,0,0,341,317,1,0,0,0,341,323,1,0,0,0,
        341,329,1,0,0,0,341,335,1,0,0,0,342,346,1,0,0,0,343,345,8,3,0,0,
        344,343,1,0,0,0,345,348,1,0,0,0,346,344,1,0,0,0,346,347,1,0,0,0,
        347,349,1,0,0,0,348,346,1,0,0,0,349,350,3,46,22,0,350,351,1,0,0,
        0,351,352,6,25,1,0,352,53,1,0,0,0,353,354,5,119,0,0,354,355,5,49,
        0,0,355,55,1,0,0,0,356,357,5,119,0,0,357,358,5,50,0,0,358,57,1,0,
        0,0,359,360,5,119,0,0,360,361,5,51,0,0,361,59,1,0,0,0,362,363,5,
        119,0,0,363,364,5,52,0,0,364,61,1,0,0,0,365,366,5,68,0,0,366,367,
        5,97,0,0,367,368,5,116,0,0,368,369,5,97,0,0,369,371,5,32,0,0,370,
        365,1,0,0,0,370,371,1,0,0,0,371,372,1,0,0,0,372,373,5,72,0,0,373,
        374,5,101,0,0,374,375,5,105,0,0,375,376,5,103,0,0,376,377,5,104,
        0,0,377,378,5,116,0,0,378,63,1,0,0,0,379,380,5,86,0,0,380,381,5,
        111,0,0,381,382,5,108,0,0,382,383,5,117,0,0,383,384,5,109,0,0,384,
        385,5,101,0,0,385,65,1,0,0,0,386,387,5,83,0,0,387,388,5,47,0,0,388,
        389,5,78,0,0,389,67,1,0,0,0,390,392,7,8,0,0,391,390,1,0,0,0,392,
        393,1,0,0,0,393,391,1,0,0,0,393,394,1,0,0,0,394,395,1,0,0,0,395,
        396,6,33,2,0,396,69,1,0,0,0,397,399,7,3,0,0,398,397,1,0,0,0,399,
        400,1,0,0,0,400,398,1,0,0,0,400,401,1,0,0,0,401,402,1,0,0,0,402,
        403,6,34,3,0,403,71,1,0,0,0,45,0,1,91,96,100,103,107,111,114,122,
        129,134,139,145,151,159,164,170,176,184,189,195,201,211,238,242,
        246,252,258,265,270,272,284,290,296,304,309,321,327,333,341,346,
        370,393,400,4,5,1,0,0,1,0,6,0,0,4,0,0
    ]

class SparkyPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LABEL_MODE = 1

    Assignment = 1
    W1 = 2
    Integer = 3
    Float = 4
    Real = 5
    SHARP_COMMENT = 6
    EXCLM_COMMENT = 7
    SMCLN_COMMENT = 8
    Assignment_2d_ex = 9
    Assignment_3d_ex = 10
    Assignment_4d_ex = 11
    Simple_name = 12
    SPACE = 13
    RETURN = 14
    ENCLOSE_COMMENT = 15
    SECTION_COMMENT = 16
    LINE_COMMENT = 17
    W1_LA = 18
    W2_LA = 19
    W3_LA = 20
    W4_LA = 21
    Height_LA = 22
    Volume_LA = 23
    S_N_LA = 24
    SPACE_LA = 25
    RETURN_LA = 26

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "LABEL_MODE" ]

    literalNames = [ "<INVALID>",
            "'Assignment'", "'w2'", "'w3'", "'w4'", "'Volume'", "'S/N'" ]

    symbolicNames = [ "<INVALID>",
            "Assignment", "W1", "Integer", "Float", "Real", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Assignment_2d_ex", "Assignment_3d_ex", 
            "Assignment_4d_ex", "Simple_name", "SPACE", "RETURN", "ENCLOSE_COMMENT", 
            "SECTION_COMMENT", "LINE_COMMENT", "W1_LA", "W2_LA", "W3_LA", 
            "W4_LA", "Height_LA", "Volume_LA", "S_N_LA", "SPACE_LA", "RETURN_LA" ]

    ruleNames = [ "Assignment", "W1", "Integer", "Float", "Real", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", 
                  "SMCLN_COMMENT", "ASS_EACH_AXIS", "Assignment_2d_ex", 
                  "Assignment_3d_ex", "Assignment_4d_ex", "Simple_name", 
                  "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", 
                  "SPACE", "RETURN", "ENCLOSE_COMMENT", "SECTION_COMMENT", 
                  "LINE_COMMENT", "W1_LA", "W2_LA", "W3_LA", "W4_LA", "Height_LA", 
                  "Volume_LA", "S_N_LA", "SPACE_LA", "RETURN_LA" ]

    grammarFileName = "SparkyPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


