# Generated from SparkyPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,27,417,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,3,0,87,8,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,3,2,
        97,8,2,1,2,1,2,1,3,3,3,102,8,3,1,3,1,3,3,3,106,8,3,1,4,3,4,109,8,
        4,1,4,1,4,3,4,113,8,4,1,4,1,4,3,4,117,8,4,1,4,3,4,120,8,4,1,5,1,
        5,1,5,1,5,1,5,1,5,3,5,128,8,5,1,6,1,6,1,7,4,7,133,8,7,11,7,12,7,
        134,1,8,4,8,138,8,8,11,8,12,8,139,1,8,5,8,143,8,8,10,8,12,8,146,
        9,8,1,8,5,8,149,8,8,10,8,12,8,152,9,8,1,8,5,8,155,8,8,10,8,12,8,
        158,9,8,1,8,1,8,1,9,4,9,163,8,9,11,9,12,9,164,1,9,5,9,168,8,9,10,
        9,12,9,171,9,9,1,9,5,9,174,8,9,10,9,12,9,177,9,9,1,9,5,9,180,8,9,
        10,9,12,9,183,9,9,1,9,1,9,1,10,4,10,188,8,10,11,10,12,10,189,1,10,
        5,10,193,8,10,10,10,12,10,196,9,10,1,10,5,10,199,8,10,10,10,12,10,
        202,9,10,1,10,5,10,205,8,10,10,10,12,10,208,9,10,1,10,1,10,1,11,
        1,11,1,11,5,11,215,8,11,10,11,12,11,218,9,11,1,12,1,12,1,12,1,12,
        1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
        1,14,1,15,1,15,1,16,1,16,1,17,1,17,3,17,244,8,17,1,18,1,18,3,18,
        248,8,18,1,19,1,19,3,19,252,8,19,1,20,1,20,5,20,256,8,20,10,20,12,
        20,259,9,20,1,21,4,21,262,8,21,11,21,12,21,263,1,21,1,21,1,22,4,
        22,269,8,22,11,22,12,22,270,1,23,1,23,1,23,5,23,276,8,23,10,23,12,
        23,279,9,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,4,24,288,8,24,11,
        24,12,24,289,1,24,1,24,4,24,294,8,24,11,24,12,24,295,1,24,1,24,4,
        24,300,8,24,11,24,12,24,301,1,24,1,24,1,24,1,24,1,24,1,24,3,24,310,
        8,24,1,24,5,24,313,8,24,10,24,12,24,316,9,24,1,24,1,24,1,24,1,24,
        1,25,1,25,1,25,4,25,325,8,25,11,25,12,25,326,1,25,1,25,4,25,331,
        8,25,11,25,12,25,332,1,25,1,25,4,25,337,8,25,11,25,12,25,338,1,25,
        1,25,1,25,1,25,1,25,1,25,3,25,347,8,25,1,25,5,25,350,8,25,10,25,
        12,25,353,9,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,
        1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,3,30,376,
        8,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,3,30,386,8,30,1,31,
        1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,
        1,33,1,33,1,34,4,34,405,8,34,11,34,12,34,406,1,34,1,34,1,35,4,35,
        412,8,35,11,35,12,35,413,1,35,1,35,1,277,0,36,2,1,4,2,6,3,8,4,10,
        5,12,0,14,0,16,0,18,6,20,7,22,8,24,0,26,9,28,10,30,11,32,12,34,0,
        36,0,38,0,40,0,42,0,44,13,46,14,48,15,50,16,52,17,54,18,56,19,58,
        20,60,21,62,22,64,23,66,24,68,25,70,26,72,27,2,0,1,10,2,0,43,43,
        45,45,2,0,69,69,101,101,1,0,48,57,2,0,10,10,13,13,4,0,38,38,44,44,
        46,47,58,59,2,0,65,90,97,122,4,0,42,43,45,45,63,63,95,95,3,0,34,
        35,37,37,39,39,2,0,9,9,32,32,5,0,33,33,35,35,38,38,59,59,92,92,457,
        0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,18,
        1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,
        1,0,0,0,0,32,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,0,0,50,
        1,0,0,0,0,52,1,0,0,0,1,54,1,0,0,0,1,56,1,0,0,0,1,58,1,0,0,0,1,60,
        1,0,0,0,1,62,1,0,0,0,1,64,1,0,0,0,1,66,1,0,0,0,1,68,1,0,0,0,1,70,
        1,0,0,0,1,72,1,0,0,0,2,74,1,0,0,0,4,90,1,0,0,0,6,96,1,0,0,0,8,101,
        1,0,0,0,10,108,1,0,0,0,12,127,1,0,0,0,14,129,1,0,0,0,16,132,1,0,
        0,0,18,137,1,0,0,0,20,162,1,0,0,0,22,187,1,0,0,0,24,211,1,0,0,0,
        26,219,1,0,0,0,28,223,1,0,0,0,30,229,1,0,0,0,32,237,1,0,0,0,34,239,
        1,0,0,0,36,243,1,0,0,0,38,247,1,0,0,0,40,251,1,0,0,0,42,253,1,0,
        0,0,44,261,1,0,0,0,46,268,1,0,0,0,48,272,1,0,0,0,50,309,1,0,0,0,
        52,346,1,0,0,0,54,358,1,0,0,0,56,361,1,0,0,0,58,364,1,0,0,0,60,367,
        1,0,0,0,62,375,1,0,0,0,64,387,1,0,0,0,66,394,1,0,0,0,68,398,1,0,
        0,0,70,404,1,0,0,0,72,411,1,0,0,0,74,75,5,65,0,0,75,76,5,115,0,0,
        76,77,5,115,0,0,77,78,5,105,0,0,78,79,5,103,0,0,79,80,5,110,0,0,
        80,81,5,109,0,0,81,82,5,101,0,0,82,83,5,110,0,0,83,84,5,116,0,0,
        84,86,1,0,0,0,85,87,5,115,0,0,86,85,1,0,0,0,86,87,1,0,0,0,87,88,
        1,0,0,0,88,89,6,0,0,0,89,3,1,0,0,0,90,91,5,119,0,0,91,92,5,49,0,
        0,92,93,1,0,0,0,93,94,6,1,0,0,94,5,1,0,0,0,95,97,7,0,0,0,96,95,1,
        0,0,0,96,97,1,0,0,0,97,98,1,0,0,0,98,99,3,16,7,0,99,7,1,0,0,0,100,
        102,7,0,0,0,101,100,1,0,0,0,101,102,1,0,0,0,102,105,1,0,0,0,103,
        106,3,16,7,0,104,106,3,12,5,0,105,103,1,0,0,0,105,104,1,0,0,0,106,
        9,1,0,0,0,107,109,7,0,0,0,108,107,1,0,0,0,108,109,1,0,0,0,109,112,
        1,0,0,0,110,113,3,16,7,0,111,113,3,12,5,0,112,110,1,0,0,0,112,111,
        1,0,0,0,113,119,1,0,0,0,114,116,7,1,0,0,115,117,7,0,0,0,116,115,
        1,0,0,0,116,117,1,0,0,0,117,118,1,0,0,0,118,120,3,16,7,0,119,114,
        1,0,0,0,119,120,1,0,0,0,120,11,1,0,0,0,121,122,3,16,7,0,122,123,
        5,46,0,0,123,124,3,16,7,0,124,128,1,0,0,0,125,126,5,46,0,0,126,128,
        3,16,7,0,127,121,1,0,0,0,127,125,1,0,0,0,128,13,1,0,0,0,129,130,
        7,2,0,0,130,15,1,0,0,0,131,133,3,14,6,0,132,131,1,0,0,0,133,134,
        1,0,0,0,134,132,1,0,0,0,134,135,1,0,0,0,135,17,1,0,0,0,136,138,5,
        35,0,0,137,136,1,0,0,0,138,139,1,0,0,0,139,137,1,0,0,0,139,140,1,
        0,0,0,140,144,1,0,0,0,141,143,8,3,0,0,142,141,1,0,0,0,143,146,1,
        0,0,0,144,142,1,0,0,0,144,145,1,0,0,0,145,150,1,0,0,0,146,144,1,
        0,0,0,147,149,5,35,0,0,148,147,1,0,0,0,149,152,1,0,0,0,150,148,1,
        0,0,0,150,151,1,0,0,0,151,156,1,0,0,0,152,150,1,0,0,0,153,155,8,
        3,0,0,154,153,1,0,0,0,155,158,1,0,0,0,156,154,1,0,0,0,156,157,1,
        0,0,0,157,159,1,0,0,0,158,156,1,0,0,0,159,160,6,8,1,0,160,19,1,0,
        0,0,161,163,5,33,0,0,162,161,1,0,0,0,163,164,1,0,0,0,164,162,1,0,
        0,0,164,165,1,0,0,0,165,169,1,0,0,0,166,168,8,3,0,0,167,166,1,0,
        0,0,168,171,1,0,0,0,169,167,1,0,0,0,169,170,1,0,0,0,170,175,1,0,
        0,0,171,169,1,0,0,0,172,174,5,33,0,0,173,172,1,0,0,0,174,177,1,0,
        0,0,175,173,1,0,0,0,175,176,1,0,0,0,176,181,1,0,0,0,177,175,1,0,
        0,0,178,180,8,3,0,0,179,178,1,0,0,0,180,183,1,0,0,0,181,179,1,0,
        0,0,181,182,1,0,0,0,182,184,1,0,0,0,183,181,1,0,0,0,184,185,6,9,
        1,0,185,21,1,0,0,0,186,188,5,59,0,0,187,186,1,0,0,0,188,189,1,0,
        0,0,189,187,1,0,0,0,189,190,1,0,0,0,190,194,1,0,0,0,191,193,8,3,
        0,0,192,191,1,0,0,0,193,196,1,0,0,0,194,192,1,0,0,0,194,195,1,0,
        0,0,195,200,1,0,0,0,196,194,1,0,0,0,197,199,5,59,0,0,198,197,1,0,
        0,0,199,202,1,0,0,0,200,198,1,0,0,0,200,201,1,0,0,0,201,206,1,0,
        0,0,202,200,1,0,0,0,203,205,8,3,0,0,204,203,1,0,0,0,205,208,1,0,
        0,0,206,204,1,0,0,0,206,207,1,0,0,0,207,209,1,0,0,0,208,206,1,0,
        0,0,209,210,6,10,1,0,210,23,1,0,0,0,211,216,3,42,20,0,212,213,7,
        4,0,0,213,215,3,42,20,0,214,212,1,0,0,0,215,218,1,0,0,0,216,214,
        1,0,0,0,216,217,1,0,0,0,217,25,1,0,0,0,218,216,1,0,0,0,219,220,3,
        24,11,0,220,221,5,45,0,0,221,222,3,24,11,0,222,27,1,0,0,0,223,224,
        3,24,11,0,224,225,5,45,0,0,225,226,3,24,11,0,226,227,5,45,0,0,227,
        228,3,24,11,0,228,29,1,0,0,0,229,230,3,24,11,0,230,231,5,45,0,0,
        231,232,3,24,11,0,232,233,5,45,0,0,233,234,3,24,11,0,234,235,5,45,
        0,0,235,236,3,24,11,0,236,31,1,0,0,0,237,238,3,42,20,0,238,33,1,
        0,0,0,239,240,7,5,0,0,240,35,1,0,0,0,241,244,3,34,16,0,242,244,3,
        14,6,0,243,241,1,0,0,0,243,242,1,0,0,0,244,37,1,0,0,0,245,248,3,
        36,17,0,246,248,7,6,0,0,247,245,1,0,0,0,247,246,1,0,0,0,248,39,1,
        0,0,0,249,252,3,38,18,0,250,252,7,7,0,0,251,249,1,0,0,0,251,250,
        1,0,0,0,252,41,1,0,0,0,253,257,3,38,18,0,254,256,3,40,19,0,255,254,
        1,0,0,0,256,259,1,0,0,0,257,255,1,0,0,0,257,258,1,0,0,0,258,43,1,
        0,0,0,259,257,1,0,0,0,260,262,7,8,0,0,261,260,1,0,0,0,262,263,1,
        0,0,0,263,261,1,0,0,0,263,264,1,0,0,0,264,265,1,0,0,0,265,266,6,
        21,2,0,266,45,1,0,0,0,267,269,7,3,0,0,268,267,1,0,0,0,269,270,1,
        0,0,0,270,268,1,0,0,0,270,271,1,0,0,0,271,47,1,0,0,0,272,277,5,123,
        0,0,273,276,3,48,23,0,274,276,9,0,0,0,275,273,1,0,0,0,275,274,1,
        0,0,0,276,279,1,0,0,0,277,278,1,0,0,0,277,275,1,0,0,0,278,280,1,
        0,0,0,279,277,1,0,0,0,280,281,5,125,0,0,281,282,1,0,0,0,282,283,
        6,23,1,0,283,49,1,0,0,0,284,310,7,9,0,0,285,287,5,47,0,0,286,288,
        5,47,0,0,287,286,1,0,0,0,288,289,1,0,0,0,289,287,1,0,0,0,289,290,
        1,0,0,0,290,310,1,0,0,0,291,293,5,42,0,0,292,294,5,42,0,0,293,292,
        1,0,0,0,294,295,1,0,0,0,295,293,1,0,0,0,295,296,1,0,0,0,296,310,
        1,0,0,0,297,299,5,61,0,0,298,300,5,61,0,0,299,298,1,0,0,0,300,301,
        1,0,0,0,301,299,1,0,0,0,301,302,1,0,0,0,302,310,1,0,0,0,303,304,
        5,82,0,0,304,305,5,69,0,0,305,306,5,77,0,0,306,307,5,65,0,0,307,
        308,5,82,0,0,308,310,5,75,0,0,309,284,1,0,0,0,309,285,1,0,0,0,309,
        291,1,0,0,0,309,297,1,0,0,0,309,303,1,0,0,0,310,314,1,0,0,0,311,
        313,5,32,0,0,312,311,1,0,0,0,313,316,1,0,0,0,314,312,1,0,0,0,314,
        315,1,0,0,0,315,317,1,0,0,0,316,314,1,0,0,0,317,318,3,46,22,0,318,
        319,1,0,0,0,319,320,6,24,1,0,320,51,1,0,0,0,321,347,7,9,0,0,322,
        324,5,47,0,0,323,325,5,47,0,0,324,323,1,0,0,0,325,326,1,0,0,0,326,
        324,1,0,0,0,326,327,1,0,0,0,327,347,1,0,0,0,328,330,5,42,0,0,329,
        331,5,42,0,0,330,329,1,0,0,0,331,332,1,0,0,0,332,330,1,0,0,0,332,
        333,1,0,0,0,333,347,1,0,0,0,334,336,5,61,0,0,335,337,5,61,0,0,336,
        335,1,0,0,0,337,338,1,0,0,0,338,336,1,0,0,0,338,339,1,0,0,0,339,
        347,1,0,0,0,340,341,5,82,0,0,341,342,5,69,0,0,342,343,5,77,0,0,343,
        344,5,65,0,0,344,345,5,82,0,0,345,347,5,75,0,0,346,321,1,0,0,0,346,
        322,1,0,0,0,346,328,1,0,0,0,346,334,1,0,0,0,346,340,1,0,0,0,347,
        351,1,0,0,0,348,350,8,3,0,0,349,348,1,0,0,0,350,353,1,0,0,0,351,
        349,1,0,0,0,351,352,1,0,0,0,352,354,1,0,0,0,353,351,1,0,0,0,354,
        355,3,46,22,0,355,356,1,0,0,0,356,357,6,25,1,0,357,53,1,0,0,0,358,
        359,5,119,0,0,359,360,5,49,0,0,360,55,1,0,0,0,361,362,5,119,0,0,
        362,363,5,50,0,0,363,57,1,0,0,0,364,365,5,119,0,0,365,366,5,51,0,
        0,366,59,1,0,0,0,367,368,5,119,0,0,368,369,5,52,0,0,369,61,1,0,0,
        0,370,371,5,68,0,0,371,372,5,97,0,0,372,373,5,116,0,0,373,374,5,
        97,0,0,374,376,5,32,0,0,375,370,1,0,0,0,375,376,1,0,0,0,376,377,
        1,0,0,0,377,378,5,72,0,0,378,379,5,101,0,0,379,380,5,105,0,0,380,
        381,5,103,0,0,381,382,5,104,0,0,382,383,5,116,0,0,383,385,1,0,0,
        0,384,386,5,115,0,0,385,384,1,0,0,0,385,386,1,0,0,0,386,63,1,0,0,
        0,387,388,5,86,0,0,388,389,5,111,0,0,389,390,5,108,0,0,390,391,5,
        117,0,0,391,392,5,109,0,0,392,393,5,101,0,0,393,65,1,0,0,0,394,395,
        5,83,0,0,395,396,5,47,0,0,396,397,5,78,0,0,397,67,1,0,0,0,398,399,
        5,78,0,0,399,400,5,111,0,0,400,401,5,116,0,0,401,402,5,101,0,0,402,
        69,1,0,0,0,403,405,7,8,0,0,404,403,1,0,0,0,405,406,1,0,0,0,406,404,
        1,0,0,0,406,407,1,0,0,0,407,408,1,0,0,0,408,409,6,34,2,0,409,71,
        1,0,0,0,410,412,7,3,0,0,411,410,1,0,0,0,412,413,1,0,0,0,413,411,
        1,0,0,0,413,414,1,0,0,0,414,415,1,0,0,0,415,416,6,35,3,0,416,73,
        1,0,0,0,47,0,1,86,96,101,105,108,112,116,119,127,134,139,144,150,
        156,164,169,175,181,189,194,200,206,216,243,247,251,257,263,270,
        275,277,289,295,301,309,314,326,332,338,346,351,375,385,406,413,
        4,5,1,0,0,1,0,6,0,0,4,0,0
    ]

class SparkyPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LABEL_MODE = 1

    Assignment = 1
    W1 = 2
    Integer = 3
    Float = 4
    Real = 5
    SHARP_COMMENT = 6
    EXCLM_COMMENT = 7
    SMCLN_COMMENT = 8
    Assignment_2d_ex = 9
    Assignment_3d_ex = 10
    Assignment_4d_ex = 11
    Simple_name = 12
    SPACE = 13
    RETURN = 14
    ENCLOSE_COMMENT = 15
    SECTION_COMMENT = 16
    LINE_COMMENT = 17
    W1_LA = 18
    W2_LA = 19
    W3_LA = 20
    W4_LA = 21
    Height_LA = 22
    Volume_LA = 23
    S_N_LA = 24
    Note_LA = 25
    SPACE_LA = 26
    RETURN_LA = 27

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "LABEL_MODE" ]

    literalNames = [ "<INVALID>",
            "'w2'", "'w3'", "'w4'", "'Volume'", "'S/N'", "'Note'" ]

    symbolicNames = [ "<INVALID>",
            "Assignment", "W1", "Integer", "Float", "Real", "SHARP_COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Assignment_2d_ex", "Assignment_3d_ex", 
            "Assignment_4d_ex", "Simple_name", "SPACE", "RETURN", "ENCLOSE_COMMENT", 
            "SECTION_COMMENT", "LINE_COMMENT", "W1_LA", "W2_LA", "W3_LA", 
            "W4_LA", "Height_LA", "Volume_LA", "S_N_LA", "Note_LA", "SPACE_LA", 
            "RETURN_LA" ]

    ruleNames = [ "Assignment", "W1", "Integer", "Float", "Real", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", 
                  "SMCLN_COMMENT", "ASS_EACH_AXIS", "Assignment_2d_ex", 
                  "Assignment_3d_ex", "Assignment_4d_ex", "Simple_name", 
                  "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", 
                  "SPACE", "RETURN", "ENCLOSE_COMMENT", "SECTION_COMMENT", 
                  "LINE_COMMENT", "W1_LA", "W2_LA", "W3_LA", "W4_LA", "Height_LA", 
                  "Volume_LA", "S_N_LA", "Note_LA", "SPACE_LA", "RETURN_LA" ]

    grammarFileName = "SparkyPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


