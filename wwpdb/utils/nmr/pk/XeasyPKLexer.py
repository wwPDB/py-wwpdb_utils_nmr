# Generated from XeasyPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,36,545,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,
        2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,
        10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
        16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,
        23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,
        29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,
        36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,
        42,2,43,7,43,1,0,1,0,5,0,98,8,0,10,0,12,0,101,9,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,
        2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,3,
        6,186,8,6,1,6,1,6,1,7,3,7,191,8,7,1,7,1,7,3,7,195,8,7,1,8,3,8,198,
        8,8,1,8,1,8,3,8,202,8,8,1,8,1,8,3,8,206,8,8,1,8,3,8,209,8,8,1,9,
        1,9,1,9,1,9,1,9,1,9,3,9,217,8,9,1,10,1,10,1,11,4,11,222,8,11,11,
        11,12,11,223,1,12,4,12,227,8,12,11,12,12,12,228,1,12,5,12,232,8,
        12,10,12,12,12,235,9,12,1,12,5,12,238,8,12,10,12,12,12,241,9,12,
        1,12,5,12,244,8,12,10,12,12,12,247,9,12,1,12,1,12,1,13,4,13,252,
        8,13,11,13,12,13,253,1,13,5,13,257,8,13,10,13,12,13,260,9,13,1,13,
        5,13,263,8,13,10,13,12,13,266,9,13,1,13,5,13,269,8,13,10,13,12,13,
        272,9,13,1,13,1,13,1,14,4,14,277,8,14,11,14,12,14,278,1,14,5,14,
        282,8,14,10,14,12,14,285,9,14,1,14,5,14,288,8,14,10,14,12,14,291,
        9,14,1,14,5,14,294,8,14,10,14,12,14,297,9,14,1,14,1,14,1,15,1,15,
        1,16,1,16,1,17,1,17,3,17,307,8,17,1,18,1,18,3,18,311,8,18,1,19,1,
        19,3,19,315,8,19,1,20,1,20,5,20,319,8,20,10,20,12,20,322,9,20,1,
        21,4,21,325,8,21,11,21,12,21,326,1,21,1,21,1,22,1,22,1,22,5,22,334,
        8,22,10,22,12,22,337,9,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,4,23,
        346,8,23,11,23,12,23,347,1,23,1,23,4,23,352,8,23,11,23,12,23,353,
        1,23,1,23,4,23,358,8,23,11,23,12,23,359,1,23,1,23,4,23,364,8,23,
        11,23,12,23,365,1,23,1,23,4,23,370,8,23,11,23,12,23,371,1,23,1,23,
        1,23,1,23,1,23,1,23,3,23,380,8,23,1,23,5,23,383,8,23,10,23,12,23,
        386,9,23,1,23,4,23,389,8,23,11,23,12,23,390,1,23,1,23,1,24,1,24,
        1,24,4,24,398,8,24,11,24,12,24,399,1,24,1,24,4,24,404,8,24,11,24,
        12,24,405,1,24,1,24,4,24,410,8,24,11,24,12,24,411,1,24,1,24,4,24,
        416,8,24,11,24,12,24,417,1,24,1,24,4,24,422,8,24,11,24,12,24,423,
        1,24,1,24,1,24,1,24,1,24,1,24,3,24,432,8,24,1,24,5,24,435,8,24,10,
        24,12,24,438,9,24,1,24,1,24,1,25,3,25,443,8,25,1,25,1,25,1,26,4,
        26,448,8,26,11,26,12,26,449,1,26,1,26,1,27,4,27,455,8,27,11,27,12,
        27,456,1,27,1,27,1,28,1,28,1,29,4,29,464,8,29,11,29,12,29,465,1,
        29,1,29,1,30,4,30,471,8,30,11,30,12,30,472,1,30,1,30,1,31,3,31,478,
        8,31,1,31,1,31,1,32,1,32,1,33,4,33,485,8,33,11,33,12,33,486,1,33,
        1,33,1,34,4,34,492,8,34,11,34,12,34,493,1,34,1,34,1,35,1,35,1,36,
        4,36,501,8,36,11,36,12,36,502,1,36,1,36,1,37,4,37,508,8,37,11,37,
        12,37,509,1,37,1,37,1,38,1,38,1,39,4,39,517,8,39,11,39,12,39,518,
        1,39,1,39,1,40,4,40,524,8,40,11,40,12,40,525,1,40,1,40,1,41,1,41,
        1,42,4,42,533,8,42,11,42,12,42,534,1,42,1,42,1,43,4,43,540,8,43,
        11,43,12,43,541,1,43,1,43,1,335,0,44,7,1,9,2,11,3,13,4,15,5,17,6,
        19,7,21,8,23,9,25,0,27,0,29,0,31,10,33,11,35,12,37,13,39,0,41,0,
        43,0,45,0,47,0,49,14,51,15,53,16,55,17,57,18,59,19,61,20,63,21,65,
        22,67,23,69,24,71,25,73,26,75,27,77,28,79,29,81,30,83,31,85,32,87,
        33,89,34,91,35,93,36,7,0,1,2,3,4,5,6,11,2,0,9,10,13,13,2,0,43,43,
        45,45,2,0,69,69,101,101,1,0,48,57,2,0,10,10,13,13,2,0,65,90,97,122,
        5,0,35,35,42,43,45,46,63,63,95,95,2,0,34,34,39,39,3,0,9,10,13,13,
        32,32,5,0,33,33,35,35,38,38,59,59,92,92,2,0,9,9,32,32,598,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,31,1,0,0,0,0,33,1,
        0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,
        0,0,0,0,55,1,0,0,0,1,57,1,0,0,0,1,59,1,0,0,0,1,61,1,0,0,0,2,63,1,
        0,0,0,2,65,1,0,0,0,2,67,1,0,0,0,3,69,1,0,0,0,3,71,1,0,0,0,3,73,1,
        0,0,0,3,75,1,0,0,0,4,77,1,0,0,0,4,79,1,0,0,0,4,81,1,0,0,0,5,83,1,
        0,0,0,5,85,1,0,0,0,5,87,1,0,0,0,6,89,1,0,0,0,6,91,1,0,0,0,6,93,1,
        0,0,0,7,95,1,0,0,0,9,125,1,0,0,0,11,135,1,0,0,0,13,144,1,0,0,0,15,
        159,1,0,0,0,17,171,1,0,0,0,19,185,1,0,0,0,21,190,1,0,0,0,23,197,
        1,0,0,0,25,216,1,0,0,0,27,218,1,0,0,0,29,221,1,0,0,0,31,226,1,0,
        0,0,33,251,1,0,0,0,35,276,1,0,0,0,37,300,1,0,0,0,39,302,1,0,0,0,
        41,306,1,0,0,0,43,310,1,0,0,0,45,314,1,0,0,0,47,316,1,0,0,0,49,324,
        1,0,0,0,51,330,1,0,0,0,53,379,1,0,0,0,55,431,1,0,0,0,57,442,1,0,
        0,0,59,447,1,0,0,0,61,454,1,0,0,0,63,460,1,0,0,0,65,463,1,0,0,0,
        67,470,1,0,0,0,69,477,1,0,0,0,71,481,1,0,0,0,73,484,1,0,0,0,75,491,
        1,0,0,0,77,497,1,0,0,0,79,500,1,0,0,0,81,507,1,0,0,0,83,513,1,0,
        0,0,85,516,1,0,0,0,87,523,1,0,0,0,89,529,1,0,0,0,91,532,1,0,0,0,
        93,539,1,0,0,0,95,99,5,35,0,0,96,98,8,0,0,0,97,96,1,0,0,0,98,101,
        1,0,0,0,99,97,1,0,0,0,99,100,1,0,0,0,100,102,1,0,0,0,101,99,1,0,
        0,0,102,103,5,78,0,0,103,104,5,117,0,0,104,105,5,109,0,0,105,106,
        5,98,0,0,106,107,5,101,0,0,107,108,5,114,0,0,108,109,5,32,0,0,109,
        110,5,111,0,0,110,111,5,102,0,0,111,112,5,32,0,0,112,113,5,100,0,
        0,113,114,5,105,0,0,114,115,5,109,0,0,115,116,5,101,0,0,116,117,
        5,110,0,0,117,118,5,115,0,0,118,119,5,105,0,0,119,120,5,111,0,0,
        120,121,5,110,0,0,121,122,5,115,0,0,122,123,1,0,0,0,123,124,6,0,
        0,0,124,8,1,0,0,0,125,126,5,35,0,0,126,127,5,70,0,0,127,128,5,79,
        0,0,128,129,5,82,0,0,129,130,5,77,0,0,130,131,5,65,0,0,131,132,5,
        84,0,0,132,133,1,0,0,0,133,134,6,1,1,0,134,10,1,0,0,0,135,136,5,
        35,0,0,136,137,5,73,0,0,137,138,5,78,0,0,138,139,5,65,0,0,139,140,
        5,77,0,0,140,141,5,69,0,0,141,142,1,0,0,0,142,143,6,2,2,0,143,12,
        1,0,0,0,144,145,5,35,0,0,145,146,5,67,0,0,146,147,5,89,0,0,147,148,
        5,65,0,0,148,149,5,78,0,0,149,150,5,65,0,0,150,151,5,70,0,0,151,
        152,5,79,0,0,152,153,5,82,0,0,153,154,5,77,0,0,154,155,5,65,0,0,
        155,156,5,84,0,0,156,157,1,0,0,0,157,158,6,3,3,0,158,14,1,0,0,0,
        159,160,5,35,0,0,160,161,5,83,0,0,161,162,5,80,0,0,162,163,5,69,
        0,0,163,164,5,67,0,0,164,165,5,84,0,0,165,166,5,82,0,0,166,167,5,
        85,0,0,167,168,5,77,0,0,168,169,1,0,0,0,169,170,6,4,4,0,170,16,1,
        0,0,0,171,172,5,35,0,0,172,173,5,84,0,0,173,174,5,79,0,0,174,175,
        5,76,0,0,175,176,5,69,0,0,176,177,5,82,0,0,177,178,5,65,0,0,178,
        179,5,78,0,0,179,180,5,67,0,0,180,181,5,69,0,0,181,182,1,0,0,0,182,
        183,6,5,5,0,183,18,1,0,0,0,184,186,7,1,0,0,185,184,1,0,0,0,185,186,
        1,0,0,0,186,187,1,0,0,0,187,188,3,29,11,0,188,20,1,0,0,0,189,191,
        7,1,0,0,190,189,1,0,0,0,190,191,1,0,0,0,191,194,1,0,0,0,192,195,
        3,29,11,0,193,195,3,25,9,0,194,192,1,0,0,0,194,193,1,0,0,0,195,22,
        1,0,0,0,196,198,7,1,0,0,197,196,1,0,0,0,197,198,1,0,0,0,198,201,
        1,0,0,0,199,202,3,29,11,0,200,202,3,25,9,0,201,199,1,0,0,0,201,200,
        1,0,0,0,202,208,1,0,0,0,203,205,7,2,0,0,204,206,7,1,0,0,205,204,
        1,0,0,0,205,206,1,0,0,0,206,207,1,0,0,0,207,209,3,29,11,0,208,203,
        1,0,0,0,208,209,1,0,0,0,209,24,1,0,0,0,210,211,3,29,11,0,211,212,
        5,46,0,0,212,213,3,29,11,0,213,217,1,0,0,0,214,215,5,46,0,0,215,
        217,3,29,11,0,216,210,1,0,0,0,216,214,1,0,0,0,217,26,1,0,0,0,218,
        219,7,3,0,0,219,28,1,0,0,0,220,222,3,27,10,0,221,220,1,0,0,0,222,
        223,1,0,0,0,223,221,1,0,0,0,223,224,1,0,0,0,224,30,1,0,0,0,225,227,
        5,35,0,0,226,225,1,0,0,0,227,228,1,0,0,0,228,226,1,0,0,0,228,229,
        1,0,0,0,229,233,1,0,0,0,230,232,8,4,0,0,231,230,1,0,0,0,232,235,
        1,0,0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,239,1,0,0,0,235,233,
        1,0,0,0,236,238,5,35,0,0,237,236,1,0,0,0,238,241,1,0,0,0,239,237,
        1,0,0,0,239,240,1,0,0,0,240,245,1,0,0,0,241,239,1,0,0,0,242,244,
        8,4,0,0,243,242,1,0,0,0,244,247,1,0,0,0,245,243,1,0,0,0,245,246,
        1,0,0,0,246,248,1,0,0,0,247,245,1,0,0,0,248,249,6,12,6,0,249,32,
        1,0,0,0,250,252,5,33,0,0,251,250,1,0,0,0,252,253,1,0,0,0,253,251,
        1,0,0,0,253,254,1,0,0,0,254,258,1,0,0,0,255,257,8,4,0,0,256,255,
        1,0,0,0,257,260,1,0,0,0,258,256,1,0,0,0,258,259,1,0,0,0,259,264,
        1,0,0,0,260,258,1,0,0,0,261,263,5,33,0,0,262,261,1,0,0,0,263,266,
        1,0,0,0,264,262,1,0,0,0,264,265,1,0,0,0,265,270,1,0,0,0,266,264,
        1,0,0,0,267,269,8,4,0,0,268,267,1,0,0,0,269,272,1,0,0,0,270,268,
        1,0,0,0,270,271,1,0,0,0,271,273,1,0,0,0,272,270,1,0,0,0,273,274,
        6,13,6,0,274,34,1,0,0,0,275,277,5,59,0,0,276,275,1,0,0,0,277,278,
        1,0,0,0,278,276,1,0,0,0,278,279,1,0,0,0,279,283,1,0,0,0,280,282,
        8,4,0,0,281,280,1,0,0,0,282,285,1,0,0,0,283,281,1,0,0,0,283,284,
        1,0,0,0,284,289,1,0,0,0,285,283,1,0,0,0,286,288,5,59,0,0,287,286,
        1,0,0,0,288,291,1,0,0,0,289,287,1,0,0,0,289,290,1,0,0,0,290,295,
        1,0,0,0,291,289,1,0,0,0,292,294,8,4,0,0,293,292,1,0,0,0,294,297,
        1,0,0,0,295,293,1,0,0,0,295,296,1,0,0,0,296,298,1,0,0,0,297,295,
        1,0,0,0,298,299,6,14,6,0,299,36,1,0,0,0,300,301,3,47,20,0,301,38,
        1,0,0,0,302,303,7,5,0,0,303,40,1,0,0,0,304,307,3,39,16,0,305,307,
        3,27,10,0,306,304,1,0,0,0,306,305,1,0,0,0,307,42,1,0,0,0,308,311,
        3,41,17,0,309,311,7,6,0,0,310,308,1,0,0,0,310,309,1,0,0,0,311,44,
        1,0,0,0,312,315,3,43,18,0,313,315,7,7,0,0,314,312,1,0,0,0,314,313,
        1,0,0,0,315,46,1,0,0,0,316,320,3,43,18,0,317,319,3,45,19,0,318,317,
        1,0,0,0,319,322,1,0,0,0,320,318,1,0,0,0,320,321,1,0,0,0,321,48,1,
        0,0,0,322,320,1,0,0,0,323,325,7,8,0,0,324,323,1,0,0,0,325,326,1,
        0,0,0,326,324,1,0,0,0,326,327,1,0,0,0,327,328,1,0,0,0,328,329,6,
        21,7,0,329,50,1,0,0,0,330,335,5,123,0,0,331,334,3,51,22,0,332,334,
        9,0,0,0,333,331,1,0,0,0,333,332,1,0,0,0,334,337,1,0,0,0,335,336,
        1,0,0,0,335,333,1,0,0,0,336,338,1,0,0,0,337,335,1,0,0,0,338,339,
        5,125,0,0,339,340,1,0,0,0,340,341,6,22,6,0,341,52,1,0,0,0,342,380,
        7,9,0,0,343,345,5,47,0,0,344,346,5,47,0,0,345,344,1,0,0,0,346,347,
        1,0,0,0,347,345,1,0,0,0,347,348,1,0,0,0,348,380,1,0,0,0,349,351,
        5,42,0,0,350,352,5,42,0,0,351,350,1,0,0,0,352,353,1,0,0,0,353,351,
        1,0,0,0,353,354,1,0,0,0,354,380,1,0,0,0,355,357,5,45,0,0,356,358,
        5,45,0,0,357,356,1,0,0,0,358,359,1,0,0,0,359,357,1,0,0,0,359,360,
        1,0,0,0,360,380,1,0,0,0,361,363,5,43,0,0,362,364,5,43,0,0,363,362,
        1,0,0,0,364,365,1,0,0,0,365,363,1,0,0,0,365,366,1,0,0,0,366,380,
        1,0,0,0,367,369,5,61,0,0,368,370,5,61,0,0,369,368,1,0,0,0,370,371,
        1,0,0,0,371,369,1,0,0,0,371,372,1,0,0,0,372,380,1,0,0,0,373,374,
        5,82,0,0,374,375,5,69,0,0,375,376,5,77,0,0,376,377,5,65,0,0,377,
        378,5,82,0,0,378,380,5,75,0,0,379,342,1,0,0,0,379,343,1,0,0,0,379,
        349,1,0,0,0,379,355,1,0,0,0,379,361,1,0,0,0,379,367,1,0,0,0,379,
        373,1,0,0,0,380,384,1,0,0,0,381,383,5,32,0,0,382,381,1,0,0,0,383,
        386,1,0,0,0,384,382,1,0,0,0,384,385,1,0,0,0,385,388,1,0,0,0,386,
        384,1,0,0,0,387,389,7,4,0,0,388,387,1,0,0,0,389,390,1,0,0,0,390,
        388,1,0,0,0,390,391,1,0,0,0,391,392,1,0,0,0,392,393,6,23,6,0,393,
        54,1,0,0,0,394,432,7,9,0,0,395,397,5,47,0,0,396,398,5,47,0,0,397,
        396,1,0,0,0,398,399,1,0,0,0,399,397,1,0,0,0,399,400,1,0,0,0,400,
        432,1,0,0,0,401,403,5,42,0,0,402,404,5,42,0,0,403,402,1,0,0,0,404,
        405,1,0,0,0,405,403,1,0,0,0,405,406,1,0,0,0,406,432,1,0,0,0,407,
        409,5,45,0,0,408,410,5,45,0,0,409,408,1,0,0,0,410,411,1,0,0,0,411,
        409,1,0,0,0,411,412,1,0,0,0,412,432,1,0,0,0,413,415,5,43,0,0,414,
        416,5,43,0,0,415,414,1,0,0,0,416,417,1,0,0,0,417,415,1,0,0,0,417,
        418,1,0,0,0,418,432,1,0,0,0,419,421,5,61,0,0,420,422,5,61,0,0,421,
        420,1,0,0,0,422,423,1,0,0,0,423,421,1,0,0,0,423,424,1,0,0,0,424,
        432,1,0,0,0,425,426,5,82,0,0,426,427,5,69,0,0,427,428,5,77,0,0,428,
        429,5,65,0,0,429,430,5,82,0,0,430,432,5,75,0,0,431,394,1,0,0,0,431,
        395,1,0,0,0,431,401,1,0,0,0,431,407,1,0,0,0,431,413,1,0,0,0,431,
        419,1,0,0,0,431,425,1,0,0,0,432,436,1,0,0,0,433,435,8,4,0,0,434,
        433,1,0,0,0,435,438,1,0,0,0,436,434,1,0,0,0,436,437,1,0,0,0,437,
        439,1,0,0,0,438,436,1,0,0,0,439,440,6,24,6,0,440,56,1,0,0,0,441,
        443,7,1,0,0,442,441,1,0,0,0,442,443,1,0,0,0,443,444,1,0,0,0,444,
        445,3,29,11,0,445,58,1,0,0,0,446,448,7,10,0,0,447,446,1,0,0,0,448,
        449,1,0,0,0,449,447,1,0,0,0,449,450,1,0,0,0,450,451,1,0,0,0,451,
        452,6,26,7,0,452,60,1,0,0,0,453,455,7,4,0,0,454,453,1,0,0,0,455,
        456,1,0,0,0,456,454,1,0,0,0,456,457,1,0,0,0,457,458,1,0,0,0,458,
        459,6,27,8,0,459,62,1,0,0,0,460,461,3,47,20,0,461,64,1,0,0,0,462,
        464,7,10,0,0,463,462,1,0,0,0,464,465,1,0,0,0,465,463,1,0,0,0,465,
        466,1,0,0,0,466,467,1,0,0,0,467,468,6,29,7,0,468,66,1,0,0,0,469,
        471,7,4,0,0,470,469,1,0,0,0,471,472,1,0,0,0,472,470,1,0,0,0,472,
        473,1,0,0,0,473,474,1,0,0,0,474,475,6,30,8,0,475,68,1,0,0,0,476,
        478,7,1,0,0,477,476,1,0,0,0,477,478,1,0,0,0,478,479,1,0,0,0,479,
        480,3,29,11,0,480,70,1,0,0,0,481,482,3,47,20,0,482,72,1,0,0,0,483,
        485,7,10,0,0,484,483,1,0,0,0,485,486,1,0,0,0,486,484,1,0,0,0,486,
        487,1,0,0,0,487,488,1,0,0,0,488,489,6,33,7,0,489,74,1,0,0,0,490,
        492,7,4,0,0,491,490,1,0,0,0,492,493,1,0,0,0,493,491,1,0,0,0,493,
        494,1,0,0,0,494,495,1,0,0,0,495,496,6,34,8,0,496,76,1,0,0,0,497,
        498,3,47,20,0,498,78,1,0,0,0,499,501,7,10,0,0,500,499,1,0,0,0,501,
        502,1,0,0,0,502,500,1,0,0,0,502,503,1,0,0,0,503,504,1,0,0,0,504,
        505,6,36,7,0,505,80,1,0,0,0,506,508,7,4,0,0,507,506,1,0,0,0,508,
        509,1,0,0,0,509,507,1,0,0,0,509,510,1,0,0,0,510,511,1,0,0,0,511,
        512,6,37,8,0,512,82,1,0,0,0,513,514,3,47,20,0,514,84,1,0,0,0,515,
        517,7,10,0,0,516,515,1,0,0,0,517,518,1,0,0,0,518,516,1,0,0,0,518,
        519,1,0,0,0,519,520,1,0,0,0,520,521,6,39,7,0,521,86,1,0,0,0,522,
        524,7,4,0,0,523,522,1,0,0,0,524,525,1,0,0,0,525,523,1,0,0,0,525,
        526,1,0,0,0,526,527,1,0,0,0,527,528,6,40,8,0,528,88,1,0,0,0,529,
        530,3,21,7,0,530,90,1,0,0,0,531,533,7,10,0,0,532,531,1,0,0,0,533,
        534,1,0,0,0,534,532,1,0,0,0,534,535,1,0,0,0,535,536,1,0,0,0,536,
        537,6,42,7,0,537,92,1,0,0,0,538,540,7,4,0,0,539,538,1,0,0,0,540,
        541,1,0,0,0,541,539,1,0,0,0,541,542,1,0,0,0,542,543,1,0,0,0,543,
        544,6,43,8,0,544,94,1,0,0,0,65,0,1,2,3,4,5,6,99,185,190,194,197,
        201,205,208,216,223,228,233,239,245,253,258,264,270,278,283,289,
        295,306,310,314,320,326,333,335,347,353,359,365,371,379,384,390,
        399,405,411,417,423,431,436,442,449,456,465,472,477,486,493,502,
        509,518,525,534,541,9,5,1,0,5,2,0,5,3,0,5,4,0,5,5,0,5,6,0,0,1,0,
        6,0,0,4,0,0
    ]

class XeasyPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NUM_OF_DIM_MODE = 1
    FORMAT_MODE = 2
    INAME_MODE = 3
    CYANA_FORMAT_MODE = 4
    SPECTRUM_MODE = 5
    TOLERANCE_MODE = 6

    Num_of_dim = 1
    Format = 2
    Iname = 3
    Cyana_format = 4
    Spectrum = 5
    Tolerance = 6
    Integer = 7
    Float = 8
    Real = 9
    SHARP_COMMENT = 10
    EXCLM_COMMENT = 11
    SMCLN_COMMENT = 12
    Simple_name = 13
    SPACE = 14
    ENCLOSE_COMMENT = 15
    SECTION_COMMENT = 16
    LINE_COMMENT = 17
    Integer_ND = 18
    SPACE_ND = 19
    RETURN_ND = 20
    Simple_name_FO = 21
    SPACE_FO = 22
    RETURN_FO = 23
    Integer_IN = 24
    Simple_name_IN = 25
    SPACE_IN = 26
    RETURN_IN = 27
    Simple_name_CY = 28
    SPACE_CY = 29
    RETURN_CY = 30
    Simple_name_SP = 31
    SPACE_SP = 32
    RETURN_SP = 33
    Float_TO = 34
    TOACE_TO = 35
    RETURN_TO = 36

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "NUM_OF_DIM_MODE", "FORMAT_MODE", "INAME_MODE", 
                  "CYANA_FORMAT_MODE", "SPECTRUM_MODE", "TOLERANCE_MODE" ]

    literalNames = [ "<INVALID>",
            "'#FORMAT'", "'#INAME'", "'#CYANAFORMAT'", "'#SPECTRUM'", "'#TOLERANCE'" ]

    symbolicNames = [ "<INVALID>",
            "Num_of_dim", "Format", "Iname", "Cyana_format", "Spectrum", 
            "Tolerance", "Integer", "Float", "Real", "SHARP_COMMENT", "EXCLM_COMMENT", 
            "SMCLN_COMMENT", "Simple_name", "SPACE", "ENCLOSE_COMMENT", 
            "SECTION_COMMENT", "LINE_COMMENT", "Integer_ND", "SPACE_ND", 
            "RETURN_ND", "Simple_name_FO", "SPACE_FO", "RETURN_FO", "Integer_IN", 
            "Simple_name_IN", "SPACE_IN", "RETURN_IN", "Simple_name_CY", 
            "SPACE_CY", "RETURN_CY", "Simple_name_SP", "SPACE_SP", "RETURN_SP", 
            "Float_TO", "TOACE_TO", "RETURN_TO" ]

    ruleNames = [ "Num_of_dim", "Format", "Iname", "Cyana_format", "Spectrum", 
                  "Tolerance", "Integer", "Float", "Real", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "SHARP_COMMENT", "EXCLM_COMMENT", 
                  "SMCLN_COMMENT", "Simple_name", "ALPHA", "ALPHA_NUM", 
                  "START_CHAR", "NAME_CHAR", "SIMPLE_NAME", "SPACE", "ENCLOSE_COMMENT", 
                  "SECTION_COMMENT", "LINE_COMMENT", "Integer_ND", "SPACE_ND", 
                  "RETURN_ND", "Simple_name_FO", "SPACE_FO", "RETURN_FO", 
                  "Integer_IN", "Simple_name_IN", "SPACE_IN", "RETURN_IN", 
                  "Simple_name_CY", "SPACE_CY", "RETURN_CY", "Simple_name_SP", 
                  "SPACE_SP", "RETURN_SP", "Float_TO", "TOACE_TO", "RETURN_TO" ]

    grammarFileName = "XeasyPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


