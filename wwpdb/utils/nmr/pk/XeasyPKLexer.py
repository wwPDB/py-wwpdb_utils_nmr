# Generated from XeasyPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,40,535,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,
        1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,
        9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,
        16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,
        22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,
        29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,
        35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,
        42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,1,0,1,
        0,5,0,107,8,0,10,0,12,0,110,9,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,3,6,195,8,6,1,6,1,6,
        1,7,3,7,200,8,7,1,7,1,7,3,7,204,8,7,1,8,3,8,207,8,8,1,8,1,8,3,8,
        211,8,8,1,8,1,8,3,8,215,8,8,1,8,3,8,218,8,8,1,9,1,9,1,9,1,9,1,9,
        1,9,3,9,226,8,9,1,10,1,10,1,11,4,11,231,8,11,11,11,12,11,232,1,12,
        4,12,236,8,12,11,12,12,12,237,1,12,1,12,1,13,4,13,243,8,13,11,13,
        12,13,244,1,13,5,13,248,8,13,10,13,12,13,251,9,13,1,13,5,13,254,
        8,13,10,13,12,13,257,9,13,1,13,5,13,260,8,13,10,13,12,13,263,9,13,
        1,13,1,13,1,14,4,14,268,8,14,11,14,12,14,269,1,14,5,14,273,8,14,
        10,14,12,14,276,9,14,1,14,5,14,279,8,14,10,14,12,14,282,9,14,1,14,
        5,14,285,8,14,10,14,12,14,288,9,14,1,14,1,14,1,15,1,15,1,16,1,16,
        1,17,1,17,3,17,298,8,17,1,18,1,18,3,18,302,8,18,1,19,1,19,3,19,306,
        8,19,1,20,1,20,5,20,310,8,20,10,20,12,20,313,9,20,1,21,4,21,316,
        8,21,11,21,12,21,317,1,21,1,21,1,22,4,22,323,8,22,11,22,12,22,324,
        1,23,1,23,1,23,5,23,330,8,23,10,23,12,23,333,9,23,1,23,1,23,1,23,
        1,23,1,24,1,24,1,24,4,24,342,8,24,11,24,12,24,343,1,24,1,24,4,24,
        348,8,24,11,24,12,24,349,1,24,1,24,4,24,354,8,24,11,24,12,24,355,
        1,24,1,24,1,24,1,24,1,24,1,24,3,24,364,8,24,1,24,5,24,367,8,24,10,
        24,12,24,370,9,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,4,25,379,8,
        25,11,25,12,25,380,1,25,1,25,4,25,385,8,25,11,25,12,25,386,1,25,
        1,25,4,25,391,8,25,11,25,12,25,392,1,25,1,25,1,25,1,25,1,25,1,25,
        3,25,401,8,25,1,25,5,25,404,8,25,10,25,12,25,407,9,25,1,25,1,25,
        1,25,1,25,1,26,3,26,414,8,26,1,26,1,26,1,27,4,27,419,8,27,11,27,
        12,27,420,1,27,1,27,1,28,4,28,426,8,28,11,28,12,28,427,1,28,1,28,
        1,29,1,29,1,30,4,30,435,8,30,11,30,12,30,436,1,30,1,30,1,31,4,31,
        442,8,31,11,31,12,31,443,1,31,1,31,1,32,3,32,449,8,32,1,32,1,32,
        1,33,1,33,1,34,4,34,456,8,34,11,34,12,34,457,1,34,1,34,1,35,4,35,
        463,8,35,11,35,12,35,464,1,35,1,35,1,36,1,36,1,37,4,37,472,8,37,
        11,37,12,37,473,1,37,1,37,1,38,4,38,479,8,38,11,38,12,38,480,1,38,
        1,38,1,39,1,39,1,40,4,40,488,8,40,11,40,12,40,489,1,40,1,40,1,41,
        4,41,495,8,41,11,41,12,41,496,1,41,1,41,1,42,1,42,1,43,4,43,504,
        8,43,11,43,12,43,505,1,43,1,43,1,44,4,44,511,8,44,11,44,12,44,512,
        1,44,1,44,1,45,4,45,518,8,45,11,45,12,45,519,1,46,4,46,523,8,46,
        11,46,12,46,524,1,46,1,46,1,47,4,47,530,8,47,11,47,12,47,531,1,47,
        1,47,1,331,0,48,8,1,10,2,12,3,14,4,16,5,18,6,20,7,22,8,24,9,26,0,
        28,0,30,0,32,10,34,11,36,12,38,13,40,0,42,0,44,0,46,0,48,0,50,14,
        52,15,54,16,56,17,58,18,60,19,62,20,64,21,66,22,68,23,70,24,72,25,
        74,26,76,27,78,28,80,29,82,30,84,31,86,32,88,33,90,34,92,35,94,36,
        96,37,98,38,100,39,102,40,8,0,1,2,3,4,5,6,7,12,2,0,9,10,13,13,2,
        0,43,43,45,45,2,0,69,69,101,101,1,0,48,57,2,0,33,33,35,35,2,0,10,
        10,13,13,2,0,65,90,97,122,4,0,42,43,45,46,63,63,95,95,2,0,34,34,
        39,39,2,0,9,9,32,32,3,0,38,38,59,59,92,92,3,0,9,10,13,13,32,32,579,
        0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,
        0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,32,1,0,0,0,
        0,34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,
        0,54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,1,60,1,0,0,0,1,62,1,0,0,0,
        1,64,1,0,0,0,2,66,1,0,0,0,2,68,1,0,0,0,2,70,1,0,0,0,3,72,1,0,0,0,
        3,74,1,0,0,0,3,76,1,0,0,0,3,78,1,0,0,0,4,80,1,0,0,0,4,82,1,0,0,0,
        4,84,1,0,0,0,5,86,1,0,0,0,5,88,1,0,0,0,5,90,1,0,0,0,6,92,1,0,0,0,
        6,94,1,0,0,0,6,96,1,0,0,0,7,98,1,0,0,0,7,100,1,0,0,0,7,102,1,0,0,
        0,8,104,1,0,0,0,10,134,1,0,0,0,12,144,1,0,0,0,14,153,1,0,0,0,16,
        168,1,0,0,0,18,180,1,0,0,0,20,194,1,0,0,0,22,199,1,0,0,0,24,206,
        1,0,0,0,26,225,1,0,0,0,28,227,1,0,0,0,30,230,1,0,0,0,32,235,1,0,
        0,0,34,242,1,0,0,0,36,267,1,0,0,0,38,291,1,0,0,0,40,293,1,0,0,0,
        42,297,1,0,0,0,44,301,1,0,0,0,46,305,1,0,0,0,48,307,1,0,0,0,50,315,
        1,0,0,0,52,322,1,0,0,0,54,326,1,0,0,0,56,363,1,0,0,0,58,400,1,0,
        0,0,60,413,1,0,0,0,62,418,1,0,0,0,64,425,1,0,0,0,66,431,1,0,0,0,
        68,434,1,0,0,0,70,441,1,0,0,0,72,448,1,0,0,0,74,452,1,0,0,0,76,455,
        1,0,0,0,78,462,1,0,0,0,80,468,1,0,0,0,82,471,1,0,0,0,84,478,1,0,
        0,0,86,484,1,0,0,0,88,487,1,0,0,0,90,494,1,0,0,0,92,500,1,0,0,0,
        94,503,1,0,0,0,96,510,1,0,0,0,98,517,1,0,0,0,100,522,1,0,0,0,102,
        529,1,0,0,0,104,108,5,35,0,0,105,107,8,0,0,0,106,105,1,0,0,0,107,
        110,1,0,0,0,108,106,1,0,0,0,108,109,1,0,0,0,109,111,1,0,0,0,110,
        108,1,0,0,0,111,112,5,78,0,0,112,113,5,117,0,0,113,114,5,109,0,0,
        114,115,5,98,0,0,115,116,5,101,0,0,116,117,5,114,0,0,117,118,5,32,
        0,0,118,119,5,111,0,0,119,120,5,102,0,0,120,121,5,32,0,0,121,122,
        5,100,0,0,122,123,5,105,0,0,123,124,5,109,0,0,124,125,5,101,0,0,
        125,126,5,110,0,0,126,127,5,115,0,0,127,128,5,105,0,0,128,129,5,
        111,0,0,129,130,5,110,0,0,130,131,5,115,0,0,131,132,1,0,0,0,132,
        133,6,0,0,0,133,9,1,0,0,0,134,135,5,35,0,0,135,136,5,70,0,0,136,
        137,5,79,0,0,137,138,5,82,0,0,138,139,5,77,0,0,139,140,5,65,0,0,
        140,141,5,84,0,0,141,142,1,0,0,0,142,143,6,1,1,0,143,11,1,0,0,0,
        144,145,5,35,0,0,145,146,5,73,0,0,146,147,5,78,0,0,147,148,5,65,
        0,0,148,149,5,77,0,0,149,150,5,69,0,0,150,151,1,0,0,0,151,152,6,
        2,2,0,152,13,1,0,0,0,153,154,5,35,0,0,154,155,5,67,0,0,155,156,5,
        89,0,0,156,157,5,65,0,0,157,158,5,78,0,0,158,159,5,65,0,0,159,160,
        5,70,0,0,160,161,5,79,0,0,161,162,5,82,0,0,162,163,5,77,0,0,163,
        164,5,65,0,0,164,165,5,84,0,0,165,166,1,0,0,0,166,167,6,3,3,0,167,
        15,1,0,0,0,168,169,5,35,0,0,169,170,5,83,0,0,170,171,5,80,0,0,171,
        172,5,69,0,0,172,173,5,67,0,0,173,174,5,84,0,0,174,175,5,82,0,0,
        175,176,5,85,0,0,176,177,5,77,0,0,177,178,1,0,0,0,178,179,6,4,4,
        0,179,17,1,0,0,0,180,181,5,35,0,0,181,182,5,84,0,0,182,183,5,79,
        0,0,183,184,5,76,0,0,184,185,5,69,0,0,185,186,5,82,0,0,186,187,5,
        65,0,0,187,188,5,78,0,0,188,189,5,67,0,0,189,190,5,69,0,0,190,191,
        1,0,0,0,191,192,6,5,5,0,192,19,1,0,0,0,193,195,7,1,0,0,194,193,1,
        0,0,0,194,195,1,0,0,0,195,196,1,0,0,0,196,197,3,30,11,0,197,21,1,
        0,0,0,198,200,7,1,0,0,199,198,1,0,0,0,199,200,1,0,0,0,200,203,1,
        0,0,0,201,204,3,30,11,0,202,204,3,26,9,0,203,201,1,0,0,0,203,202,
        1,0,0,0,204,23,1,0,0,0,205,207,7,1,0,0,206,205,1,0,0,0,206,207,1,
        0,0,0,207,210,1,0,0,0,208,211,3,30,11,0,209,211,3,26,9,0,210,208,
        1,0,0,0,210,209,1,0,0,0,211,217,1,0,0,0,212,214,7,2,0,0,213,215,
        7,1,0,0,214,213,1,0,0,0,214,215,1,0,0,0,215,216,1,0,0,0,216,218,
        3,30,11,0,217,212,1,0,0,0,217,218,1,0,0,0,218,25,1,0,0,0,219,220,
        3,30,11,0,220,221,5,46,0,0,221,222,3,30,11,0,222,226,1,0,0,0,223,
        224,5,46,0,0,224,226,3,30,11,0,225,219,1,0,0,0,225,223,1,0,0,0,226,
        27,1,0,0,0,227,228,7,3,0,0,228,29,1,0,0,0,229,231,3,28,10,0,230,
        229,1,0,0,0,231,232,1,0,0,0,232,230,1,0,0,0,232,233,1,0,0,0,233,
        31,1,0,0,0,234,236,7,4,0,0,235,234,1,0,0,0,236,237,1,0,0,0,237,235,
        1,0,0,0,237,238,1,0,0,0,238,239,1,0,0,0,239,240,6,12,6,0,240,33,
        1,0,0,0,241,243,5,33,0,0,242,241,1,0,0,0,243,244,1,0,0,0,244,242,
        1,0,0,0,244,245,1,0,0,0,245,249,1,0,0,0,246,248,8,5,0,0,247,246,
        1,0,0,0,248,251,1,0,0,0,249,247,1,0,0,0,249,250,1,0,0,0,250,255,
        1,0,0,0,251,249,1,0,0,0,252,254,5,33,0,0,253,252,1,0,0,0,254,257,
        1,0,0,0,255,253,1,0,0,0,255,256,1,0,0,0,256,261,1,0,0,0,257,255,
        1,0,0,0,258,260,8,5,0,0,259,258,1,0,0,0,260,263,1,0,0,0,261,259,
        1,0,0,0,261,262,1,0,0,0,262,264,1,0,0,0,263,261,1,0,0,0,264,265,
        6,13,7,0,265,35,1,0,0,0,266,268,5,59,0,0,267,266,1,0,0,0,268,269,
        1,0,0,0,269,267,1,0,0,0,269,270,1,0,0,0,270,274,1,0,0,0,271,273,
        8,5,0,0,272,271,1,0,0,0,273,276,1,0,0,0,274,272,1,0,0,0,274,275,
        1,0,0,0,275,280,1,0,0,0,276,274,1,0,0,0,277,279,5,59,0,0,278,277,
        1,0,0,0,279,282,1,0,0,0,280,278,1,0,0,0,280,281,1,0,0,0,281,286,
        1,0,0,0,282,280,1,0,0,0,283,285,8,5,0,0,284,283,1,0,0,0,285,288,
        1,0,0,0,286,284,1,0,0,0,286,287,1,0,0,0,287,289,1,0,0,0,288,286,
        1,0,0,0,289,290,6,14,7,0,290,37,1,0,0,0,291,292,3,48,20,0,292,39,
        1,0,0,0,293,294,7,6,0,0,294,41,1,0,0,0,295,298,3,40,16,0,296,298,
        3,28,10,0,297,295,1,0,0,0,297,296,1,0,0,0,298,43,1,0,0,0,299,302,
        3,42,17,0,300,302,7,7,0,0,301,299,1,0,0,0,301,300,1,0,0,0,302,45,
        1,0,0,0,303,306,3,44,18,0,304,306,7,8,0,0,305,303,1,0,0,0,305,304,
        1,0,0,0,306,47,1,0,0,0,307,311,3,44,18,0,308,310,3,46,19,0,309,308,
        1,0,0,0,310,313,1,0,0,0,311,309,1,0,0,0,311,312,1,0,0,0,312,49,1,
        0,0,0,313,311,1,0,0,0,314,316,7,9,0,0,315,314,1,0,0,0,316,317,1,
        0,0,0,317,315,1,0,0,0,317,318,1,0,0,0,318,319,1,0,0,0,319,320,6,
        21,8,0,320,51,1,0,0,0,321,323,7,5,0,0,322,321,1,0,0,0,323,324,1,
        0,0,0,324,322,1,0,0,0,324,325,1,0,0,0,325,53,1,0,0,0,326,331,5,123,
        0,0,327,330,3,54,23,0,328,330,9,0,0,0,329,327,1,0,0,0,329,328,1,
        0,0,0,330,333,1,0,0,0,331,332,1,0,0,0,331,329,1,0,0,0,332,334,1,
        0,0,0,333,331,1,0,0,0,334,335,5,125,0,0,335,336,1,0,0,0,336,337,
        6,23,7,0,337,55,1,0,0,0,338,364,7,10,0,0,339,341,5,47,0,0,340,342,
        5,47,0,0,341,340,1,0,0,0,342,343,1,0,0,0,343,341,1,0,0,0,343,344,
        1,0,0,0,344,364,1,0,0,0,345,347,5,42,0,0,346,348,5,42,0,0,347,346,
        1,0,0,0,348,349,1,0,0,0,349,347,1,0,0,0,349,350,1,0,0,0,350,364,
        1,0,0,0,351,353,5,61,0,0,352,354,5,61,0,0,353,352,1,0,0,0,354,355,
        1,0,0,0,355,353,1,0,0,0,355,356,1,0,0,0,356,364,1,0,0,0,357,358,
        5,82,0,0,358,359,5,69,0,0,359,360,5,77,0,0,360,361,5,65,0,0,361,
        362,5,82,0,0,362,364,5,75,0,0,363,338,1,0,0,0,363,339,1,0,0,0,363,
        345,1,0,0,0,363,351,1,0,0,0,363,357,1,0,0,0,364,368,1,0,0,0,365,
        367,5,32,0,0,366,365,1,0,0,0,367,370,1,0,0,0,368,366,1,0,0,0,368,
        369,1,0,0,0,369,371,1,0,0,0,370,368,1,0,0,0,371,372,3,52,22,0,372,
        373,1,0,0,0,373,374,6,24,7,0,374,57,1,0,0,0,375,401,7,10,0,0,376,
        378,5,47,0,0,377,379,5,47,0,0,378,377,1,0,0,0,379,380,1,0,0,0,380,
        378,1,0,0,0,380,381,1,0,0,0,381,401,1,0,0,0,382,384,5,42,0,0,383,
        385,5,42,0,0,384,383,1,0,0,0,385,386,1,0,0,0,386,384,1,0,0,0,386,
        387,1,0,0,0,387,401,1,0,0,0,388,390,5,61,0,0,389,391,5,61,0,0,390,
        389,1,0,0,0,391,392,1,0,0,0,392,390,1,0,0,0,392,393,1,0,0,0,393,
        401,1,0,0,0,394,395,5,82,0,0,395,396,5,69,0,0,396,397,5,77,0,0,397,
        398,5,65,0,0,398,399,5,82,0,0,399,401,5,75,0,0,400,375,1,0,0,0,400,
        376,1,0,0,0,400,382,1,0,0,0,400,388,1,0,0,0,400,394,1,0,0,0,401,
        405,1,0,0,0,402,404,8,5,0,0,403,402,1,0,0,0,404,407,1,0,0,0,405,
        403,1,0,0,0,405,406,1,0,0,0,406,408,1,0,0,0,407,405,1,0,0,0,408,
        409,3,52,22,0,409,410,1,0,0,0,410,411,6,25,7,0,411,59,1,0,0,0,412,
        414,7,1,0,0,413,412,1,0,0,0,413,414,1,0,0,0,414,415,1,0,0,0,415,
        416,3,30,11,0,416,61,1,0,0,0,417,419,7,9,0,0,418,417,1,0,0,0,419,
        420,1,0,0,0,420,418,1,0,0,0,420,421,1,0,0,0,421,422,1,0,0,0,422,
        423,6,27,8,0,423,63,1,0,0,0,424,426,7,5,0,0,425,424,1,0,0,0,426,
        427,1,0,0,0,427,425,1,0,0,0,427,428,1,0,0,0,428,429,1,0,0,0,429,
        430,6,28,9,0,430,65,1,0,0,0,431,432,3,48,20,0,432,67,1,0,0,0,433,
        435,7,9,0,0,434,433,1,0,0,0,435,436,1,0,0,0,436,434,1,0,0,0,436,
        437,1,0,0,0,437,438,1,0,0,0,438,439,6,30,8,0,439,69,1,0,0,0,440,
        442,7,5,0,0,441,440,1,0,0,0,442,443,1,0,0,0,443,441,1,0,0,0,443,
        444,1,0,0,0,444,445,1,0,0,0,445,446,6,31,9,0,446,71,1,0,0,0,447,
        449,7,1,0,0,448,447,1,0,0,0,448,449,1,0,0,0,449,450,1,0,0,0,450,
        451,3,30,11,0,451,73,1,0,0,0,452,453,3,48,20,0,453,75,1,0,0,0,454,
        456,7,9,0,0,455,454,1,0,0,0,456,457,1,0,0,0,457,455,1,0,0,0,457,
        458,1,0,0,0,458,459,1,0,0,0,459,460,6,34,8,0,460,77,1,0,0,0,461,
        463,7,5,0,0,462,461,1,0,0,0,463,464,1,0,0,0,464,462,1,0,0,0,464,
        465,1,0,0,0,465,466,1,0,0,0,466,467,6,35,9,0,467,79,1,0,0,0,468,
        469,3,48,20,0,469,81,1,0,0,0,470,472,7,9,0,0,471,470,1,0,0,0,472,
        473,1,0,0,0,473,471,1,0,0,0,473,474,1,0,0,0,474,475,1,0,0,0,475,
        476,6,37,8,0,476,83,1,0,0,0,477,479,7,5,0,0,478,477,1,0,0,0,479,
        480,1,0,0,0,480,478,1,0,0,0,480,481,1,0,0,0,481,482,1,0,0,0,482,
        483,6,38,9,0,483,85,1,0,0,0,484,485,3,48,20,0,485,87,1,0,0,0,486,
        488,7,9,0,0,487,486,1,0,0,0,488,489,1,0,0,0,489,487,1,0,0,0,489,
        490,1,0,0,0,490,491,1,0,0,0,491,492,6,40,8,0,492,89,1,0,0,0,493,
        495,7,5,0,0,494,493,1,0,0,0,495,496,1,0,0,0,496,494,1,0,0,0,496,
        497,1,0,0,0,497,498,1,0,0,0,498,499,6,41,9,0,499,91,1,0,0,0,500,
        501,3,22,7,0,501,93,1,0,0,0,502,504,7,9,0,0,503,502,1,0,0,0,504,
        505,1,0,0,0,505,503,1,0,0,0,505,506,1,0,0,0,506,507,1,0,0,0,507,
        508,6,43,8,0,508,95,1,0,0,0,509,511,7,5,0,0,510,509,1,0,0,0,511,
        512,1,0,0,0,512,510,1,0,0,0,512,513,1,0,0,0,513,514,1,0,0,0,514,
        515,6,44,9,0,515,97,1,0,0,0,516,518,8,11,0,0,517,516,1,0,0,0,518,
        519,1,0,0,0,519,517,1,0,0,0,519,520,1,0,0,0,520,99,1,0,0,0,521,523,
        7,9,0,0,522,521,1,0,0,0,523,524,1,0,0,0,524,522,1,0,0,0,524,525,
        1,0,0,0,525,526,1,0,0,0,526,527,6,46,8,0,527,101,1,0,0,0,528,530,
        7,5,0,0,529,528,1,0,0,0,530,531,1,0,0,0,531,529,1,0,0,0,531,532,
        1,0,0,0,532,533,1,0,0,0,533,534,6,47,10,0,534,103,1,0,0,0,62,0,1,
        2,3,4,5,6,7,108,194,199,203,206,210,214,217,225,232,237,244,249,
        255,261,269,274,280,286,297,301,305,311,317,324,329,331,343,349,
        355,363,368,380,386,392,400,405,413,420,427,436,443,448,457,464,
        473,480,489,496,505,512,519,524,531,11,5,1,0,5,2,0,5,3,0,5,4,0,5,
        5,0,5,6,0,2,7,0,0,1,0,6,0,0,4,0,0,2,0,0
    ]

class XeasyPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NUM_OF_DIM_MODE = 1
    FORMAT_MODE = 2
    INAME_MODE = 3
    CYANA_FORMAT_MODE = 4
    SPECTRUM_MODE = 5
    TOLERANCE_MODE = 6
    COMMENT_MODE = 7

    Num_of_dim = 1
    Format = 2
    Iname = 3
    Cyana_format = 4
    Spectrum = 5
    Tolerance = 6
    Integer = 7
    Float = 8
    Real = 9
    COMMENT = 10
    EXCLM_COMMENT = 11
    SMCLN_COMMENT = 12
    Simple_name = 13
    SPACE = 14
    RETURN = 15
    ENCLOSE_COMMENT = 16
    SECTION_COMMENT = 17
    LINE_COMMENT = 18
    Integer_ND = 19
    SPACE_ND = 20
    RETURN_ND = 21
    Simple_name_FO = 22
    SPACE_FO = 23
    RETURN_FO = 24
    Integer_IN = 25
    Simple_name_IN = 26
    SPACE_IN = 27
    RETURN_IN = 28
    Simple_name_CY = 29
    SPACE_CY = 30
    RETURN_CY = 31
    Simple_name_SP = 32
    SPACE_SP = 33
    RETURN_SP = 34
    Float_TO = 35
    TOACE_TO = 36
    RETURN_TO = 37
    Any_name = 38
    SPACE_CM = 39
    RETURN_CM = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "NUM_OF_DIM_MODE", "FORMAT_MODE", "INAME_MODE", 
                  "CYANA_FORMAT_MODE", "SPECTRUM_MODE", "TOLERANCE_MODE", 
                  "COMMENT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#FORMAT'", "'#INAME'", "'#CYANAFORMAT'", "'#SPECTRUM'", "'#TOLERANCE'" ]

    symbolicNames = [ "<INVALID>",
            "Num_of_dim", "Format", "Iname", "Cyana_format", "Spectrum", 
            "Tolerance", "Integer", "Float", "Real", "COMMENT", "EXCLM_COMMENT", 
            "SMCLN_COMMENT", "Simple_name", "SPACE", "RETURN", "ENCLOSE_COMMENT", 
            "SECTION_COMMENT", "LINE_COMMENT", "Integer_ND", "SPACE_ND", 
            "RETURN_ND", "Simple_name_FO", "SPACE_FO", "RETURN_FO", "Integer_IN", 
            "Simple_name_IN", "SPACE_IN", "RETURN_IN", "Simple_name_CY", 
            "SPACE_CY", "RETURN_CY", "Simple_name_SP", "SPACE_SP", "RETURN_SP", 
            "Float_TO", "TOACE_TO", "RETURN_TO", "Any_name", "SPACE_CM", 
            "RETURN_CM" ]

    ruleNames = [ "Num_of_dim", "Format", "Iname", "Cyana_format", "Spectrum", 
                  "Tolerance", "Integer", "Float", "Real", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "COMMENT", "EXCLM_COMMENT", "SMCLN_COMMENT", 
                  "Simple_name", "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", 
                  "SIMPLE_NAME", "SPACE", "RETURN", "ENCLOSE_COMMENT", "SECTION_COMMENT", 
                  "LINE_COMMENT", "Integer_ND", "SPACE_ND", "RETURN_ND", 
                  "Simple_name_FO", "SPACE_FO", "RETURN_FO", "Integer_IN", 
                  "Simple_name_IN", "SPACE_IN", "RETURN_IN", "Simple_name_CY", 
                  "SPACE_CY", "RETURN_CY", "Simple_name_SP", "SPACE_SP", 
                  "RETURN_SP", "Float_TO", "TOACE_TO", "RETURN_TO", "Any_name", 
                  "SPACE_CM", "RETURN_CM" ]

    grammarFileName = "XeasyPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


