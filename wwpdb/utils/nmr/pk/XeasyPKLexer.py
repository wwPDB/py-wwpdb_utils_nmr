# Generated from XeasyPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,43,578,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,2,0,7,0,
        2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,
        2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,
        15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,
        22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,
        28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,
        35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
        41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,
        48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,1,0,1,0,5,0,116,8,0,10,0,12,
        0,119,9,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,5,1,146,8,1,10,1,12,
        1,149,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
        7,3,7,229,8,7,1,7,1,7,1,8,3,8,234,8,8,1,8,1,8,3,8,238,8,8,1,9,3,
        9,241,8,9,1,9,1,9,3,9,245,8,9,1,9,1,9,3,9,249,8,9,1,9,3,9,252,8,
        9,1,10,1,10,1,10,1,10,1,10,1,10,3,10,260,8,10,1,11,1,11,1,12,4,12,
        265,8,12,11,12,12,12,266,1,13,4,13,270,8,13,11,13,12,13,271,1,13,
        1,13,1,14,4,14,277,8,14,11,14,12,14,278,1,14,5,14,282,8,14,10,14,
        12,14,285,9,14,1,14,5,14,288,8,14,10,14,12,14,291,9,14,1,14,5,14,
        294,8,14,10,14,12,14,297,9,14,1,14,1,14,1,15,4,15,302,8,15,11,15,
        12,15,303,1,15,5,15,307,8,15,10,15,12,15,310,9,15,1,15,5,15,313,
        8,15,10,15,12,15,316,9,15,1,15,5,15,319,8,15,10,15,12,15,322,9,15,
        1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,3,18,332,8,18,1,19,1,19,
        3,19,336,8,19,1,20,1,20,3,20,340,8,20,1,21,1,21,5,21,344,8,21,10,
        21,12,21,347,9,21,1,22,4,22,350,8,22,11,22,12,22,351,1,22,1,22,1,
        23,4,23,357,8,23,11,23,12,23,358,1,24,1,24,1,25,1,25,1,25,4,25,366,
        8,25,11,25,12,25,367,1,25,1,25,4,25,372,8,25,11,25,12,25,373,1,25,
        1,25,4,25,378,8,25,11,25,12,25,379,1,25,1,25,1,25,1,25,1,25,1,25,
        3,25,388,8,25,1,25,5,25,391,8,25,10,25,12,25,394,9,25,1,25,1,25,
        1,25,1,25,1,26,1,26,1,26,4,26,403,8,26,11,26,12,26,404,1,26,1,26,
        4,26,409,8,26,11,26,12,26,410,1,26,1,26,4,26,415,8,26,11,26,12,26,
        416,1,26,1,26,1,26,1,26,1,26,1,26,3,26,425,8,26,1,26,5,26,428,8,
        26,10,26,12,26,431,9,26,1,26,1,26,1,26,1,26,1,27,3,27,438,8,27,1,
        27,1,27,1,28,4,28,443,8,28,11,28,12,28,444,1,28,1,28,1,29,4,29,450,
        8,29,11,29,12,29,451,1,29,1,29,1,30,3,30,457,8,30,1,30,1,30,1,31,
        4,31,462,8,31,11,31,12,31,463,1,31,1,31,1,32,4,32,469,8,32,11,32,
        12,32,470,1,32,1,32,1,33,1,33,1,34,4,34,478,8,34,11,34,12,34,479,
        1,34,1,34,1,35,4,35,485,8,35,11,35,12,35,486,1,35,1,35,1,36,3,36,
        492,8,36,1,36,1,36,1,37,1,37,1,38,4,38,499,8,38,11,38,12,38,500,
        1,38,1,38,1,39,4,39,506,8,39,11,39,12,39,507,1,39,1,39,1,40,1,40,
        1,41,4,41,515,8,41,11,41,12,41,516,1,41,1,41,1,42,4,42,522,8,42,
        11,42,12,42,523,1,42,1,42,1,43,1,43,1,44,4,44,531,8,44,11,44,12,
        44,532,1,44,1,44,1,45,4,45,538,8,45,11,45,12,45,539,1,45,1,45,1,
        46,1,46,1,47,4,47,547,8,47,11,47,12,47,548,1,47,1,47,1,48,4,48,554,
        8,48,11,48,12,48,555,1,48,1,48,1,49,4,49,561,8,49,11,49,12,49,562,
        1,50,4,50,566,8,50,11,50,12,50,567,1,50,1,50,1,51,4,51,573,8,51,
        11,51,12,51,574,1,51,1,51,0,0,52,9,1,11,2,13,3,15,4,17,5,19,6,21,
        7,23,8,25,9,27,10,29,0,31,0,33,0,35,11,37,12,39,13,41,14,43,0,45,
        0,47,0,49,0,51,0,53,15,55,16,57,0,59,17,61,18,63,19,65,20,67,21,
        69,22,71,23,73,24,75,25,77,26,79,27,81,28,83,29,85,30,87,31,89,32,
        91,33,93,34,95,35,97,36,99,37,101,38,103,39,105,40,107,41,109,42,
        111,43,9,0,1,2,3,4,5,6,7,8,13,2,0,9,10,13,13,2,0,43,43,45,45,2,0,
        69,69,101,101,1,0,48,57,2,0,33,33,35,35,2,0,10,10,13,13,2,0,65,90,
        97,122,6,0,40,40,42,43,45,46,63,63,95,95,123,123,8,0,34,35,37,37,
        39,39,41,41,44,44,47,47,59,59,124,125,2,0,9,9,32,32,4,0,35,35,42,
        42,47,47,61,61,3,0,38,38,59,59,92,92,3,0,9,10,13,13,32,32,622,0,
        9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,
        19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,
        35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,53,1,0,0,0,0,
        55,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,1,63,1,0,0,0,1,65,1,0,0,0,1,
        67,1,0,0,0,2,69,1,0,0,0,2,71,1,0,0,0,2,73,1,0,0,0,3,75,1,0,0,0,3,
        77,1,0,0,0,3,79,1,0,0,0,4,81,1,0,0,0,4,83,1,0,0,0,4,85,1,0,0,0,4,
        87,1,0,0,0,5,89,1,0,0,0,5,91,1,0,0,0,5,93,1,0,0,0,6,95,1,0,0,0,6,
        97,1,0,0,0,6,99,1,0,0,0,7,101,1,0,0,0,7,103,1,0,0,0,7,105,1,0,0,
        0,8,107,1,0,0,0,8,109,1,0,0,0,8,111,1,0,0,0,9,113,1,0,0,0,11,143,
        1,0,0,0,13,168,1,0,0,0,15,178,1,0,0,0,17,187,1,0,0,0,19,202,1,0,
        0,0,21,214,1,0,0,0,23,228,1,0,0,0,25,233,1,0,0,0,27,240,1,0,0,0,
        29,259,1,0,0,0,31,261,1,0,0,0,33,264,1,0,0,0,35,269,1,0,0,0,37,276,
        1,0,0,0,39,301,1,0,0,0,41,325,1,0,0,0,43,327,1,0,0,0,45,331,1,0,
        0,0,47,335,1,0,0,0,49,339,1,0,0,0,51,341,1,0,0,0,53,349,1,0,0,0,
        55,356,1,0,0,0,57,360,1,0,0,0,59,387,1,0,0,0,61,424,1,0,0,0,63,437,
        1,0,0,0,65,442,1,0,0,0,67,449,1,0,0,0,69,456,1,0,0,0,71,461,1,0,
        0,0,73,468,1,0,0,0,75,474,1,0,0,0,77,477,1,0,0,0,79,484,1,0,0,0,
        81,491,1,0,0,0,83,495,1,0,0,0,85,498,1,0,0,0,87,505,1,0,0,0,89,511,
        1,0,0,0,91,514,1,0,0,0,93,521,1,0,0,0,95,527,1,0,0,0,97,530,1,0,
        0,0,99,537,1,0,0,0,101,543,1,0,0,0,103,546,1,0,0,0,105,553,1,0,0,
        0,107,560,1,0,0,0,109,565,1,0,0,0,111,572,1,0,0,0,113,117,5,35,0,
        0,114,116,8,0,0,0,115,114,1,0,0,0,116,119,1,0,0,0,117,115,1,0,0,
        0,117,118,1,0,0,0,118,120,1,0,0,0,119,117,1,0,0,0,120,121,5,78,0,
        0,121,122,5,117,0,0,122,123,5,109,0,0,123,124,5,98,0,0,124,125,5,
        101,0,0,125,126,5,114,0,0,126,127,5,32,0,0,127,128,5,111,0,0,128,
        129,5,102,0,0,129,130,5,32,0,0,130,131,5,100,0,0,131,132,5,105,0,
        0,132,133,5,109,0,0,133,134,5,101,0,0,134,135,5,110,0,0,135,136,
        5,115,0,0,136,137,5,105,0,0,137,138,5,111,0,0,138,139,5,110,0,0,
        139,140,5,115,0,0,140,141,1,0,0,0,141,142,6,0,0,0,142,10,1,0,0,0,
        143,147,5,35,0,0,144,146,8,0,0,0,145,144,1,0,0,0,146,149,1,0,0,0,
        147,145,1,0,0,0,147,148,1,0,0,0,148,150,1,0,0,0,149,147,1,0,0,0,
        150,151,5,78,0,0,151,152,5,117,0,0,152,153,5,109,0,0,153,154,5,98,
        0,0,154,155,5,101,0,0,155,156,5,114,0,0,156,157,5,32,0,0,157,158,
        5,111,0,0,158,159,5,102,0,0,159,160,5,32,0,0,160,161,5,112,0,0,161,
        162,5,101,0,0,162,163,5,97,0,0,163,164,5,107,0,0,164,165,5,115,0,
        0,165,166,1,0,0,0,166,167,6,1,1,0,167,12,1,0,0,0,168,169,5,35,0,
        0,169,170,5,70,0,0,170,171,5,79,0,0,171,172,5,82,0,0,172,173,5,77,
        0,0,173,174,5,65,0,0,174,175,5,84,0,0,175,176,1,0,0,0,176,177,6,
        2,2,0,177,14,1,0,0,0,178,179,5,35,0,0,179,180,5,73,0,0,180,181,5,
        78,0,0,181,182,5,65,0,0,182,183,5,77,0,0,183,184,5,69,0,0,184,185,
        1,0,0,0,185,186,6,3,3,0,186,16,1,0,0,0,187,188,5,35,0,0,188,189,
        5,67,0,0,189,190,5,89,0,0,190,191,5,65,0,0,191,192,5,78,0,0,192,
        193,5,65,0,0,193,194,5,70,0,0,194,195,5,79,0,0,195,196,5,82,0,0,
        196,197,5,77,0,0,197,198,5,65,0,0,198,199,5,84,0,0,199,200,1,0,0,
        0,200,201,6,4,4,0,201,18,1,0,0,0,202,203,5,35,0,0,203,204,5,83,0,
        0,204,205,5,80,0,0,205,206,5,69,0,0,206,207,5,67,0,0,207,208,5,84,
        0,0,208,209,5,82,0,0,209,210,5,85,0,0,210,211,5,77,0,0,211,212,1,
        0,0,0,212,213,6,5,5,0,213,20,1,0,0,0,214,215,5,35,0,0,215,216,5,
        84,0,0,216,217,5,79,0,0,217,218,5,76,0,0,218,219,5,69,0,0,219,220,
        5,82,0,0,220,221,5,65,0,0,221,222,5,78,0,0,222,223,5,67,0,0,223,
        224,5,69,0,0,224,225,1,0,0,0,225,226,6,6,6,0,226,22,1,0,0,0,227,
        229,7,1,0,0,228,227,1,0,0,0,228,229,1,0,0,0,229,230,1,0,0,0,230,
        231,3,33,12,0,231,24,1,0,0,0,232,234,7,1,0,0,233,232,1,0,0,0,233,
        234,1,0,0,0,234,237,1,0,0,0,235,238,3,33,12,0,236,238,3,29,10,0,
        237,235,1,0,0,0,237,236,1,0,0,0,238,26,1,0,0,0,239,241,7,1,0,0,240,
        239,1,0,0,0,240,241,1,0,0,0,241,244,1,0,0,0,242,245,3,33,12,0,243,
        245,3,29,10,0,244,242,1,0,0,0,244,243,1,0,0,0,245,251,1,0,0,0,246,
        248,7,2,0,0,247,249,7,1,0,0,248,247,1,0,0,0,248,249,1,0,0,0,249,
        250,1,0,0,0,250,252,3,33,12,0,251,246,1,0,0,0,251,252,1,0,0,0,252,
        28,1,0,0,0,253,254,3,33,12,0,254,255,5,46,0,0,255,256,3,33,12,0,
        256,260,1,0,0,0,257,258,5,46,0,0,258,260,3,33,12,0,259,253,1,0,0,
        0,259,257,1,0,0,0,260,30,1,0,0,0,261,262,7,3,0,0,262,32,1,0,0,0,
        263,265,3,31,11,0,264,263,1,0,0,0,265,266,1,0,0,0,266,264,1,0,0,
        0,266,267,1,0,0,0,267,34,1,0,0,0,268,270,7,4,0,0,269,268,1,0,0,0,
        270,271,1,0,0,0,271,269,1,0,0,0,271,272,1,0,0,0,272,273,1,0,0,0,
        273,274,6,13,7,0,274,36,1,0,0,0,275,277,5,33,0,0,276,275,1,0,0,0,
        277,278,1,0,0,0,278,276,1,0,0,0,278,279,1,0,0,0,279,283,1,0,0,0,
        280,282,8,5,0,0,281,280,1,0,0,0,282,285,1,0,0,0,283,281,1,0,0,0,
        283,284,1,0,0,0,284,289,1,0,0,0,285,283,1,0,0,0,286,288,5,33,0,0,
        287,286,1,0,0,0,288,291,1,0,0,0,289,287,1,0,0,0,289,290,1,0,0,0,
        290,295,1,0,0,0,291,289,1,0,0,0,292,294,8,5,0,0,293,292,1,0,0,0,
        294,297,1,0,0,0,295,293,1,0,0,0,295,296,1,0,0,0,296,298,1,0,0,0,
        297,295,1,0,0,0,298,299,6,14,8,0,299,38,1,0,0,0,300,302,5,59,0,0,
        301,300,1,0,0,0,302,303,1,0,0,0,303,301,1,0,0,0,303,304,1,0,0,0,
        304,308,1,0,0,0,305,307,8,5,0,0,306,305,1,0,0,0,307,310,1,0,0,0,
        308,306,1,0,0,0,308,309,1,0,0,0,309,314,1,0,0,0,310,308,1,0,0,0,
        311,313,5,59,0,0,312,311,1,0,0,0,313,316,1,0,0,0,314,312,1,0,0,0,
        314,315,1,0,0,0,315,320,1,0,0,0,316,314,1,0,0,0,317,319,8,5,0,0,
        318,317,1,0,0,0,319,322,1,0,0,0,320,318,1,0,0,0,320,321,1,0,0,0,
        321,323,1,0,0,0,322,320,1,0,0,0,323,324,6,15,8,0,324,40,1,0,0,0,
        325,326,3,51,21,0,326,42,1,0,0,0,327,328,7,6,0,0,328,44,1,0,0,0,
        329,332,3,43,17,0,330,332,3,31,11,0,331,329,1,0,0,0,331,330,1,0,
        0,0,332,46,1,0,0,0,333,336,3,45,18,0,334,336,7,7,0,0,335,333,1,0,
        0,0,335,334,1,0,0,0,336,48,1,0,0,0,337,340,3,47,19,0,338,340,7,8,
        0,0,339,337,1,0,0,0,339,338,1,0,0,0,340,50,1,0,0,0,341,345,3,47,
        19,0,342,344,3,49,20,0,343,342,1,0,0,0,344,347,1,0,0,0,345,343,1,
        0,0,0,345,346,1,0,0,0,346,52,1,0,0,0,347,345,1,0,0,0,348,350,7,9,
        0,0,349,348,1,0,0,0,350,351,1,0,0,0,351,349,1,0,0,0,351,352,1,0,
        0,0,352,353,1,0,0,0,353,354,6,22,9,0,354,54,1,0,0,0,355,357,7,5,
        0,0,356,355,1,0,0,0,357,358,1,0,0,0,358,356,1,0,0,0,358,359,1,0,
        0,0,359,56,1,0,0,0,360,361,7,10,0,0,361,58,1,0,0,0,362,388,7,11,
        0,0,363,365,3,57,24,0,364,366,5,47,0,0,365,364,1,0,0,0,366,367,1,
        0,0,0,367,365,1,0,0,0,367,368,1,0,0,0,368,388,1,0,0,0,369,371,3,
        57,24,0,370,372,5,42,0,0,371,370,1,0,0,0,372,373,1,0,0,0,373,371,
        1,0,0,0,373,374,1,0,0,0,374,388,1,0,0,0,375,377,3,57,24,0,376,378,
        5,61,0,0,377,376,1,0,0,0,378,379,1,0,0,0,379,377,1,0,0,0,379,380,
        1,0,0,0,380,388,1,0,0,0,381,382,5,82,0,0,382,383,5,69,0,0,383,384,
        5,77,0,0,384,385,5,65,0,0,385,386,5,82,0,0,386,388,5,75,0,0,387,
        362,1,0,0,0,387,363,1,0,0,0,387,369,1,0,0,0,387,375,1,0,0,0,387,
        381,1,0,0,0,388,392,1,0,0,0,389,391,5,32,0,0,390,389,1,0,0,0,391,
        394,1,0,0,0,392,390,1,0,0,0,392,393,1,0,0,0,393,395,1,0,0,0,394,
        392,1,0,0,0,395,396,3,55,23,0,396,397,1,0,0,0,397,398,6,25,8,0,398,
        60,1,0,0,0,399,425,7,11,0,0,400,402,3,57,24,0,401,403,5,47,0,0,402,
        401,1,0,0,0,403,404,1,0,0,0,404,402,1,0,0,0,404,405,1,0,0,0,405,
        425,1,0,0,0,406,408,3,57,24,0,407,409,5,42,0,0,408,407,1,0,0,0,409,
        410,1,0,0,0,410,408,1,0,0,0,410,411,1,0,0,0,411,425,1,0,0,0,412,
        414,3,57,24,0,413,415,5,61,0,0,414,413,1,0,0,0,415,416,1,0,0,0,416,
        414,1,0,0,0,416,417,1,0,0,0,417,425,1,0,0,0,418,419,5,82,0,0,419,
        420,5,69,0,0,420,421,5,77,0,0,421,422,5,65,0,0,422,423,5,82,0,0,
        423,425,5,75,0,0,424,399,1,0,0,0,424,400,1,0,0,0,424,406,1,0,0,0,
        424,412,1,0,0,0,424,418,1,0,0,0,425,429,1,0,0,0,426,428,8,5,0,0,
        427,426,1,0,0,0,428,431,1,0,0,0,429,427,1,0,0,0,429,430,1,0,0,0,
        430,432,1,0,0,0,431,429,1,0,0,0,432,433,3,55,23,0,433,434,1,0,0,
        0,434,435,6,26,8,0,435,62,1,0,0,0,436,438,7,1,0,0,437,436,1,0,0,
        0,437,438,1,0,0,0,438,439,1,0,0,0,439,440,3,33,12,0,440,64,1,0,0,
        0,441,443,7,9,0,0,442,441,1,0,0,0,443,444,1,0,0,0,444,442,1,0,0,
        0,444,445,1,0,0,0,445,446,1,0,0,0,446,447,6,28,9,0,447,66,1,0,0,
        0,448,450,7,5,0,0,449,448,1,0,0,0,450,451,1,0,0,0,451,449,1,0,0,
        0,451,452,1,0,0,0,452,453,1,0,0,0,453,454,6,29,10,0,454,68,1,0,0,
        0,455,457,7,1,0,0,456,455,1,0,0,0,456,457,1,0,0,0,457,458,1,0,0,
        0,458,459,3,33,12,0,459,70,1,0,0,0,460,462,7,9,0,0,461,460,1,0,0,
        0,462,463,1,0,0,0,463,461,1,0,0,0,463,464,1,0,0,0,464,465,1,0,0,
        0,465,466,6,31,9,0,466,72,1,0,0,0,467,469,7,5,0,0,468,467,1,0,0,
        0,469,470,1,0,0,0,470,468,1,0,0,0,470,471,1,0,0,0,471,472,1,0,0,
        0,472,473,6,32,10,0,473,74,1,0,0,0,474,475,3,51,21,0,475,76,1,0,
        0,0,476,478,7,9,0,0,477,476,1,0,0,0,478,479,1,0,0,0,479,477,1,0,
        0,0,479,480,1,0,0,0,480,481,1,0,0,0,481,482,6,34,9,0,482,78,1,0,
        0,0,483,485,7,5,0,0,484,483,1,0,0,0,485,486,1,0,0,0,486,484,1,0,
        0,0,486,487,1,0,0,0,487,488,1,0,0,0,488,489,6,35,10,0,489,80,1,0,
        0,0,490,492,7,1,0,0,491,490,1,0,0,0,491,492,1,0,0,0,492,493,1,0,
        0,0,493,494,3,33,12,0,494,82,1,0,0,0,495,496,3,51,21,0,496,84,1,
        0,0,0,497,499,7,9,0,0,498,497,1,0,0,0,499,500,1,0,0,0,500,498,1,
        0,0,0,500,501,1,0,0,0,501,502,1,0,0,0,502,503,6,38,9,0,503,86,1,
        0,0,0,504,506,7,5,0,0,505,504,1,0,0,0,506,507,1,0,0,0,507,505,1,
        0,0,0,507,508,1,0,0,0,508,509,1,0,0,0,509,510,6,39,10,0,510,88,1,
        0,0,0,511,512,3,51,21,0,512,90,1,0,0,0,513,515,7,9,0,0,514,513,1,
        0,0,0,515,516,1,0,0,0,516,514,1,0,0,0,516,517,1,0,0,0,517,518,1,
        0,0,0,518,519,6,41,9,0,519,92,1,0,0,0,520,522,7,5,0,0,521,520,1,
        0,0,0,522,523,1,0,0,0,523,521,1,0,0,0,523,524,1,0,0,0,524,525,1,
        0,0,0,525,526,6,42,10,0,526,94,1,0,0,0,527,528,3,51,21,0,528,96,
        1,0,0,0,529,531,7,9,0,0,530,529,1,0,0,0,531,532,1,0,0,0,532,530,
        1,0,0,0,532,533,1,0,0,0,533,534,1,0,0,0,534,535,6,44,9,0,535,98,
        1,0,0,0,536,538,7,5,0,0,537,536,1,0,0,0,538,539,1,0,0,0,539,537,
        1,0,0,0,539,540,1,0,0,0,540,541,1,0,0,0,541,542,6,45,10,0,542,100,
        1,0,0,0,543,544,3,25,8,0,544,102,1,0,0,0,545,547,7,9,0,0,546,545,
        1,0,0,0,547,548,1,0,0,0,548,546,1,0,0,0,548,549,1,0,0,0,549,550,
        1,0,0,0,550,551,6,47,9,0,551,104,1,0,0,0,552,554,7,5,0,0,553,552,
        1,0,0,0,554,555,1,0,0,0,555,553,1,0,0,0,555,556,1,0,0,0,556,557,
        1,0,0,0,557,558,6,48,10,0,558,106,1,0,0,0,559,561,8,12,0,0,560,559,
        1,0,0,0,561,562,1,0,0,0,562,560,1,0,0,0,562,563,1,0,0,0,563,108,
        1,0,0,0,564,566,7,9,0,0,565,564,1,0,0,0,566,567,1,0,0,0,567,565,
        1,0,0,0,567,568,1,0,0,0,568,569,1,0,0,0,569,570,6,50,9,0,570,110,
        1,0,0,0,571,573,7,5,0,0,572,571,1,0,0,0,573,574,1,0,0,0,574,572,
        1,0,0,0,574,575,1,0,0,0,575,576,1,0,0,0,576,577,6,51,11,0,577,112,
        1,0,0,0,65,0,1,2,3,4,5,6,7,8,117,147,228,233,237,240,244,248,251,
        259,266,271,278,283,289,295,303,308,314,320,331,335,339,345,351,
        358,367,373,379,387,392,404,410,416,424,429,437,444,451,456,463,
        470,479,486,491,500,507,516,523,532,539,548,555,562,567,574,12,5,
        1,0,5,2,0,5,3,0,5,4,0,5,5,0,5,6,0,5,7,0,2,8,0,0,1,0,6,0,0,4,0,0,
        2,0,0
    ]

class XeasyPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NUM_OF_DIM_MODE = 1
    NUM_OF_PEAK_MODE = 2
    FORMAT_MODE = 3
    INAME_MODE = 4
    CYANA_FORMAT_MODE = 5
    SPECTRUM_MODE = 6
    TOLERANCE_MODE = 7
    COMMENT_MODE = 8

    Num_of_dim = 1
    Num_of_peaks = 2
    Format = 3
    Iname = 4
    Cyana_format = 5
    Spectrum = 6
    Tolerance = 7
    Integer = 8
    Float = 9
    Real = 10
    COMMENT = 11
    EXCLM_COMMENT = 12
    SMCLN_COMMENT = 13
    Simple_name = 14
    SPACE = 15
    RETURN = 16
    SECTION_COMMENT = 17
    LINE_COMMENT = 18
    Integer_ND = 19
    SPACE_ND = 20
    RETURN_ND = 21
    Integer_NP = 22
    SPACE_NP = 23
    RETURN_NP = 24
    Simple_name_FO = 25
    SPACE_FO = 26
    RETURN_FO = 27
    Integer_IN = 28
    Simple_name_IN = 29
    SPACE_IN = 30
    RETURN_IN = 31
    Simple_name_CY = 32
    SPACE_CY = 33
    RETURN_CY = 34
    Simple_name_SP = 35
    SPACE_SP = 36
    RETURN_SP = 37
    Float_TO = 38
    TOACE_TO = 39
    RETURN_TO = 40
    Any_name = 41
    SPACE_CM = 42
    RETURN_CM = 43

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "NUM_OF_DIM_MODE", "NUM_OF_PEAK_MODE", 
                  "FORMAT_MODE", "INAME_MODE", "CYANA_FORMAT_MODE", "SPECTRUM_MODE", 
                  "TOLERANCE_MODE", "COMMENT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#FORMAT'", "'#INAME'", "'#CYANAFORMAT'", "'#SPECTRUM'", "'#TOLERANCE'" ]

    symbolicNames = [ "<INVALID>",
            "Num_of_dim", "Num_of_peaks", "Format", "Iname", "Cyana_format", 
            "Spectrum", "Tolerance", "Integer", "Float", "Real", "COMMENT", 
            "EXCLM_COMMENT", "SMCLN_COMMENT", "Simple_name", "SPACE", "RETURN", 
            "SECTION_COMMENT", "LINE_COMMENT", "Integer_ND", "SPACE_ND", 
            "RETURN_ND", "Integer_NP", "SPACE_NP", "RETURN_NP", "Simple_name_FO", 
            "SPACE_FO", "RETURN_FO", "Integer_IN", "Simple_name_IN", "SPACE_IN", 
            "RETURN_IN", "Simple_name_CY", "SPACE_CY", "RETURN_CY", "Simple_name_SP", 
            "SPACE_SP", "RETURN_SP", "Float_TO", "TOACE_TO", "RETURN_TO", 
            "Any_name", "SPACE_CM", "RETURN_CM" ]

    ruleNames = [ "Num_of_dim", "Num_of_peaks", "Format", "Iname", "Cyana_format", 
                  "Spectrum", "Tolerance", "Integer", "Float", "Real", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "COMMENT", "EXCLM_COMMENT", "SMCLN_COMMENT", 
                  "Simple_name", "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", 
                  "SIMPLE_NAME", "SPACE", "RETURN", "COMMENT_START_CHAR", 
                  "SECTION_COMMENT", "LINE_COMMENT", "Integer_ND", "SPACE_ND", 
                  "RETURN_ND", "Integer_NP", "SPACE_NP", "RETURN_NP", "Simple_name_FO", 
                  "SPACE_FO", "RETURN_FO", "Integer_IN", "Simple_name_IN", 
                  "SPACE_IN", "RETURN_IN", "Simple_name_CY", "SPACE_CY", 
                  "RETURN_CY", "Simple_name_SP", "SPACE_SP", "RETURN_SP", 
                  "Float_TO", "TOACE_TO", "RETURN_TO", "Any_name", "SPACE_CM", 
                  "RETURN_CM" ]

    grammarFileName = "XeasyPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


