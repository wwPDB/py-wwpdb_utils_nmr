# Generated from XeasyPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,36,500,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,
        2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,
        10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
        16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,
        23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,
        29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,
        36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,
        42,2,43,7,43,1,0,1,0,5,0,98,8,0,10,0,12,0,101,9,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,
        2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,3,
        6,186,8,6,1,6,1,6,1,7,3,7,191,8,7,1,7,1,7,3,7,195,8,7,1,8,3,8,198,
        8,8,1,8,1,8,3,8,202,8,8,1,8,1,8,3,8,206,8,8,1,8,3,8,209,8,8,1,9,
        1,9,1,9,1,9,1,9,1,9,3,9,217,8,9,1,10,1,10,1,11,4,11,222,8,11,11,
        11,12,11,223,1,12,4,12,227,8,12,11,12,12,12,228,1,12,5,12,232,8,
        12,10,12,12,12,235,9,12,1,12,5,12,238,8,12,10,12,12,12,241,9,12,
        1,12,5,12,244,8,12,10,12,12,12,247,9,12,1,12,1,12,1,13,4,13,252,
        8,13,11,13,12,13,253,1,13,5,13,257,8,13,10,13,12,13,260,9,13,1,13,
        5,13,263,8,13,10,13,12,13,266,9,13,1,13,5,13,269,8,13,10,13,12,13,
        272,9,13,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,3,16,282,8,16,1,
        17,1,17,3,17,286,8,17,1,18,1,18,3,18,290,8,18,1,19,1,19,5,19,294,
        8,19,10,19,12,19,297,9,19,1,20,4,20,300,8,20,11,20,12,20,301,1,20,
        1,20,1,21,4,21,307,8,21,11,21,12,21,308,1,22,1,22,1,22,5,22,314,
        8,22,10,22,12,22,317,9,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,4,23,
        326,8,23,11,23,12,23,327,1,23,1,23,4,23,332,8,23,11,23,12,23,333,
        1,23,1,23,4,23,338,8,23,11,23,12,23,339,1,23,1,23,1,23,1,23,1,23,
        1,23,3,23,348,8,23,1,23,5,23,351,8,23,10,23,12,23,354,9,23,1,23,
        1,23,1,23,1,23,1,24,1,24,1,24,4,24,363,8,24,11,24,12,24,364,1,24,
        1,24,4,24,369,8,24,11,24,12,24,370,1,24,1,24,4,24,375,8,24,11,24,
        12,24,376,1,24,1,24,1,24,1,24,1,24,1,24,3,24,385,8,24,1,24,5,24,
        388,8,24,10,24,12,24,391,9,24,1,24,1,24,1,24,1,24,1,25,3,25,398,
        8,25,1,25,1,25,1,26,4,26,403,8,26,11,26,12,26,404,1,26,1,26,1,27,
        4,27,410,8,27,11,27,12,27,411,1,27,1,27,1,28,1,28,1,29,4,29,419,
        8,29,11,29,12,29,420,1,29,1,29,1,30,4,30,426,8,30,11,30,12,30,427,
        1,30,1,30,1,31,3,31,433,8,31,1,31,1,31,1,32,1,32,1,33,4,33,440,8,
        33,11,33,12,33,441,1,33,1,33,1,34,4,34,447,8,34,11,34,12,34,448,
        1,34,1,34,1,35,1,35,1,36,4,36,456,8,36,11,36,12,36,457,1,36,1,36,
        1,37,4,37,463,8,37,11,37,12,37,464,1,37,1,37,1,38,1,38,1,39,4,39,
        472,8,39,11,39,12,39,473,1,39,1,39,1,40,4,40,479,8,40,11,40,12,40,
        480,1,40,1,40,1,41,1,41,1,42,4,42,488,8,42,11,42,12,42,489,1,42,
        1,42,1,43,4,43,495,8,43,11,43,12,43,496,1,43,1,43,1,315,0,44,7,1,
        9,2,11,3,13,4,15,5,17,6,19,7,21,8,23,9,25,0,27,0,29,0,31,10,33,11,
        35,12,37,0,39,0,41,0,43,0,45,0,47,13,49,14,51,15,53,16,55,17,57,
        18,59,19,61,20,63,21,65,22,67,23,69,24,71,25,73,26,75,27,77,28,79,
        29,81,30,83,31,85,32,87,33,89,34,91,35,93,36,7,0,1,2,3,4,5,6,10,
        2,0,9,10,13,13,2,0,43,43,45,45,2,0,69,69,101,101,1,0,48,57,2,0,10,
        10,13,13,2,0,65,90,97,122,5,0,35,35,42,43,45,46,63,63,95,95,2,0,
        34,34,39,39,2,0,9,9,32,32,4,0,33,33,38,38,59,59,92,92,541,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,31,1,0,0,0,0,33,1,
        0,0,0,0,35,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,
        0,0,0,0,55,1,0,0,0,1,57,1,0,0,0,1,59,1,0,0,0,1,61,1,0,0,0,2,63,1,
        0,0,0,2,65,1,0,0,0,2,67,1,0,0,0,3,69,1,0,0,0,3,71,1,0,0,0,3,73,1,
        0,0,0,3,75,1,0,0,0,4,77,1,0,0,0,4,79,1,0,0,0,4,81,1,0,0,0,5,83,1,
        0,0,0,5,85,1,0,0,0,5,87,1,0,0,0,6,89,1,0,0,0,6,91,1,0,0,0,6,93,1,
        0,0,0,7,95,1,0,0,0,9,125,1,0,0,0,11,135,1,0,0,0,13,144,1,0,0,0,15,
        159,1,0,0,0,17,171,1,0,0,0,19,185,1,0,0,0,21,190,1,0,0,0,23,197,
        1,0,0,0,25,216,1,0,0,0,27,218,1,0,0,0,29,221,1,0,0,0,31,226,1,0,
        0,0,33,251,1,0,0,0,35,275,1,0,0,0,37,277,1,0,0,0,39,281,1,0,0,0,
        41,285,1,0,0,0,43,289,1,0,0,0,45,291,1,0,0,0,47,299,1,0,0,0,49,306,
        1,0,0,0,51,310,1,0,0,0,53,347,1,0,0,0,55,384,1,0,0,0,57,397,1,0,
        0,0,59,402,1,0,0,0,61,409,1,0,0,0,63,415,1,0,0,0,65,418,1,0,0,0,
        67,425,1,0,0,0,69,432,1,0,0,0,71,436,1,0,0,0,73,439,1,0,0,0,75,446,
        1,0,0,0,77,452,1,0,0,0,79,455,1,0,0,0,81,462,1,0,0,0,83,468,1,0,
        0,0,85,471,1,0,0,0,87,478,1,0,0,0,89,484,1,0,0,0,91,487,1,0,0,0,
        93,494,1,0,0,0,95,99,5,35,0,0,96,98,8,0,0,0,97,96,1,0,0,0,98,101,
        1,0,0,0,99,97,1,0,0,0,99,100,1,0,0,0,100,102,1,0,0,0,101,99,1,0,
        0,0,102,103,5,78,0,0,103,104,5,117,0,0,104,105,5,109,0,0,105,106,
        5,98,0,0,106,107,5,101,0,0,107,108,5,114,0,0,108,109,5,32,0,0,109,
        110,5,111,0,0,110,111,5,102,0,0,111,112,5,32,0,0,112,113,5,100,0,
        0,113,114,5,105,0,0,114,115,5,109,0,0,115,116,5,101,0,0,116,117,
        5,110,0,0,117,118,5,115,0,0,118,119,5,105,0,0,119,120,5,111,0,0,
        120,121,5,110,0,0,121,122,5,115,0,0,122,123,1,0,0,0,123,124,6,0,
        0,0,124,8,1,0,0,0,125,126,5,35,0,0,126,127,5,70,0,0,127,128,5,79,
        0,0,128,129,5,82,0,0,129,130,5,77,0,0,130,131,5,65,0,0,131,132,5,
        84,0,0,132,133,1,0,0,0,133,134,6,1,1,0,134,10,1,0,0,0,135,136,5,
        35,0,0,136,137,5,73,0,0,137,138,5,78,0,0,138,139,5,65,0,0,139,140,
        5,77,0,0,140,141,5,69,0,0,141,142,1,0,0,0,142,143,6,2,2,0,143,12,
        1,0,0,0,144,145,5,35,0,0,145,146,5,67,0,0,146,147,5,89,0,0,147,148,
        5,65,0,0,148,149,5,78,0,0,149,150,5,65,0,0,150,151,5,70,0,0,151,
        152,5,79,0,0,152,153,5,82,0,0,153,154,5,77,0,0,154,155,5,65,0,0,
        155,156,5,84,0,0,156,157,1,0,0,0,157,158,6,3,3,0,158,14,1,0,0,0,
        159,160,5,35,0,0,160,161,5,83,0,0,161,162,5,80,0,0,162,163,5,69,
        0,0,163,164,5,67,0,0,164,165,5,84,0,0,165,166,5,82,0,0,166,167,5,
        85,0,0,167,168,5,77,0,0,168,169,1,0,0,0,169,170,6,4,4,0,170,16,1,
        0,0,0,171,172,5,35,0,0,172,173,5,84,0,0,173,174,5,79,0,0,174,175,
        5,76,0,0,175,176,5,69,0,0,176,177,5,82,0,0,177,178,5,65,0,0,178,
        179,5,78,0,0,179,180,5,67,0,0,180,181,5,69,0,0,181,182,1,0,0,0,182,
        183,6,5,5,0,183,18,1,0,0,0,184,186,7,1,0,0,185,184,1,0,0,0,185,186,
        1,0,0,0,186,187,1,0,0,0,187,188,3,29,11,0,188,20,1,0,0,0,189,191,
        7,1,0,0,190,189,1,0,0,0,190,191,1,0,0,0,191,194,1,0,0,0,192,195,
        3,29,11,0,193,195,3,25,9,0,194,192,1,0,0,0,194,193,1,0,0,0,195,22,
        1,0,0,0,196,198,7,1,0,0,197,196,1,0,0,0,197,198,1,0,0,0,198,201,
        1,0,0,0,199,202,3,29,11,0,200,202,3,25,9,0,201,199,1,0,0,0,201,200,
        1,0,0,0,202,208,1,0,0,0,203,205,7,2,0,0,204,206,7,1,0,0,205,204,
        1,0,0,0,205,206,1,0,0,0,206,207,1,0,0,0,207,209,3,29,11,0,208,203,
        1,0,0,0,208,209,1,0,0,0,209,24,1,0,0,0,210,211,3,29,11,0,211,212,
        5,46,0,0,212,213,3,29,11,0,213,217,1,0,0,0,214,215,5,46,0,0,215,
        217,3,29,11,0,216,210,1,0,0,0,216,214,1,0,0,0,217,26,1,0,0,0,218,
        219,7,3,0,0,219,28,1,0,0,0,220,222,3,27,10,0,221,220,1,0,0,0,222,
        223,1,0,0,0,223,221,1,0,0,0,223,224,1,0,0,0,224,30,1,0,0,0,225,227,
        5,33,0,0,226,225,1,0,0,0,227,228,1,0,0,0,228,226,1,0,0,0,228,229,
        1,0,0,0,229,233,1,0,0,0,230,232,8,4,0,0,231,230,1,0,0,0,232,235,
        1,0,0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,239,1,0,0,0,235,233,
        1,0,0,0,236,238,5,33,0,0,237,236,1,0,0,0,238,241,1,0,0,0,239,237,
        1,0,0,0,239,240,1,0,0,0,240,245,1,0,0,0,241,239,1,0,0,0,242,244,
        8,4,0,0,243,242,1,0,0,0,244,247,1,0,0,0,245,243,1,0,0,0,245,246,
        1,0,0,0,246,248,1,0,0,0,247,245,1,0,0,0,248,249,6,12,6,0,249,32,
        1,0,0,0,250,252,5,59,0,0,251,250,1,0,0,0,252,253,1,0,0,0,253,251,
        1,0,0,0,253,254,1,0,0,0,254,258,1,0,0,0,255,257,8,4,0,0,256,255,
        1,0,0,0,257,260,1,0,0,0,258,256,1,0,0,0,258,259,1,0,0,0,259,264,
        1,0,0,0,260,258,1,0,0,0,261,263,5,59,0,0,262,261,1,0,0,0,263,266,
        1,0,0,0,264,262,1,0,0,0,264,265,1,0,0,0,265,270,1,0,0,0,266,264,
        1,0,0,0,267,269,8,4,0,0,268,267,1,0,0,0,269,272,1,0,0,0,270,268,
        1,0,0,0,270,271,1,0,0,0,271,273,1,0,0,0,272,270,1,0,0,0,273,274,
        6,13,6,0,274,34,1,0,0,0,275,276,3,45,19,0,276,36,1,0,0,0,277,278,
        7,5,0,0,278,38,1,0,0,0,279,282,3,37,15,0,280,282,3,27,10,0,281,279,
        1,0,0,0,281,280,1,0,0,0,282,40,1,0,0,0,283,286,3,39,16,0,284,286,
        7,6,0,0,285,283,1,0,0,0,285,284,1,0,0,0,286,42,1,0,0,0,287,290,3,
        41,17,0,288,290,7,7,0,0,289,287,1,0,0,0,289,288,1,0,0,0,290,44,1,
        0,0,0,291,295,3,41,17,0,292,294,3,43,18,0,293,292,1,0,0,0,294,297,
        1,0,0,0,295,293,1,0,0,0,295,296,1,0,0,0,296,46,1,0,0,0,297,295,1,
        0,0,0,298,300,7,8,0,0,299,298,1,0,0,0,300,301,1,0,0,0,301,299,1,
        0,0,0,301,302,1,0,0,0,302,303,1,0,0,0,303,304,6,20,7,0,304,48,1,
        0,0,0,305,307,7,4,0,0,306,305,1,0,0,0,307,308,1,0,0,0,308,306,1,
        0,0,0,308,309,1,0,0,0,309,50,1,0,0,0,310,315,5,123,0,0,311,314,3,
        51,22,0,312,314,9,0,0,0,313,311,1,0,0,0,313,312,1,0,0,0,314,317,
        1,0,0,0,315,316,1,0,0,0,315,313,1,0,0,0,316,318,1,0,0,0,317,315,
        1,0,0,0,318,319,5,125,0,0,319,320,1,0,0,0,320,321,6,22,6,0,321,52,
        1,0,0,0,322,348,7,9,0,0,323,325,5,47,0,0,324,326,5,47,0,0,325,324,
        1,0,0,0,326,327,1,0,0,0,327,325,1,0,0,0,327,328,1,0,0,0,328,348,
        1,0,0,0,329,331,5,42,0,0,330,332,5,42,0,0,331,330,1,0,0,0,332,333,
        1,0,0,0,333,331,1,0,0,0,333,334,1,0,0,0,334,348,1,0,0,0,335,337,
        5,61,0,0,336,338,5,61,0,0,337,336,1,0,0,0,338,339,1,0,0,0,339,337,
        1,0,0,0,339,340,1,0,0,0,340,348,1,0,0,0,341,342,5,82,0,0,342,343,
        5,69,0,0,343,344,5,77,0,0,344,345,5,65,0,0,345,346,5,82,0,0,346,
        348,5,75,0,0,347,322,1,0,0,0,347,323,1,0,0,0,347,329,1,0,0,0,347,
        335,1,0,0,0,347,341,1,0,0,0,348,352,1,0,0,0,349,351,5,32,0,0,350,
        349,1,0,0,0,351,354,1,0,0,0,352,350,1,0,0,0,352,353,1,0,0,0,353,
        355,1,0,0,0,354,352,1,0,0,0,355,356,3,49,21,0,356,357,1,0,0,0,357,
        358,6,23,6,0,358,54,1,0,0,0,359,385,7,9,0,0,360,362,5,47,0,0,361,
        363,5,47,0,0,362,361,1,0,0,0,363,364,1,0,0,0,364,362,1,0,0,0,364,
        365,1,0,0,0,365,385,1,0,0,0,366,368,5,42,0,0,367,369,5,42,0,0,368,
        367,1,0,0,0,369,370,1,0,0,0,370,368,1,0,0,0,370,371,1,0,0,0,371,
        385,1,0,0,0,372,374,5,61,0,0,373,375,5,61,0,0,374,373,1,0,0,0,375,
        376,1,0,0,0,376,374,1,0,0,0,376,377,1,0,0,0,377,385,1,0,0,0,378,
        379,5,82,0,0,379,380,5,69,0,0,380,381,5,77,0,0,381,382,5,65,0,0,
        382,383,5,82,0,0,383,385,5,75,0,0,384,359,1,0,0,0,384,360,1,0,0,
        0,384,366,1,0,0,0,384,372,1,0,0,0,384,378,1,0,0,0,385,389,1,0,0,
        0,386,388,8,4,0,0,387,386,1,0,0,0,388,391,1,0,0,0,389,387,1,0,0,
        0,389,390,1,0,0,0,390,392,1,0,0,0,391,389,1,0,0,0,392,393,3,49,21,
        0,393,394,1,0,0,0,394,395,6,24,6,0,395,56,1,0,0,0,396,398,7,1,0,
        0,397,396,1,0,0,0,397,398,1,0,0,0,398,399,1,0,0,0,399,400,3,29,11,
        0,400,58,1,0,0,0,401,403,7,8,0,0,402,401,1,0,0,0,403,404,1,0,0,0,
        404,402,1,0,0,0,404,405,1,0,0,0,405,406,1,0,0,0,406,407,6,26,7,0,
        407,60,1,0,0,0,408,410,7,4,0,0,409,408,1,0,0,0,410,411,1,0,0,0,411,
        409,1,0,0,0,411,412,1,0,0,0,412,413,1,0,0,0,413,414,6,27,8,0,414,
        62,1,0,0,0,415,416,3,45,19,0,416,64,1,0,0,0,417,419,7,8,0,0,418,
        417,1,0,0,0,419,420,1,0,0,0,420,418,1,0,0,0,420,421,1,0,0,0,421,
        422,1,0,0,0,422,423,6,29,7,0,423,66,1,0,0,0,424,426,7,4,0,0,425,
        424,1,0,0,0,426,427,1,0,0,0,427,425,1,0,0,0,427,428,1,0,0,0,428,
        429,1,0,0,0,429,430,6,30,8,0,430,68,1,0,0,0,431,433,7,1,0,0,432,
        431,1,0,0,0,432,433,1,0,0,0,433,434,1,0,0,0,434,435,3,29,11,0,435,
        70,1,0,0,0,436,437,3,45,19,0,437,72,1,0,0,0,438,440,7,8,0,0,439,
        438,1,0,0,0,440,441,1,0,0,0,441,439,1,0,0,0,441,442,1,0,0,0,442,
        443,1,0,0,0,443,444,6,33,7,0,444,74,1,0,0,0,445,447,7,4,0,0,446,
        445,1,0,0,0,447,448,1,0,0,0,448,446,1,0,0,0,448,449,1,0,0,0,449,
        450,1,0,0,0,450,451,6,34,8,0,451,76,1,0,0,0,452,453,3,45,19,0,453,
        78,1,0,0,0,454,456,7,8,0,0,455,454,1,0,0,0,456,457,1,0,0,0,457,455,
        1,0,0,0,457,458,1,0,0,0,458,459,1,0,0,0,459,460,6,36,7,0,460,80,
        1,0,0,0,461,463,7,4,0,0,462,461,1,0,0,0,463,464,1,0,0,0,464,462,
        1,0,0,0,464,465,1,0,0,0,465,466,1,0,0,0,466,467,6,37,8,0,467,82,
        1,0,0,0,468,469,3,45,19,0,469,84,1,0,0,0,470,472,7,8,0,0,471,470,
        1,0,0,0,472,473,1,0,0,0,473,471,1,0,0,0,473,474,1,0,0,0,474,475,
        1,0,0,0,475,476,6,39,7,0,476,86,1,0,0,0,477,479,7,4,0,0,478,477,
        1,0,0,0,479,480,1,0,0,0,480,478,1,0,0,0,480,481,1,0,0,0,481,482,
        1,0,0,0,482,483,6,40,8,0,483,88,1,0,0,0,484,485,3,21,7,0,485,90,
        1,0,0,0,486,488,7,8,0,0,487,486,1,0,0,0,488,489,1,0,0,0,489,487,
        1,0,0,0,489,490,1,0,0,0,490,491,1,0,0,0,491,492,6,42,7,0,492,92,
        1,0,0,0,493,495,7,4,0,0,494,493,1,0,0,0,495,496,1,0,0,0,496,494,
        1,0,0,0,496,497,1,0,0,0,497,498,1,0,0,0,498,499,6,43,8,0,499,94,
        1,0,0,0,57,0,1,2,3,4,5,6,99,185,190,194,197,201,205,208,216,223,
        228,233,239,245,253,258,264,270,281,285,289,295,301,308,313,315,
        327,333,339,347,352,364,370,376,384,389,397,404,411,420,427,432,
        441,448,457,464,473,480,489,496,9,5,1,0,5,2,0,5,3,0,5,4,0,5,5,0,
        5,6,0,0,1,0,6,0,0,4,0,0
    ]

class XeasyPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NUM_OF_DIM_MODE = 1
    FORMAT_MODE = 2
    INAME_MODE = 3
    CYANA_FORMAT_MODE = 4
    SPECTRUM_MODE = 5
    TOLERANCE_MODE = 6

    Num_of_dim = 1
    Format = 2
    Iname = 3
    Cyana_format = 4
    Spectrum = 5
    Tolerance = 6
    Integer = 7
    Float = 8
    Real = 9
    EXCLM_COMMENT = 10
    SMCLN_COMMENT = 11
    Simple_name = 12
    SPACE = 13
    RETURN = 14
    ENCLOSE_COMMENT = 15
    SECTION_COMMENT = 16
    LINE_COMMENT = 17
    Integer_ND = 18
    SPACE_ND = 19
    RETURN_ND = 20
    Simple_name_FO = 21
    SPACE_FO = 22
    RETURN_FO = 23
    Integer_IN = 24
    Simple_name_IN = 25
    SPACE_IN = 26
    RETURN_IN = 27
    Simple_name_CY = 28
    SPACE_CY = 29
    RETURN_CY = 30
    Simple_name_SP = 31
    SPACE_SP = 32
    RETURN_SP = 33
    Float_TO = 34
    TOACE_TO = 35
    RETURN_TO = 36

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "NUM_OF_DIM_MODE", "FORMAT_MODE", "INAME_MODE", 
                  "CYANA_FORMAT_MODE", "SPECTRUM_MODE", "TOLERANCE_MODE" ]

    literalNames = [ "<INVALID>",
            "'#FORMAT'", "'#INAME'", "'#CYANAFORMAT'", "'#SPECTRUM'", "'#TOLERANCE'" ]

    symbolicNames = [ "<INVALID>",
            "Num_of_dim", "Format", "Iname", "Cyana_format", "Spectrum", 
            "Tolerance", "Integer", "Float", "Real", "EXCLM_COMMENT", "SMCLN_COMMENT", 
            "Simple_name", "SPACE", "RETURN", "ENCLOSE_COMMENT", "SECTION_COMMENT", 
            "LINE_COMMENT", "Integer_ND", "SPACE_ND", "RETURN_ND", "Simple_name_FO", 
            "SPACE_FO", "RETURN_FO", "Integer_IN", "Simple_name_IN", "SPACE_IN", 
            "RETURN_IN", "Simple_name_CY", "SPACE_CY", "RETURN_CY", "Simple_name_SP", 
            "SPACE_SP", "RETURN_SP", "Float_TO", "TOACE_TO", "RETURN_TO" ]

    ruleNames = [ "Num_of_dim", "Format", "Iname", "Cyana_format", "Spectrum", 
                  "Tolerance", "Integer", "Float", "Real", "DEC_DOT_DEC", 
                  "DEC_DIGIT", "DECIMAL", "EXCLM_COMMENT", "SMCLN_COMMENT", 
                  "Simple_name", "ALPHA", "ALPHA_NUM", "START_CHAR", "NAME_CHAR", 
                  "SIMPLE_NAME", "SPACE", "RETURN", "ENCLOSE_COMMENT", "SECTION_COMMENT", 
                  "LINE_COMMENT", "Integer_ND", "SPACE_ND", "RETURN_ND", 
                  "Simple_name_FO", "SPACE_FO", "RETURN_FO", "Integer_IN", 
                  "Simple_name_IN", "SPACE_IN", "RETURN_IN", "Simple_name_CY", 
                  "SPACE_CY", "RETURN_CY", "Simple_name_SP", "SPACE_SP", 
                  "RETURN_SP", "Float_TO", "TOACE_TO", "RETURN_TO" ]

    grammarFileName = "XeasyPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


