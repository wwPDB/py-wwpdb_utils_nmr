# Generated from XwinNmrPKLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,15,284,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,
        4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,
        12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,
        18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,1,3,1,74,8,1,1,1,1,1,1,2,3,2,79,8,2,1,2,1,2,3,2,83,8,2,1,
        3,1,3,1,3,1,3,1,3,1,3,3,3,91,8,3,1,4,1,4,1,5,4,5,96,8,5,11,5,12,
        5,97,1,6,4,6,101,8,6,11,6,12,6,102,1,6,1,6,1,7,1,7,1,8,1,8,3,8,111,
        8,8,1,9,1,9,3,9,115,8,9,1,10,1,10,3,10,119,8,10,1,11,4,11,122,8,
        11,11,11,12,11,123,1,11,1,11,1,12,4,12,129,8,12,11,12,12,12,130,
        1,13,1,13,1,14,1,14,1,14,4,14,138,8,14,11,14,12,14,139,1,14,1,14,
        4,14,144,8,14,11,14,12,14,145,1,14,1,14,4,14,150,8,14,11,14,12,14,
        151,1,14,1,14,4,14,156,8,14,11,14,12,14,157,1,14,1,14,4,14,162,8,
        14,11,14,12,14,163,1,14,1,14,4,14,168,8,14,11,14,12,14,169,1,14,
        1,14,1,14,1,14,1,14,1,14,3,14,178,8,14,1,14,5,14,181,8,14,10,14,
        12,14,184,9,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,4,15,193,8,15,
        11,15,12,15,194,1,15,1,15,4,15,199,8,15,11,15,12,15,200,1,15,1,15,
        4,15,205,8,15,11,15,12,15,206,1,15,1,15,4,15,211,8,15,11,15,12,15,
        212,1,15,1,15,4,15,217,8,15,11,15,12,15,218,1,15,1,15,4,15,223,8,
        15,11,15,12,15,224,1,15,1,15,1,15,1,15,1,15,1,15,3,15,233,8,15,1,
        15,5,15,236,8,15,10,15,12,15,239,9,15,1,15,1,15,1,15,1,15,1,16,4,
        16,246,8,16,11,16,12,16,247,1,17,1,17,1,18,4,18,253,8,18,11,18,12,
        18,254,1,18,1,18,1,19,4,19,260,8,19,11,19,12,19,261,1,19,1,19,1,
        20,4,20,267,8,20,11,20,12,20,268,1,21,4,21,272,8,21,11,21,12,21,
        273,1,21,1,21,1,22,4,22,279,8,22,11,22,12,22,280,1,22,1,22,0,0,23,
        3,1,5,2,7,3,9,0,11,0,13,0,15,4,17,0,19,0,21,0,23,0,25,5,27,6,29,
        0,31,7,33,8,35,9,37,10,39,11,41,12,43,13,45,14,47,15,3,0,1,2,11,
        2,0,43,43,45,45,1,0,48,57,3,0,33,33,35,35,42,42,2,0,65,90,97,122,
        6,0,40,40,42,43,45,46,63,63,95,95,123,123,8,0,34,35,37,37,39,39,
        41,41,44,44,47,47,59,59,124,125,2,0,9,9,32,32,2,0,10,10,13,13,5,
        0,35,35,42,43,45,45,47,47,61,62,2,0,59,59,92,92,3,0,9,10,13,13,32,
        32,318,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,15,1,0,0,0,0,25,1,0,
        0,0,0,27,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,1,37,1,0,
        0,0,1,39,1,0,0,0,1,41,1,0,0,0,2,43,1,0,0,0,2,45,1,0,0,0,2,47,1,0,
        0,0,3,49,1,0,0,0,5,73,1,0,0,0,7,78,1,0,0,0,9,90,1,0,0,0,11,92,1,
        0,0,0,13,95,1,0,0,0,15,100,1,0,0,0,17,106,1,0,0,0,19,110,1,0,0,0,
        21,114,1,0,0,0,23,118,1,0,0,0,25,121,1,0,0,0,27,128,1,0,0,0,29,132,
        1,0,0,0,31,177,1,0,0,0,33,232,1,0,0,0,35,245,1,0,0,0,37,249,1,0,
        0,0,39,252,1,0,0,0,41,259,1,0,0,0,43,266,1,0,0,0,45,271,1,0,0,0,
        47,278,1,0,0,0,49,50,5,35,0,0,50,51,5,32,0,0,51,52,5,80,0,0,52,53,
        5,69,0,0,53,54,5,65,0,0,54,55,5,75,0,0,55,56,5,76,0,0,56,57,5,73,
        0,0,57,58,5,83,0,0,58,59,5,84,0,0,59,60,5,95,0,0,60,61,5,68,0,0,
        61,62,5,73,0,0,62,63,5,77,0,0,63,64,5,69,0,0,64,65,5,78,0,0,65,66,
        5,83,0,0,66,67,5,73,0,0,67,68,5,79,0,0,68,69,5,78,0,0,69,70,1,0,
        0,0,70,71,6,0,0,0,71,4,1,0,0,0,72,74,7,0,0,0,73,72,1,0,0,0,73,74,
        1,0,0,0,74,75,1,0,0,0,75,76,3,13,5,0,76,6,1,0,0,0,77,79,7,0,0,0,
        78,77,1,0,0,0,78,79,1,0,0,0,79,82,1,0,0,0,80,83,3,13,5,0,81,83,3,
        9,3,0,82,80,1,0,0,0,82,81,1,0,0,0,83,8,1,0,0,0,84,85,3,13,5,0,85,
        86,5,46,0,0,86,87,3,13,5,0,87,91,1,0,0,0,88,89,5,46,0,0,89,91,3,
        13,5,0,90,84,1,0,0,0,90,88,1,0,0,0,91,10,1,0,0,0,92,93,7,1,0,0,93,
        12,1,0,0,0,94,96,3,11,4,0,95,94,1,0,0,0,96,97,1,0,0,0,97,95,1,0,
        0,0,97,98,1,0,0,0,98,14,1,0,0,0,99,101,7,2,0,0,100,99,1,0,0,0,101,
        102,1,0,0,0,102,100,1,0,0,0,102,103,1,0,0,0,103,104,1,0,0,0,104,
        105,6,6,1,0,105,16,1,0,0,0,106,107,7,3,0,0,107,18,1,0,0,0,108,111,
        3,17,7,0,109,111,3,11,4,0,110,108,1,0,0,0,110,109,1,0,0,0,111,20,
        1,0,0,0,112,115,3,19,8,0,113,115,7,4,0,0,114,112,1,0,0,0,114,113,
        1,0,0,0,115,22,1,0,0,0,116,119,3,21,9,0,117,119,7,5,0,0,118,116,
        1,0,0,0,118,117,1,0,0,0,119,24,1,0,0,0,120,122,7,6,0,0,121,120,1,
        0,0,0,122,123,1,0,0,0,123,121,1,0,0,0,123,124,1,0,0,0,124,125,1,
        0,0,0,125,126,6,11,2,0,126,26,1,0,0,0,127,129,7,7,0,0,128,127,1,
        0,0,0,129,130,1,0,0,0,130,128,1,0,0,0,130,131,1,0,0,0,131,28,1,0,
        0,0,132,133,7,8,0,0,133,30,1,0,0,0,134,178,7,9,0,0,135,137,3,29,
        13,0,136,138,5,47,0,0,137,136,1,0,0,0,138,139,1,0,0,0,139,137,1,
        0,0,0,139,140,1,0,0,0,140,178,1,0,0,0,141,143,3,29,13,0,142,144,
        5,42,0,0,143,142,1,0,0,0,144,145,1,0,0,0,145,143,1,0,0,0,145,146,
        1,0,0,0,146,178,1,0,0,0,147,149,3,29,13,0,148,150,5,45,0,0,149,148,
        1,0,0,0,150,151,1,0,0,0,151,149,1,0,0,0,151,152,1,0,0,0,152,178,
        1,0,0,0,153,155,3,29,13,0,154,156,5,43,0,0,155,154,1,0,0,0,156,157,
        1,0,0,0,157,155,1,0,0,0,157,158,1,0,0,0,158,178,1,0,0,0,159,161,
        3,29,13,0,160,162,5,61,0,0,161,160,1,0,0,0,162,163,1,0,0,0,163,161,
        1,0,0,0,163,164,1,0,0,0,164,178,1,0,0,0,165,167,3,29,13,0,166,168,
        5,62,0,0,167,166,1,0,0,0,168,169,1,0,0,0,169,167,1,0,0,0,169,170,
        1,0,0,0,170,178,1,0,0,0,171,172,5,82,0,0,172,173,5,69,0,0,173,174,
        5,77,0,0,174,175,5,65,0,0,175,176,5,82,0,0,176,178,5,75,0,0,177,
        134,1,0,0,0,177,135,1,0,0,0,177,141,1,0,0,0,177,147,1,0,0,0,177,
        153,1,0,0,0,177,159,1,0,0,0,177,165,1,0,0,0,177,171,1,0,0,0,178,
        182,1,0,0,0,179,181,5,32,0,0,180,179,1,0,0,0,181,184,1,0,0,0,182,
        180,1,0,0,0,182,183,1,0,0,0,183,185,1,0,0,0,184,182,1,0,0,0,185,
        186,3,27,12,0,186,187,1,0,0,0,187,188,6,14,3,0,188,32,1,0,0,0,189,
        233,7,9,0,0,190,192,3,29,13,0,191,193,5,47,0,0,192,191,1,0,0,0,193,
        194,1,0,0,0,194,192,1,0,0,0,194,195,1,0,0,0,195,233,1,0,0,0,196,
        198,3,29,13,0,197,199,5,42,0,0,198,197,1,0,0,0,199,200,1,0,0,0,200,
        198,1,0,0,0,200,201,1,0,0,0,201,233,1,0,0,0,202,204,3,29,13,0,203,
        205,5,45,0,0,204,203,1,0,0,0,205,206,1,0,0,0,206,204,1,0,0,0,206,
        207,1,0,0,0,207,233,1,0,0,0,208,210,3,29,13,0,209,211,5,43,0,0,210,
        209,1,0,0,0,211,212,1,0,0,0,212,210,1,0,0,0,212,213,1,0,0,0,213,
        233,1,0,0,0,214,216,3,29,13,0,215,217,5,61,0,0,216,215,1,0,0,0,217,
        218,1,0,0,0,218,216,1,0,0,0,218,219,1,0,0,0,219,233,1,0,0,0,220,
        222,3,29,13,0,221,223,5,62,0,0,222,221,1,0,0,0,223,224,1,0,0,0,224,
        222,1,0,0,0,224,225,1,0,0,0,225,233,1,0,0,0,226,227,5,82,0,0,227,
        228,5,69,0,0,228,229,5,77,0,0,229,230,5,65,0,0,230,231,5,82,0,0,
        231,233,5,75,0,0,232,189,1,0,0,0,232,190,1,0,0,0,232,196,1,0,0,0,
        232,202,1,0,0,0,232,208,1,0,0,0,232,214,1,0,0,0,232,220,1,0,0,0,
        232,226,1,0,0,0,233,237,1,0,0,0,234,236,8,7,0,0,235,234,1,0,0,0,
        236,239,1,0,0,0,237,235,1,0,0,0,237,238,1,0,0,0,238,240,1,0,0,0,
        239,237,1,0,0,0,240,241,3,27,12,0,241,242,1,0,0,0,242,243,6,15,3,
        0,243,34,1,0,0,0,244,246,8,10,0,0,245,244,1,0,0,0,246,247,1,0,0,
        0,247,245,1,0,0,0,247,248,1,0,0,0,248,36,1,0,0,0,249,250,3,5,1,0,
        250,38,1,0,0,0,251,253,7,6,0,0,252,251,1,0,0,0,253,254,1,0,0,0,254,
        252,1,0,0,0,254,255,1,0,0,0,255,256,1,0,0,0,256,257,6,18,2,0,257,
        40,1,0,0,0,258,260,7,7,0,0,259,258,1,0,0,0,260,261,1,0,0,0,261,259,
        1,0,0,0,261,262,1,0,0,0,262,263,1,0,0,0,263,264,6,19,4,0,264,42,
        1,0,0,0,265,267,8,10,0,0,266,265,1,0,0,0,267,268,1,0,0,0,268,266,
        1,0,0,0,268,269,1,0,0,0,269,44,1,0,0,0,270,272,7,6,0,0,271,270,1,
        0,0,0,272,273,1,0,0,0,273,271,1,0,0,0,273,274,1,0,0,0,274,275,1,
        0,0,0,275,276,6,21,2,0,276,46,1,0,0,0,277,279,7,7,0,0,278,277,1,
        0,0,0,279,280,1,0,0,0,280,278,1,0,0,0,280,281,1,0,0,0,281,282,1,
        0,0,0,282,283,6,22,4,0,283,48,1,0,0,0,36,0,1,2,73,78,82,90,97,102,
        110,114,118,123,130,139,145,151,157,163,169,177,182,194,200,206,
        212,218,224,232,237,247,254,261,268,273,280,5,5,1,0,2,2,0,6,0,0,
        0,1,0,2,0,0
    ]

class XwinNmrPKLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NUM_OF_DIM_MODE = 1
    COMMENT_MODE = 2

    Num_of_dim = 1
    Integer = 2
    Float = 3
    COMMENT = 4
    SPACE = 5
    RETURN = 6
    SECTION_COMMENT = 7
    LINE_COMMENT = 8
    Annotation = 9
    Integer_ND = 10
    SPACE_ND = 11
    RETURN_ND = 12
    Any_name = 13
    SPACE_CM = 14
    RETURN_CM = 15

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "NUM_OF_DIM_MODE", "COMMENT_MODE" ]

    literalNames = [ "<INVALID>",
            "'# PEAKLIST_DIMENSION'" ]

    symbolicNames = [ "<INVALID>",
            "Num_of_dim", "Integer", "Float", "COMMENT", "SPACE", "RETURN", 
            "SECTION_COMMENT", "LINE_COMMENT", "Annotation", "Integer_ND", 
            "SPACE_ND", "RETURN_ND", "Any_name", "SPACE_CM", "RETURN_CM" ]

    ruleNames = [ "Num_of_dim", "Integer", "Float", "DEC_DOT_DEC", "DEC_DIGIT", 
                  "DECIMAL", "COMMENT", "ALPHA", "ALPHA_NUM", "START_CHAR", 
                  "NAME_CHAR", "SPACE", "RETURN", "COMMENT_START_CHAR", 
                  "SECTION_COMMENT", "LINE_COMMENT", "Annotation", "Integer_ND", 
                  "SPACE_ND", "RETURN_ND", "Any_name", "SPACE_CM", "RETURN_CM" ]

    grammarFileName = "XwinNmrPKLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


